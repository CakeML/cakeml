
AllocGlobal [] =
  do
    0 :≡ (GlobalsPtr,[],NONE);
    1 :≡ (Const 0,[],NONE);
    2 :≡ (El,[0; 1],NONE);
    3 :≡ (Const 1,[],NONE);
    4 :≡ (Add,[3; 2],SOME ⦕ 0; 2; 3 ⦖);
    5 :≡ (Const 0,[],NONE);
    6 :≡ (Update,[0; 5; 4],NONE);
    7 :≡ (Length,[0],NONE);
    8 :≡ (Less,[2; 7],SOME ⦕ 0; 2; 6; 7 ⦖);
    if_var 8 (return 6)
      do
        10 :≡ (Const 0,[],NONE);
        11 :≡ (Add,[7; 7],SOME ⦕ 0; 2; 7; 10 ⦖);
        12 :≡ (RefArray,[11; 10],SOME ⦕ 0; 2; 10; 11 ⦖);
        13 :≡ (SetGlobalsPtr,[12],NONE);
        14 :≡ (Const 1,[],NONE);
        15 :≡ (Sub,[2; 14],SOME ⦕ 0; 2; 12; 14 ⦖);
        tailcall_CopyGlobals [12; 0; 15]
      od
  od

CopyGlobals [0; 1; 2] =
  do
    3 :≡ (El,[1; 2],NONE);
    4 :≡ (Update,[0; 2; 3],NONE);
    5 :≡ (Const 0,[],NONE);
    6 :≡ (Equal,[2; 5],SOME ⦕ 0; 1; 2; 4; 5 ⦖);
    if_var 6 (return 4)
      do
        8 :≡ (Const 1,[],NONE);
        9 :≡ (Sub,[2; 8],SOME ⦕ 0; 1; 2; 8 ⦖);
        tailcall_CopyGlobals [0; 1; 9]
      od
  od

start [] =
  do
    0 :≡ (Const 0,[],NONE);
    1 :≡ (Const 319,[],NONE);
    2 :≡ (RefArray,[1; 0],SOME ⦕ 0; 1 ⦖);
    3 :≡ (Const 1,[],NONE);
    4 :≡ (Const 0,[],NONE);
    5 :≡ (Update,[2; 4; 3],NONE);
    6 :≡ (SetGlobalsPtr,[2],NONE);
    call_bvl_init (8,LN) [] (SOME (7,Move 8 7));
    return 8
  od

ListLength [0; 1] =
  do
    2 :≡ (TagLenEq 0 0,[0],NONE);
    if_var 2 (return 1)
      do
        4 :≡ (Const 1,[],NONE);
        5 :≡ (El,[0; 4],NONE);
        6 :≡ (Const 1,[],NONE);
        7 :≡ (Add,[6; 1],SOME ⦕ 1; 5; 6 ⦖);
        tailcall_ListLength [5; 7]
      od
  od

FromListByte [0; 1; 2] =
  do
    3 :≡ (TagLenEq 0 0,[0],NONE);
    if_var 3 (return 2)
      do
        5 :≡ (Const 0,[],NONE);
        6 :≡ (El,[0; 5],NONE);
        7 :≡ (UpdateByte,[2; 1; 6],NONE);
        8 :≡ (Const 1,[],NONE);
        9 :≡ (El,[0; 8],NONE);
        10 :≡ (Const 1,[],NONE);
        11 :≡ (Add,[10; 1],SOME ⦕ 1; 2; 9; 10 ⦖);
        tailcall_FromListByte [9; 11; 2]
      od
  od

ToListByte [0; 1; 2] =
  do
    3 :≡ (EqualInt 0,[1],NONE);
    if_var 3 (return 0)
      do
        5 :≡ (Const 1,[],NONE);
        6 :≡ (Sub,[1; 5],SOME ⦕ 0; 1; 2; 5 ⦖);
        makespace 3 ⦕ 0; 2; 6 ⦖;
        7 :≡ (DerefByte,[2; 6],NONE);
        8 :≡ (Cons 0,[7; 0],NONE);
        tailcall_ToListByte [8; 6; 2]
      od
  od

SumListLength [0; 1] =
  do
    2 :≡ (TagLenEq 0 0,[0],NONE);
    if_var 2 (return 1)
      do
        4 :≡ (Const 1,[],NONE);
        5 :≡ (El,[0; 4],NONE);
        6 :≡ (Const 0,[],NONE);
        7 :≡ (El,[0; 6],NONE);
        8 :≡ (LengthByte,[7],NONE);
        9 :≡ (Add,[8; 1],SOME ⦕ 1; 5; 8 ⦖);
        tailcall_SumListLength [5; 9]
      od
  od

ConcatByte [0; 1; 2] =
  do
    3 :≡ (TagLenEq 0 0,[0],NONE);
    if_var 3 (return 2)
      do
        5 :≡ (Const 0,[],NONE);
        6 :≡ (El,[0; 5],NONE);
        7 :≡ (LengthByte,[6],NONE);
        8 :≡ (Const 0,[],NONE);
        9 :≡ (CopyByte F,[6; 8; 7; 2; 1],SOME ⦕ 0; 1; 2; 6; 7; 8 ⦖);
        10 :≡ (Const 1,[],NONE);
        11 :≡ (El,[0; 10],NONE);
        12 :≡ (Add,[7; 1],SOME ⦕ 1; 2; 7; 11 ⦖);
        tailcall_ConcatByte [11; 12; 2]
      od
  od

bvl_stub_0 [0; 1] =
  do
    2 :≡ (Const 1,[],NONE);
    3 :≡ (El,[1; 2],NONE);
    4 :≡ (Const (-1),[],NONE);
    5 :≡ (Add,[4; 3],SOME ⦕ 0; 1; 3; 4 ⦖);
    6 :≡ (Const 0,[],NONE);
    7 :≡ (Less,[5; 6],SOME ⦕ 0; 1; 5; 6 ⦖);
    if_var 7
      do
        8 :≡ (Const 1,[],NONE);
        9 :≡ (El,[1; 8],NONE);
        10 :≡ (LessConstSmall 5,[9],NONE);
        if_var 10
          do
            11 :≡ (LessConstSmall 2,[9],NONE);
            if_var 11
              do
                12 :≡ (LessConstSmall 1,[9],NONE);
                if_var 12
                  do
                    13 :≡ (Const 0,[],NONE);
                    14 :≡ (El,[1; 13],NONE);
                    call (15,LN) NONE [0; 1; 14] NONE;
                    16 :≡ (Const 1,[],NONE);
                    17 :≡ (El,[15; 16],NONE);
                    18 :≡ (EqualInt 0,[17],NONE);
                    if_var 18
                      do
                        19 :≡ (Const 0,[],NONE);
                        20 :≡ (El,[... ; ... ],NONE);
                        tailcall NONE [15; 20]
                      od (tailcall_bvl_stub_0 [15])
                  od
                  do
                    24 :≡ (Const 0,[],NONE);
                    25 :≡ (El,[1; 24],NONE);
                    call (26,LN) NONE [5; 0; 1; 25] NONE;
                    27 :≡ (Const 1,[],NONE);
                    28 :≡ (El,[26; 27],NONE);
                    29 :≡ (EqualInt 0,[28],NONE);
                    if_var 29
                      do
                        30 :≡ (Const 0,[],NONE);
                        31 :≡ (El,[26; ... ],NONE);
                        tailcall NONE [26; 31]
                      od (tailcall_bvl_stub_0 [26])
                  od
              od
              do
                36 :≡ (LessConstSmall 3,[9],NONE);
                if_var 36
                  do
                    37 :≡ (Const 0,[],NONE);
                    38 :≡ (El,[1; 37],NONE);
                    call (39,LN) NONE [9; 5; 0; 1; 38] NONE;
                    40 :≡ (Const 1,[],NONE);
                    41 :≡ (El,[39; 40],NONE);
                    42 :≡ (EqualInt 0,[41],NONE);
                    if_var 42
                      do
                        43 :≡ (Const 0,[],NONE);
                        44 :≡ (El,[39; ... ],NONE);
                        tailcall NONE [39; 44]
                      od (tailcall_bvl_stub_0 [39])
                  od
                  do
                    48 :≡ (LessConstSmall 4,[9],NONE);
                    if_var 48
                      do
                        49 :≡ (Const 0,[],NONE);
                        50 :≡ (El,[1; 49],NONE);
                        call (51,LN) NONE [9; 9; 5; ... ; ... ] NONE;
                        52 :≡ (Const 1,[],NONE);
                        53 :≡ (El,[51; 52],NONE);
                        54 :≡ (EqualInt 0,[53],NONE);
                        if_var 54
                          do
                            55 :≡ (... ... ,... ,... );
                            56 :≡ (El,... ,... );
                            tailcall NONE [51; ... ]
                          od (tailcall_bvl_stub_0 [51])
                      od
                      do
                        60 :≡ (Const 0,[],NONE);
                        61 :≡ (El,[1; 60],NONE);
                        call (62,LN) NONE [9; 9; 9; 5; ... ; ... ] NONE;
                        63 :≡ (Const 1,[],NONE);
                        64 :≡ (El,[62; 63],NONE);
                        65 :≡ (EqualInt 0,[64],NONE);
                        if_var 65
                          do
                            66 :≡ (Const 0,[],NONE);
                            67 :≡ (El,[... ; ... ],NONE);
                            tailcall NONE [62; 67]
                          od (tailcall_bvl_stub_0 [62])
                      od
                  od
              od
          od
          do
            74 :≡ (LessConstSmall 7,[9],NONE);
            if_var 74
              do
                75 :≡ (LessConstSmall 6,[9],NONE);
                if_var 75
                  do
                    76 :≡ (Const 0,[],NONE);
                    77 :≡ (El,[1; 76],NONE);
                    call (78,LN) NONE [9; 9; 9; 9; 5; ... ; ... ] NONE;
                    79 :≡ (Const 1,[],NONE);
                    80 :≡ (El,[78; 79],NONE);
                    81 :≡ (EqualInt 0,[80],NONE);
                    if_var 81
                      do
                        82 :≡ (Const 0,[],NONE);
                        83 :≡ (El,[78; ... ],NONE);
                        tailcall NONE [78; 83]
                      od (tailcall_bvl_stub_0 [78])
                  od
                  do
                    87 :≡ (Const 0,[],NONE);
                    88 :≡ (El,[1; 87],NONE);
                    call (89,LN) NONE [9; 9; 9; 9; 9; 5; ... ; ... ] NONE;
                    90 :≡ (Const 1,[],NONE);
                    91 :≡ (El,[89; 90],NONE);
                    92 :≡ (EqualInt 0,[91],NONE);
                    if_var 92
                      do
                        93 :≡ (Const 0,[],NONE);
                        94 :≡ (El,[89; 93],NONE);
                        tailcall NONE [89; 94]
                      od (tailcall_bvl_stub_0 [89])
                  od
              od
              do
                99 :≡ (LessConstSmall 8,[9],NONE);
                if_var 99
                  do
                    100 :≡ (Const 0,[],NONE);
                    101 :≡ (El,[1; 100],NONE);
                    call (102,LN) NONE [9; 9; 9; 9; 9; 9; ... ; ... ] NONE;
                    103 :≡ (Const 1,[],NONE);
                    104 :≡ (El,[102; 103],NONE);
                    105 :≡ (EqualInt 0,[104],NONE);
                    if_var 105
                      do
                        106 :≡ (Const 0,[],NONE);
                        107 :≡ (El,[102; 106],NONE);
                        tailcall NONE [102; 107]
                      od (tailcall_bvl_stub_0 [102])
                  od
                  do
                    111 :≡ (LessConstSmall 9,[9],NONE);
                    if_var 111
                      do
                        112 :≡ (Const 0,[],NONE);
                        113 :≡ (El,[1; 112],NONE);
                        call (114,LN) NONE [9; 9; 9; 9; ... ; ... ] NONE;
                        115 :≡ (Const 1,[],NONE);
                        116 :≡ (El,[114; 115],NONE);
                        117 :≡ (EqualInt 0,[116],NONE);
                        if_var 117
                          do
                            118 :≡ (Const 0,[],NONE);
                            119 :≡ (El,[... ; ... ],NONE);
                            tailcall NONE [114; 119]
                          od (tailcall_bvl_stub_0 [114])
                      od
                      do
                        123 :≡ (Const 0,[],NONE);
                        124 :≡ (El,[1; 123],NONE);
                        call (125,LN) NONE [9; 9; 9; 9; 9; ... ; ... ] NONE;
                        126 :≡ (Const 1,[],NONE);
                        127 :≡ (El,[125; 126],NONE);
                        128 :≡ (EqualInt 0,[127],NONE);
                        if_var 128
                          do
                            129 :≡ (Const 0,[],NONE);
                            130 :≡ (El,[125; ... ],NONE);
                            tailcall NONE [125; 130]
                          od (tailcall_bvl_stub_0 [125])
                      od
                  od
              od
          od
      od
      do
        138 :≡ (TagEq 30,[1],NONE);
        if_var 138
          do
            139 :≡ (Const 1,[],NONE);
            140 :≡ (El,[1; 139],NONE);
            141 :≡ (Const 2,[],NONE);
            142 :≡ (Const (-1),[],NONE);
            143 :≡ (Add,[142; 140],SOME ⦕ 0; 1; 5; 140; 141; 142 ⦖);
            144 :≡ (Mult,[143; 140],SOME ⦕ 0; 1; 5; 140; 141; 143 ⦖);
            145 :≡ (Div,[144; 141],SOME ⦕ 0; 1; 5; 141; 144 ⦖);
            makespace 5 ⦕ 0; 1; 5; 145 ⦖;
            146 :≡ (Const 1,[],NONE);
            147 :≡ (GlobalsPtr,[],NONE);
            148 :≡ (El,[147; 146],NONE);
            149 :≡ (El,[148; 145],NONE);
            150 :≡ (Cons 31,[149; 5; 1; 0],NONE);
            return 150
          od
          do
            151 :≡ (LengthBlock,[1],NONE);
            152 :≡ (Const (-3),[],NONE);
            153 :≡ (Add,[152; 151],SOME ⦕ 0; 1; 5; 151; 152 ⦖);
            154 :≡ (Const 2,[],NONE);
            155 :≡ (El,[1; 154],NONE);
            156 :≡ (Const 1,[],NONE);
            157 :≡ (Add,[156; 5],SOME ⦕ 0; 1; 5; 153; 155; 156 ⦖);
            158 :≡ (Add,[157; 153],SOME ⦕ 0; 1; 5; 153; 155; 157 ⦖);
            159 :≡ (Const 2,[],NONE);
            160 :≡ (Const (-1),[],NONE);
            161 :≡ (Add,[160; 158],SOME ⦕ 0; 1; 5; 153; 155; 158; 159; 160 ⦖);
            162 :≡ (Mult,[161; 158],SOME ⦕ 0; 1; 5; 153; 155; 158; 159; 161 ⦖);
            163 :≡ (Div,[162; 159],SOME ⦕ 0; 1; 5; 153; 155; 159; 162 ⦖);
            164 :≡ (Add,[163; 153],SOME ⦕ 0; 1; 5; 153; 155; 163 ⦖);
            165 :≡ (Const 1,[],NONE);
            166 :≡ (GlobalsPtr,[],NONE);
            167 :≡ (El,[166; 165],NONE);
            168 :≡ (El,[167; 164],NONE);
            169 :≡ (Const 4,[],NONE);
            170 :≡ (Add,[169; 153],SOME ⦕ 0; 1; 5; 153; 155; 168; 169 ⦖);
            171 :≡ (Const 3,[],NONE);
            172 :≡
            (ConsExtend 31,[1; 171; 153; 170; 168; 5; 155; 0],
             SOME ⦕ 0; 1; 5; 153; 155; 168; 170; 171 ⦖);
            return 172
          od
      od
  od

bvl_stub_1 [0; 1; 2] =
  do
    3 :≡ (Const 1,[],NONE);
    4 :≡ (El,[2; 3],NONE);
    5 :≡ (Const (-2),[],NONE);
    6 :≡ (Add,[5; 4],SOME ⦕ 0; 1; 2; 4; 5 ⦖);
    7 :≡ (Const 0,[],NONE);
    8 :≡ (Less,[6; 7],SOME ⦕ 0; 1; 2; 6; 7 ⦖);
    if_var 8
      do
        9 :≡ (Const 1,[],NONE);
        10 :≡ (El,[2; 9],NONE);
        11 :≡ (LessConstSmall 5,[10],NONE);
        if_var 11
          do
            12 :≡ (LessConstSmall 2,[10],NONE);
            if_var 12
              do
                13 :≡ (LessConstSmall 1,[10],NONE);
                if_var 13
                  do
                    14 :≡ (Const 0,[],NONE);
                    15 :≡ (El,[2; 14],NONE);
                    call (16,⦕ 0 ⦖) NONE [1; 2; 15] NONE;
                    17 :≡ (Const 1,[],NONE);
                    18 :≡ (El,[16; 17],NONE);
                    19 :≡ (EqualInt 0,[18],NONE);
                    if_var 19
                      do
                        20 :≡ (Const 0,[],NONE);
                        21 :≡ (El,[... ; ... ],NONE);
                        tailcall NONE [0; 16; ... ]
                      od (tailcall_bvl_stub_0 [0; 16])
                  od
                  do
                    25 :≡ (Const 0,[],NONE);
                    26 :≡ (El,[2; 25],NONE);
                    call (27,LN) NONE [0; 1; 2; 26] NONE;
                    28 :≡ (Const 1,[],NONE);
                    29 :≡ (El,[27; 28],NONE);
                    30 :≡ (EqualInt 0,[29],NONE);
                    if_var 30
                      do
                        31 :≡ (Const 0,[],NONE);
                        32 :≡ (El,[27; ... ],NONE);
                        tailcall NONE [27; 32]
                      od (tailcall_bvl_stub_0 [27])
                  od
              od
              do
                37 :≡ (LessConstSmall 3,[10],NONE);
                if_var 37
                  do
                    38 :≡ (Const 0,[],NONE);
                    39 :≡ (El,[2; 38],NONE);
                    call (40,LN) NONE [6; 0; 1; 2; 39] NONE;
                    41 :≡ (Const 1,[],NONE);
                    42 :≡ (El,[40; 41],NONE);
                    43 :≡ (EqualInt 0,[42],NONE);
                    if_var 43
                      do
                        44 :≡ (Const 0,[],NONE);
                        45 :≡ (El,[40; ... ],NONE);
                        tailcall NONE [40; 45]
                      od (tailcall_bvl_stub_0 [40])
                  od
                  do
                    49 :≡ (LessConstSmall 4,[10],NONE);
                    if_var 49
                      do
                        50 :≡ (Const 0,[],NONE);
                        51 :≡ (El,[2; 50],NONE);
                        call (52,LN) NONE [10; 6; 0; ... ; ... ] NONE;
                        53 :≡ (Const 1,[],NONE);
                        54 :≡ (El,[52; 53],NONE);
                        55 :≡ (EqualInt 0,[54],NONE);
                        if_var 55
                          do
                            56 :≡ (... ... ,... ,... );
                            57 :≡ (El,... ,... );
                            tailcall NONE [52; ... ]
                          od (tailcall_bvl_stub_0 [52])
                      od
                      do
                        61 :≡ (Const 0,[],NONE);
                        62 :≡ (El,[2; 61],NONE);
                        call (63,LN) NONE [10; 10; 6; 0; ... ; ... ] NONE;
                        64 :≡ (Const 1,[],NONE);
                        65 :≡ (El,[63; 64],NONE);
                        66 :≡ (EqualInt 0,[65],NONE);
                        if_var 66
                          do
                            67 :≡ (Const 0,[],NONE);
                            68 :≡ (El,[... ; ... ],NONE);
                            tailcall NONE [63; 68]
                          od (tailcall_bvl_stub_0 [63])
                      od
                  od
              od
          od
          do
            75 :≡ (LessConstSmall 7,[10],NONE);
            if_var 75
              do
                76 :≡ (LessConstSmall 6,[10],NONE);
                if_var 76
                  do
                    77 :≡ (Const 0,[],NONE);
                    78 :≡ (El,[2; 77],NONE);
                    call (79,LN) NONE [10; 10; 10; 6; 0; ... ; ... ] NONE;
                    80 :≡ (Const 1,[],NONE);
                    81 :≡ (El,[79; 80],NONE);
                    82 :≡ (EqualInt 0,[81],NONE);
                    if_var 82
                      do
                        83 :≡ (Const 0,[],NONE);
                        84 :≡ (El,[79; ... ],NONE);
                        tailcall NONE [79; 84]
                      od (tailcall_bvl_stub_0 [79])
                  od
                  do
                    88 :≡ (Const 0,[],NONE);
                    89 :≡ (El,[2; 88],NONE);
                    call (90,LN) NONE [10; 10; 10; 10; 6; 0; ... ; ... ] NONE;
                    91 :≡ (Const 1,[],NONE);
                    92 :≡ (El,[90; 91],NONE);
                    93 :≡ (EqualInt 0,[92],NONE);
                    if_var 93
                      do
                        94 :≡ (Const 0,[],NONE);
                        95 :≡ (El,[90; 94],NONE);
                        tailcall NONE [90; 95]
                      od (tailcall_bvl_stub_0 [90])
                  od
              od
              do
                100 :≡ (LessConstSmall 8,[10],NONE);
                if_var 100
                  do
                    101 :≡ (Const 0,[],NONE);
                    102 :≡ (El,[2; 101],NONE);
                    call (103,LN) NONE [10; 10; 10; 10; 10; 6; ... ; ... ] NONE;
                    104 :≡ (Const 1,[],NONE);
                    105 :≡ (El,[103; 104],NONE);
                    106 :≡ (EqualInt 0,[105],NONE);
                    if_var 106
                      do
                        107 :≡ (Const 0,[],NONE);
                        108 :≡ (El,[103; 107],NONE);
                        tailcall NONE [103; 108]
                      od (tailcall_bvl_stub_0 [103])
                  od
                  do
                    112 :≡ (LessConstSmall 9,[10],NONE);
                    if_var 112
                      do
                        113 :≡ (Const 0,[],NONE);
                        114 :≡ (El,[2; 113],NONE);
                        call (115,LN) NONE [10; 10; 10; 10; ... ; ... ] NONE;
                        116 :≡ (Const 1,[],NONE);
                        117 :≡ (El,[115; 116],NONE);
                        118 :≡ (EqualInt 0,[117],NONE);
                        if_var 118
                          do
                            119 :≡ (Const 0,[],NONE);
                            120 :≡ (El,[... ; ... ],NONE);
                            tailcall NONE [115; 120]
                          od (tailcall_bvl_stub_0 [115])
                      od
                      do
                        124 :≡ (Const 0,[],NONE);
                        125 :≡ (El,[2; 124],NONE);
                        call (126,LN) NONE [10; 10; 10; 10; 10; ... ; ... ]
                          NONE;
                        127 :≡ (Const 1,[],NONE);
                        128 :≡ (El,[126; 127],NONE);
                        129 :≡ (EqualInt 0,[128],NONE);
                        if_var 129
                          do
                            130 :≡ (Const 0,[],NONE);
                            131 :≡ (El,[126; ... ],NONE);
                            tailcall NONE [126; 131]
                          od (tailcall_bvl_stub_0 [126])
                      od
                  od
              od
          od
      od
      do
        139 :≡ (TagEq 30,[2],NONE);
        if_var 139
          do
            140 :≡ (Const 1,[],NONE);
            141 :≡ (El,[2; 140],NONE);
            142 :≡ (Const 2,[],NONE);
            143 :≡ (Const (-1),[],NONE);
            144 :≡ (Add,[143; 141],SOME ⦕ 0; 1; 2; 6; 141; 142; 143 ⦖);
            145 :≡ (Mult,[144; 141],SOME ⦕ 0; 1; 2; 6; 141; 142; 144 ⦖);
            146 :≡ (Div,[145; 142],SOME ⦕ 0; 1; 2; 6; 142; 145 ⦖);
            147 :≡ (Const 1,[],NONE);
            148 :≡ (Add,[147; 146],SOME ⦕ 0; 1; 2; 6; 146; 147 ⦖);
            makespace 6 ⦕ 0; 1; 2; 6; 148 ⦖;
            149 :≡ (Const 1,[],NONE);
            150 :≡ (GlobalsPtr,[],NONE);
            151 :≡ (El,[150; 149],NONE);
            152 :≡ (El,[151; 148],NONE);
            153 :≡ (Cons 31,[152; 6; 2; 0; 1],NONE);
            return 153
          od
          do
            154 :≡ (LengthBlock,[2],NONE);
            155 :≡ (Const (-3),[],NONE);
            156 :≡ (Add,[155; 154],SOME ⦕ 0; 1; 2; 6; 154; 155 ⦖);
            157 :≡ (Const 2,[],NONE);
            158 :≡ (El,[2; 157],NONE);
            159 :≡ (Const 2,[],NONE);
            160 :≡ (Add,[159; 6],SOME ⦕ 0; 1; 2; 6; 156; 158; 159 ⦖);
            161 :≡ (Add,[160; 156],SOME ⦕ 0; 1; 2; 6; 156; 158; 160 ⦖);
            162 :≡ (Const 1,[],NONE);
            163 :≡ (Add,[162; 156],SOME ⦕ 0; 1; 2; 6; 156; 158; 161; 162 ⦖);
            164 :≡ (Const 2,[],NONE);
            165 :≡ (Const (-1),[],NONE);
            166 :≡
            (Add,[165; 161],SOME ⦕ 0; 1; 2; 6; 156; 158; 161; 163; 164; 165 ⦖);
            167 :≡
            (Mult,[166; 161],SOME ⦕ 0; 1; 2; 6; 156; 158; 161; 163; 164; 166 ⦖);
            168 :≡
            (Div,[167; 164],SOME ⦕ 0; 1; 2; 6; 156; 158; 163; 164; 167 ⦖);
            169 :≡ (Add,[168; 163],SOME ⦕ 0; 1; 2; 6; 156; 158; 163; 168 ⦖);
            170 :≡ (Const 1,[],NONE);
            171 :≡ (GlobalsPtr,[],NONE);
            172 :≡ (El,[171; 170],NONE);
            173 :≡ (El,[172; 169],NONE);
            174 :≡ (Const 5,[],NONE);
            175 :≡ (Add,[174; 156],SOME ⦕ 0; 1; 2; 6; 156; 158; 173; 174 ⦖);
            176 :≡ (Const 3,[],NONE);
            177 :≡
            (ConsExtend 31,[2; 176; 156; 175; 173; 6; 158; 0; 1],
             SOME ⦕ 0; 1; 2; 6; 156; 158; 173; 175; 176 ⦖);
            return 177
          od
      od
  od

bvl_stub_2 [0; 1; 2; 3] =
  do
    4 :≡ (Const 1,[],NONE);
    5 :≡ (El,[3; 4],NONE);
    6 :≡ (Const (-3),[],NONE);
    7 :≡ (Add,[6; 5],SOME ⦕ 0; 1; 2; 3; 5; 6 ⦖);
    8 :≡ (Const 0,[],NONE);
    9 :≡ (Less,[7; 8],SOME ⦕ 0; 1; 2; 3; 7; 8 ⦖);
    if_var 9
      do
        10 :≡ (Const 1,[],NONE);
        11 :≡ (El,[3; 10],NONE);
        12 :≡ (LessConstSmall 5,[11],NONE);
        if_var 12
          do
            13 :≡ (LessConstSmall 2,[11],NONE);
            if_var 13
              do
                14 :≡ (LessConstSmall 1,[11],NONE);
                if_var 14
                  do
                    15 :≡ (Const 0,[],NONE);
                    16 :≡ (El,[3; 15],NONE);
                    call (17,⦕ 0; 1 ⦖) NONE [2; 3; 16] NONE;
                    18 :≡ (Const 1,[],NONE);
                    19 :≡ (El,[17; 18],NONE);
                    20 :≡ (EqualInt 1,[19],NONE);
                    if_var 20
                      do
                        21 :≡ (Const 0,[],NONE);
                        22 :≡ (El,[... ; ... ],NONE);
                        tailcall NONE [0; 1; ... ; ... ]
                      od (tailcall_bvl_stub_1 [0; 1; 17])
                  od
                  do
                    26 :≡ (Const 0,[],NONE);
                    27 :≡ (El,[3; 26],NONE);
                    call (28,⦕ 0 ⦖) NONE [1; 2; 3; 27] NONE;
                    29 :≡ (Const 1,[],NONE);
                    30 :≡ (El,[28; 29],NONE);
                    31 :≡ (EqualInt 0,[30],NONE);
                    if_var 31
                      do
                        32 :≡ (Const 0,[],NONE);
                        33 :≡ (El,[28; ... ],NONE);
                        tailcall NONE [0; 28; 33]
                      od (tailcall_bvl_stub_0 [0; 28])
                  od
              od
              do
                38 :≡ (LessConstSmall 3,[11],NONE);
                if_var 38
                  do
                    39 :≡ (Const 0,[],NONE);
                    40 :≡ (El,[3; 39],NONE);
                    call (41,LN) NONE [0; 1; 2; 3; 40] NONE;
                    42 :≡ (Const 1,[],NONE);
                    43 :≡ (El,[41; 42],NONE);
                    44 :≡ (EqualInt 0,[43],NONE);
                    if_var 44
                      do
                        45 :≡ (Const 0,[],NONE);
                        46 :≡ (El,[41; ... ],NONE);
                        tailcall NONE [41; 46]
                      od (tailcall_bvl_stub_0 [41])
                  od
                  do
                    50 :≡ (LessConstSmall 4,[11],NONE);
                    if_var 50
                      do
                        51 :≡ (Const 0,[],NONE);
                        52 :≡ (El,[3; 51],NONE);
                        call (53,LN) NONE [7; 0; 1; ... ; ... ] NONE;
                        54 :≡ (Const 1,[],NONE);
                        55 :≡ (El,[53; 54],NONE);
                        56 :≡ (EqualInt 0,[55],NONE);
                        if_var 56
                          do
                            57 :≡ (... ... ,... ,... );
                            58 :≡ (El,... ,... );
                            tailcall NONE [53; ... ]
                          od (tailcall_bvl_stub_0 [53])
                      od
                      do
                        62 :≡ (Const 0,[],NONE);
                        63 :≡ (El,[3; 62],NONE);
                        call (64,LN) NONE [11; 7; 0; 1; ... ; ... ] NONE;
                        65 :≡ (Const 1,[],NONE);
                        66 :≡ (El,[64; 65],NONE);
                        67 :≡ (EqualInt 0,[66],NONE);
                        if_var 67
                          do
                            68 :≡ (Const 0,[],NONE);
                            69 :≡ (El,[... ; ... ],NONE);
                            tailcall NONE [64; 69]
                          od (tailcall_bvl_stub_0 [64])
                      od
                  od
              od
          od
          do
            76 :≡ (LessConstSmall 7,[11],NONE);
            if_var 76
              do
                77 :≡ (LessConstSmall 6,[11],NONE);
                if_var 77
                  do
                    78 :≡ (Const 0,[],NONE);
                    79 :≡ (El,[3; 78],NONE);
                    call (80,LN) NONE [11; 11; 7; 0; 1; ... ; ... ] NONE;
                    81 :≡ (Const 1,[],NONE);
                    82 :≡ (El,[80; 81],NONE);
                    83 :≡ (EqualInt 0,[82],NONE);
                    if_var 83
                      do
                        84 :≡ (Const 0,[],NONE);
                        85 :≡ (El,[80; ... ],NONE);
                        tailcall NONE [80; 85]
                      od (tailcall_bvl_stub_0 [80])
                  od
                  do
                    89 :≡ (Const 0,[],NONE);
                    90 :≡ (El,[3; 89],NONE);
                    call (91,LN) NONE [11; 11; 11; 7; 0; 1; ... ; ... ] NONE;
                    92 :≡ (Const 1,[],NONE);
                    93 :≡ (El,[91; 92],NONE);
                    94 :≡ (EqualInt 0,[93],NONE);
                    if_var 94
                      do
                        95 :≡ (Const 0,[],NONE);
                        96 :≡ (El,[91; 95],NONE);
                        tailcall NONE [91; 96]
                      od (tailcall_bvl_stub_0 [91])
                  od
              od
              do
                101 :≡ (LessConstSmall 8,[11],NONE);
                if_var 101
                  do
                    102 :≡ (Const 0,[],NONE);
                    103 :≡ (El,[3; 102],NONE);
                    call (104,LN) NONE [11; 11; 11; 11; 7; 0; ... ; ... ] NONE;
                    105 :≡ (Const 1,[],NONE);
                    106 :≡ (El,[104; 105],NONE);
                    107 :≡ (EqualInt 0,[106],NONE);
                    if_var 107
                      do
                        108 :≡ (Const 0,[],NONE);
                        109 :≡ (El,[104; 108],NONE);
                        tailcall NONE [104; 109]
                      od (tailcall_bvl_stub_0 [104])
                  od
                  do
                    113 :≡ (LessConstSmall 9,[11],NONE);
                    if_var 113
                      do
                        114 :≡ (Const 0,[],NONE);
                        115 :≡ (El,[3; 114],NONE);
                        call (116,LN) NONE [11; 11; 11; 11; ... ; ... ] NONE;
                        117 :≡ (Const 1,[],NONE);
                        118 :≡ (El,[116; 117],NONE);
                        119 :≡ (EqualInt 0,[118],NONE);
                        if_var 119
                          do
                            120 :≡ (Const 0,[],NONE);
                            121 :≡ (El,[... ; ... ],NONE);
                            tailcall NONE [116; 121]
                          od (tailcall_bvl_stub_0 [116])
                      od
                      do
                        125 :≡ (Const 0,[],NONE);
                        126 :≡ (El,[3; 125],NONE);
                        call (127,LN) NONE [11; 11; 11; 11; 11; ... ; ... ]
                          NONE;
                        128 :≡ (Const 1,[],NONE);
                        129 :≡ (El,[127; 128],NONE);
                        130 :≡ (EqualInt 0,[129],NONE);
                        if_var 130
                          do
                            131 :≡ (Const 0,[],NONE);
                            132 :≡ (El,[127; ... ],NONE);
                            tailcall NONE [127; 132]
                          od (tailcall_bvl_stub_0 [127])
                      od
                  od
              od
          od
      od
      do
        140 :≡ (TagEq 30,[3],NONE);
        if_var 140
          do
            141 :≡ (Const 1,[],NONE);
            142 :≡ (El,[3; 141],NONE);
            143 :≡ (Const 2,[],NONE);
            144 :≡ (Const (-1),[],NONE);
            145 :≡ (Add,[144; 142],SOME ⦕ 0; 1; 2; 3; 7; 142; 143; 144 ⦖);
            146 :≡ (Mult,[145; 142],SOME ⦕ 0; 1; 2; 3; 7; 142; 143; 145 ⦖);
            147 :≡ (Div,[146; 143],SOME ⦕ 0; 1; 2; 3; 7; 143; 146 ⦖);
            148 :≡ (Const 2,[],NONE);
            149 :≡ (Add,[148; 147],SOME ⦕ 0; 1; 2; 3; 7; 147; 148 ⦖);
            makespace 7 ⦕ 0; 1; 2; 3; 7; 149 ⦖;
            150 :≡ (Const 1,[],NONE);
            151 :≡ (GlobalsPtr,[],NONE);
            152 :≡ (El,[151; 150],NONE);
            153 :≡ (El,[152; 149],NONE);
            154 :≡ (Cons 31,[153; 7; 3; 0; 1; 2],NONE);
            return 154
          od
          do
            155 :≡ (LengthBlock,[3],NONE);
            156 :≡ (Const (-3),[],NONE);
            157 :≡ (Add,[156; 155],SOME ⦕ 0; 1; 2; 3; 7; 155; 156 ⦖);
            158 :≡ (Const 2,[],NONE);
            159 :≡ (El,[3; 158],NONE);
            160 :≡ (Const 3,[],NONE);
            161 :≡ (Add,[160; 7],SOME ⦕ 0; 1; 2; 3; 7; 157; 159; 160 ⦖);
            162 :≡ (Add,[161; 157],SOME ⦕ 0; 1; 2; 3; 7; 157; 159; 161 ⦖);
            163 :≡ (Const 2,[],NONE);
            164 :≡ (Add,[163; 157],SOME ⦕ 0; 1; 2; 3; 7; 157; 159; 162; 163 ⦖);
            165 :≡ (Const 2,[],NONE);
            166 :≡ (Const (-1),[],NONE);
            167 :≡
            (Add,[166; 162],
             SOME ⦕ 0; 1; 2; 3; 7; 157; 159; 162; 164; 165; 166 ⦖);
            168 :≡
            (Mult,[167; 162],
             SOME ⦕ 0; 1; 2; 3; 7; 157; 159; 162; 164; 165; 167 ⦖);
            169 :≡
            (Div,[168; 165],SOME ⦕ 0; 1; 2; 3; 7; 157; 159; 164; 165; 168 ⦖);
            170 :≡ (Add,[169; 164],SOME ⦕ 0; 1; 2; 3; 7; 157; 159; 164; 169 ⦖);
            171 :≡ (Const 1,[],NONE);
            172 :≡ (GlobalsPtr,[],NONE);
            173 :≡ (El,[172; 171],NONE);
            174 :≡ (El,[173; 170],NONE);
            175 :≡ (Const 6,[],NONE);
            176 :≡ (Add,[175; 157],SOME ⦕ 0; 1; 2; 3; 7; 157; 159; 174; 175 ⦖);
            177 :≡ (Const 3,[],NONE);
            178 :≡
            (ConsExtend 31,[3; 177; 157; 176; 174; 7; 159; 0; 1; 2],
             SOME ⦕ 0; 1; 2; 3; 7; 157; 159; 174; 176; 177 ⦖);
            return 178
          od
      od
  od

bvl_stub_3 [0; 1; 2; 3; 4] =
  do
    5 :≡ (Const 1,[],NONE);
    6 :≡ (El,[4; 5],NONE);
    7 :≡ (Const (-4),[],NONE);
    8 :≡ (Add,[7; 6],SOME ⦕ 0; 1; 2; 3; 4; 6; 7 ⦖);
    9 :≡ (Const 0,[],NONE);
    10 :≡ (Less,[8; 9],SOME ⦕ 0; 1; 2; 3; 4; 8; 9 ⦖);
    if_var 10
      do
        11 :≡ (Const 1,[],NONE);
        12 :≡ (El,[4; 11],NONE);
        13 :≡ (LessConstSmall 5,[12],NONE);
        if_var 13
          do
            14 :≡ (LessConstSmall 2,[12],NONE);
            if_var 14
              do
                15 :≡ (LessConstSmall 1,[12],NONE);
                if_var 15
                  do
                    16 :≡ (Const 0,[],NONE);
                    17 :≡ (El,[4; 16],NONE);
                    call (18,⦕ 0; 1; 2 ⦖) NONE [3; 4; 17] NONE;
                    19 :≡ (Const 1,[],NONE);
                    20 :≡ (El,[18; 19],NONE);
                    21 :≡ (EqualInt 2,[20],NONE);
                    if_var 21
                      do
                        22 :≡ (Const 0,[],NONE);
                        23 :≡ (El,[... ; ... ],NONE);
                        tailcall NONE [0; 1; ... ; ... ]
                      od (tailcall_bvl_stub_2 [0; 1; 2; 18])
                  od
                  do
                    27 :≡ (Const 0,[],NONE);
                    28 :≡ (El,[4; 27],NONE);
                    call (29,⦕ 0; 1 ⦖) NONE [2; 3; 4; 28] NONE;
                    30 :≡ (Const 1,[],NONE);
                    31 :≡ (El,[29; 30],NONE);
                    32 :≡ (EqualInt 1,[31],NONE);
                    if_var 32
                      do
                        33 :≡ (Const 0,[],NONE);
                        34 :≡ (El,[29; ... ],NONE);
                        tailcall NONE [0; 1; 29; ... ]
                      od (tailcall_bvl_stub_1 [0; 1; 29])
                  od
              od
              do
                39 :≡ (LessConstSmall 3,[12],NONE);
                if_var 39
                  do
                    40 :≡ (Const 0,[],NONE);
                    41 :≡ (El,[4; 40],NONE);
                    call (42,⦕ 0 ⦖) NONE [1; 2; 3; 4; 41] NONE;
                    43 :≡ (Const 1,[],NONE);
                    44 :≡ (El,[42; 43],NONE);
                    45 :≡ (EqualInt 0,[44],NONE);
                    if_var 45
                      do
                        46 :≡ (Const 0,[],NONE);
                        47 :≡ (El,[42; ... ],NONE);
                        tailcall NONE [0; 42; 47]
                      od (tailcall_bvl_stub_0 [0; 42])
                  od
                  do
                    51 :≡ (LessConstSmall 4,[12],NONE);
                    if_var 51
                      do
                        52 :≡ (Const 0,[],NONE);
                        53 :≡ (El,[4; 52],NONE);
                        call (54,LN) NONE [0; 1; 2; ... ; ... ] NONE;
                        55 :≡ (Const 1,[],NONE);
                        56 :≡ (El,[54; 55],NONE);
                        57 :≡ (EqualInt 0,[56],NONE);
                        if_var 57
                          do
                            58 :≡ (... ... ,... ,... );
                            59 :≡ (El,... ,... );
                            tailcall NONE [54; ... ]
                          od (tailcall_bvl_stub_0 [54])
                      od
                      do
                        63 :≡ (Const 0,[],NONE);
                        64 :≡ (El,[4; 63],NONE);
                        call (65,LN) NONE [8; 0; 1; 2; ... ; ... ] NONE;
                        66 :≡ (Const 1,[],NONE);
                        67 :≡ (El,[65; 66],NONE);
                        68 :≡ (EqualInt 0,[67],NONE);
                        if_var 68
                          do
                            69 :≡ (Const 0,[],NONE);
                            70 :≡ (El,[... ; ... ],NONE);
                            tailcall NONE [65; 70]
                          od (tailcall_bvl_stub_0 [65])
                      od
                  od
              od
          od
          do
            77 :≡ (LessConstSmall 7,[12],NONE);
            if_var 77
              do
                78 :≡ (LessConstSmall 6,[12],NONE);
                if_var 78
                  do
                    79 :≡ (Const 0,[],NONE);
                    80 :≡ (El,[4; 79],NONE);
                    call (81,LN) NONE [12; 8; 0; 1; 2; ... ; ... ] NONE;
                    82 :≡ (Const 1,[],NONE);
                    83 :≡ (El,[81; 82],NONE);
                    84 :≡ (EqualInt 0,[83],NONE);
                    if_var 84
                      do
                        85 :≡ (Const 0,[],NONE);
                        86 :≡ (El,[81; ... ],NONE);
                        tailcall NONE [81; 86]
                      od (tailcall_bvl_stub_0 [81])
                  od
                  do
                    90 :≡ (Const 0,[],NONE);
                    91 :≡ (El,[4; 90],NONE);
                    call (92,LN) NONE [12; 12; 8; 0; 1; 2; ... ; ... ] NONE;
                    93 :≡ (Const 1,[],NONE);
                    94 :≡ (El,[92; 93],NONE);
                    95 :≡ (EqualInt 0,[94],NONE);
                    if_var 95
                      do
                        96 :≡ (Const 0,[],NONE);
                        97 :≡ (El,[92; 96],NONE);
                        tailcall NONE [92; 97]
                      od (tailcall_bvl_stub_0 [92])
                  od
              od
              do
                102 :≡ (LessConstSmall 8,[12],NONE);
                if_var 102
                  do
                    103 :≡ (Const 0,[],NONE);
                    104 :≡ (El,[4; 103],NONE);
                    call (105,LN) NONE [12; 12; 12; 8; 0; 1; ... ; ... ] NONE;
                    106 :≡ (Const 1,[],NONE);
                    107 :≡ (El,[105; 106],NONE);
                    108 :≡ (EqualInt 0,[107],NONE);
                    if_var 108
                      do
                        109 :≡ (Const 0,[],NONE);
                        110 :≡ (El,[105; 109],NONE);
                        tailcall NONE [105; 110]
                      od (tailcall_bvl_stub_0 [105])
                  od
                  do
                    114 :≡ (LessConstSmall 9,[12],NONE);
                    if_var 114
                      do
                        115 :≡ (Const 0,[],NONE);
                        116 :≡ (El,[4; 115],NONE);
                        call (117,LN) NONE [12; 12; 12; 12; ... ; ... ] NONE;
                        118 :≡ (Const 1,[],NONE);
                        119 :≡ (El,[117; 118],NONE);
                        120 :≡ (EqualInt 0,[119],NONE);
                        if_var 120
                          do
                            121 :≡ (Const 0,[],NONE);
                            122 :≡ (El,[... ; ... ],NONE);
                            tailcall NONE [117; 122]
                          od (tailcall_bvl_stub_0 [117])
                      od
                      do
                        126 :≡ (Const 0,[],NONE);
                        127 :≡ (El,[4; 126],NONE);
                        call (128,LN) NONE [12; 12; 12; 12; 12; ... ; ... ]
                          NONE;
                        129 :≡ (Const 1,[],NONE);
                        130 :≡ (El,[128; 129],NONE);
                        131 :≡ (EqualInt 0,[130],NONE);
                        if_var 131
                          do
                            132 :≡ (Const 0,[],NONE);
                            133 :≡ (El,[128; ... ],NONE);
                            tailcall NONE [128; 133]
                          od (tailcall_bvl_stub_0 [128])
                      od
                  od
              od
          od
      od
      do
        141 :≡ (TagEq 30,[4],NONE);
        if_var 141
          do
            142 :≡ (Const 1,[],NONE);
            143 :≡ (El,[4; 142],NONE);
            144 :≡ (Const 2,[],NONE);
            145 :≡ (Const (-1),[],NONE);
            146 :≡ (Add,[145; 143],SOME ⦕ 0; 1; 2; 3; 4; 8; 143; 144; 145 ⦖);
            147 :≡ (Mult,[146; 143],SOME ⦕ 0; 1; 2; 3; 4; 8; 143; 144; 146 ⦖);
            148 :≡ (Div,[147; 144],SOME ⦕ 0; 1; 2; 3; 4; 8; 144; 147 ⦖);
            149 :≡ (Const 3,[],NONE);
            150 :≡ (Add,[149; 148],SOME ⦕ 0; 1; 2; 3; 4; 8; 148; 149 ⦖);
            makespace 8 ⦕ 0; 1; 2; 3; 4; 8; 150 ⦖;
            151 :≡ (Const 1,[],NONE);
            152 :≡ (GlobalsPtr,[],NONE);
            153 :≡ (El,[152; 151],NONE);
            154 :≡ (El,[153; 150],NONE);
            155 :≡ (Cons 31,[154; 8; 4; 0; 1; 2; 3],NONE);
            return 155
          od
          do
            156 :≡ (LengthBlock,[4],NONE);
            157 :≡ (Const (-3),[],NONE);
            158 :≡ (Add,[157; 156],SOME ⦕ 0; 1; 2; 3; 4; 8; 156; 157 ⦖);
            159 :≡ (Const 2,[],NONE);
            160 :≡ (El,[4; 159],NONE);
            161 :≡ (Const 4,[],NONE);
            162 :≡ (Add,[161; 8],SOME ⦕ 0; 1; 2; 3; 4; 8; 158; 160; 161 ⦖);
            163 :≡ (Add,[162; 158],SOME ⦕ 0; 1; 2; 3; 4; 8; 158; 160; 162 ⦖);
            164 :≡ (Const 3,[],NONE);
            165 :≡
            (Add,[164; 158],SOME ⦕ 0; 1; 2; 3; 4; 8; 158; 160; 163; 164 ⦖);
            166 :≡ (Const 2,[],NONE);
            167 :≡ (Const (-1),[],NONE);
            168 :≡
            (Add,[167; 163],
             SOME ⦕ 0; 1; 2; 3; 4; 8; 158; 160; 163; 165; 166; 167 ⦖);
            169 :≡
            (Mult,[168; 163],
             SOME ⦕ 0; 1; 2; 3; 4; 8; 158; 160; 163; 165; 166; 168 ⦖);
            170 :≡
            (Div,[169; 166],SOME ⦕ 0; 1; 2; 3; 4; 8; 158; 160; 165; 166; 169 ⦖);
            171 :≡
            (Add,[170; 165],SOME ⦕ 0; 1; 2; 3; 4; 8; 158; 160; 165; 170 ⦖);
            172 :≡ (Const 1,[],NONE);
            173 :≡ (GlobalsPtr,[],NONE);
            174 :≡ (El,[173; 172],NONE);
            175 :≡ (El,[174; 171],NONE);
            176 :≡ (Const 7,[],NONE);
            177 :≡
            (Add,[176; 158],SOME ⦕ 0; 1; 2; 3; 4; 8; 158; 160; 175; 176 ⦖);
            178 :≡ (Const 3,[],NONE);
            179 :≡
            (ConsExtend 31,[4; 178; 158; 177; 175; 8; 160; 0; 1; 2; 3],
             SOME ⦕ 0; 1; 2; 3; 4; 8; 158; 160; 175; 177; 178 ⦖);
            return 179
          od
      od
  od

bvl_stub_4 [0; 1; 2; 3; 4; 5] =
  do
    6 :≡ (Const 1,[],NONE);
    7 :≡ (El,[5; 6],NONE);
    8 :≡ (Const (-5),[],NONE);
    9 :≡ (Add,[8; 7],SOME ⦕ 0; 1; 2; 3; 4; 5; 7; 8 ⦖);
    10 :≡ (Const 0,[],NONE);
    11 :≡ (Less,[9; 10],SOME ⦕ 0; 1; 2; 3; 4; 5; 9; 10 ⦖);
    if_var 11
      do
        12 :≡ (Const 1,[],NONE);
        13 :≡ (El,[5; 12],NONE);
        14 :≡ (LessConstSmall 5,[13],NONE);
        if_var 14
          do
            15 :≡ (LessConstSmall 2,[13],NONE);
            if_var 15
              do
                16 :≡ (LessConstSmall 1,[13],NONE);
                if_var 16
                  do
                    17 :≡ (Const 0,[],NONE);
                    18 :≡ (El,[5; 17],NONE);
                    call (19,⦕ 0; 1; 2; 3 ⦖) NONE [4; 5; 18] NONE;
                    20 :≡ (Const 1,[],NONE);
                    21 :≡ (El,[19; 20],NONE);
                    22 :≡ (EqualInt 3,[21],NONE);
                    if_var 22
                      do
                        23 :≡ (Const 0,[],NONE);
                        24 :≡ (El,[... ; ... ],NONE);
                        tailcall NONE [0; 1; ... ; ... ]
                      od (tailcall_bvl_stub_3 [0; 1; 2; 3; ... ])
                  od
                  do
                    28 :≡ (Const 0,[],NONE);
                    29 :≡ (El,[5; 28],NONE);
                    call (30,⦕ 0; 1; 2 ⦖) NONE [3; 4; 5; 29] NONE;
                    31 :≡ (Const 1,[],NONE);
                    32 :≡ (El,[30; 31],NONE);
                    33 :≡ (EqualInt 2,[32],NONE);
                    if_var 33
                      do
                        34 :≡ (Const 0,[],NONE);
                        35 :≡ (El,[30; ... ],NONE);
                        tailcall NONE [0; 1; 2; ... ; ... ]
                      od (tailcall_bvl_stub_2 [0; 1; 2; 30])
                  od
              od
              do
                40 :≡ (LessConstSmall 3,[13],NONE);
                if_var 40
                  do
                    41 :≡ (Const 0,[],NONE);
                    42 :≡ (El,[5; 41],NONE);
                    call (43,⦕ 0; 1 ⦖) NONE [2; 3; 4; 5; 42] NONE;
                    44 :≡ (Const 1,[],NONE);
                    45 :≡ (El,[43; 44],NONE);
                    46 :≡ (EqualInt 1,[45],NONE);
                    if_var 46
                      do
                        47 :≡ (Const 0,[],NONE);
                        48 :≡ (El,[43; ... ],NONE);
                        tailcall NONE [0; 1; 43; ... ]
                      od (tailcall_bvl_stub_1 [0; 1; 43])
                  od
                  do
                    52 :≡ (LessConstSmall 4,[13],NONE);
                    if_var 52
                      do
                        53 :≡ (Const 0,[],NONE);
                        54 :≡ (El,[5; 53],NONE);
                        call (55,⦕ 0 ⦖) NONE [1; 2; 3; ... ; ... ] NONE;
                        56 :≡ (Const 1,[],NONE);
                        57 :≡ (El,[55; 56],NONE);
                        58 :≡ (EqualInt 0,[57],NONE);
                        if_var 58
                          do
                            59 :≡ (... ... ,... ,... );
                            60 :≡ (El,... ,... );
                            tailcall NONE [0; ... ; ... ]
                          od (tailcall_bvl_stub_0 [0; 55])
                      od
                      do
                        64 :≡ (Const 0,[],NONE);
                        65 :≡ (El,[5; 64],NONE);
                        call (66,LN) NONE [0; 1; 2; 3; ... ; ... ] NONE;
                        67 :≡ (Const 1,[],NONE);
                        68 :≡ (El,[66; 67],NONE);
                        69 :≡ (EqualInt 0,[68],NONE);
                        if_var 69
                          do
                            70 :≡ (Const 0,[],NONE);
                            71 :≡ (El,[... ; ... ],NONE);
                            tailcall NONE [66; 71]
                          od (tailcall_bvl_stub_0 [66])
                      od
                  od
              od
          od
          do
            78 :≡ (LessConstSmall 7,[13],NONE);
            if_var 78
              do
                79 :≡ (LessConstSmall 6,[13],NONE);
                if_var 79
                  do
                    80 :≡ (Const 0,[],NONE);
                    81 :≡ (El,[5; 80],NONE);
                    call (82,LN) NONE [9; 0; 1; 2; 3; ... ; ... ] NONE;
                    83 :≡ (Const 1,[],NONE);
                    84 :≡ (El,[82; 83],NONE);
                    85 :≡ (EqualInt 0,[84],NONE);
                    if_var 85
                      do
                        86 :≡ (Const 0,[],NONE);
                        87 :≡ (El,[82; ... ],NONE);
                        tailcall NONE [82; 87]
                      od (tailcall_bvl_stub_0 [82])
                  od
                  do
                    91 :≡ (Const 0,[],NONE);
                    92 :≡ (El,[5; 91],NONE);
                    call (93,LN) NONE [13; 9; 0; 1; 2; 3; ... ; ... ] NONE;
                    94 :≡ (Const 1,[],NONE);
                    95 :≡ (El,[93; 94],NONE);
                    96 :≡ (EqualInt 0,[95],NONE);
                    if_var 96
                      do
                        97 :≡ (Const 0,[],NONE);
                        98 :≡ (El,[93; 97],NONE);
                        tailcall NONE [93; 98]
                      od (tailcall_bvl_stub_0 [93])
                  od
              od
              do
                103 :≡ (LessConstSmall 8,[13],NONE);
                if_var 103
                  do
                    104 :≡ (Const 0,[],NONE);
                    105 :≡ (El,[5; 104],NONE);
                    call (106,LN) NONE [13; 13; 9; 0; 1; 2; ... ; ... ] NONE;
                    107 :≡ (Const 1,[],NONE);
                    108 :≡ (El,[106; 107],NONE);
                    109 :≡ (EqualInt 0,[108],NONE);
                    if_var 109
                      do
                        110 :≡ (Const 0,[],NONE);
                        111 :≡ (El,[106; 110],NONE);
                        tailcall NONE [106; 111]
                      od (tailcall_bvl_stub_0 [106])
                  od
                  do
                    115 :≡ (LessConstSmall 9,[13],NONE);
                    if_var 115
                      do
                        116 :≡ (Const 0,[],NONE);
                        117 :≡ (El,[5; 116],NONE);
                        call (118,LN) NONE [13; 13; 13; 9; ... ; ... ] NONE;
                        119 :≡ (Const 1,[],NONE);
                        120 :≡ (El,[118; 119],NONE);
                        121 :≡ (EqualInt 0,[120],NONE);
                        if_var 121
                          do
                            122 :≡ (Const 0,[],NONE);
                            123 :≡ (El,[... ; ... ],NONE);
                            tailcall NONE [118; 123]
                          od (tailcall_bvl_stub_0 [118])
                      od
                      do
                        127 :≡ (Const 0,[],NONE);
                        128 :≡ (El,[5; 127],NONE);
                        call (129,LN) NONE [13; 13; 13; 13; 9; ... ; ... ] NONE;
                        130 :≡ (Const 1,[],NONE);
                        131 :≡ (El,[129; 130],NONE);
                        132 :≡ (EqualInt 0,[131],NONE);
                        if_var 132
                          do
                            133 :≡ (Const 0,[],NONE);
                            134 :≡ (El,[129; ... ],NONE);
                            tailcall NONE [129; 134]
                          od (tailcall_bvl_stub_0 [129])
                      od
                  od
              od
          od
      od
      do
        142 :≡ (TagEq 30,[5],NONE);
        if_var 142
          do
            143 :≡ (Const 1,[],NONE);
            144 :≡ (El,[5; 143],NONE);
            145 :≡ (Const 2,[],NONE);
            146 :≡ (Const (-1),[],NONE);
            147 :≡ (Add,[146; 144],SOME ⦕ 0; 1; 2; 3; 4; 5; 9; 144; 145; 146 ⦖);
            148 :≡
            (Mult,[147; 144],SOME ⦕ 0; 1; 2; 3; 4; 5; 9; 144; 145; 147 ⦖);
            149 :≡ (Div,[148; 145],SOME ⦕ 0; 1; 2; 3; 4; 5; 9; 145; 148 ⦖);
            150 :≡ (Const 4,[],NONE);
            151 :≡ (Add,[150; 149],SOME ⦕ 0; 1; 2; 3; 4; 5; 9; 149; 150 ⦖);
            makespace 9 ⦕ 0; 1; 2; 3; 4; 5; 9; 151 ⦖;
            152 :≡ (Const 1,[],NONE);
            153 :≡ (GlobalsPtr,[],NONE);
            154 :≡ (El,[153; 152],NONE);
            155 :≡ (El,[154; 151],NONE);
            156 :≡ (Cons 31,[155; 9; 5; 0; 1; 2; 3; 4],NONE);
            return 156
          od
          do
            157 :≡ (LengthBlock,[5],NONE);
            158 :≡ (Const (-3),[],NONE);
            159 :≡ (Add,[158; 157],SOME ⦕ 0; 1; 2; 3; 4; 5; 9; 157; 158 ⦖);
            160 :≡ (Const 2,[],NONE);
            161 :≡ (El,[5; 160],NONE);
            162 :≡ (Const 5,[],NONE);
            163 :≡ (Add,[162; 9],SOME ⦕ 0; 1; 2; 3; 4; 5; 9; 159; 161; 162 ⦖);
            164 :≡ (Add,[163; 159],SOME ⦕ 0; 1; 2; 3; 4; 5; 9; 159; 161; 163 ⦖);
            165 :≡ (Const 4,[],NONE);
            166 :≡
            (Add,[165; 159],SOME ⦕ 0; 1; 2; 3; 4; 5; 9; 159; 161; 164; 165 ⦖);
            167 :≡ (Const 2,[],NONE);
            168 :≡ (Const (-1),[],NONE);
            169 :≡
            (Add,[168; 164],
             SOME ⦕ 0; 1; 2; 3; 4; 5; 9; 159; 161; 164; 166; 167; 168 ⦖);
            170 :≡
            (Mult,[169; 164],
             SOME ⦕ 0; 1; 2; 3; 4; 5; 9; 159; 161; 164; 166; 167; 169 ⦖);
            171 :≡
            (Div,[170; 167],
             SOME ⦕ 0; 1; 2; 3; 4; 5; 9; 159; 161; 166; 167; 170 ⦖);
            172 :≡
            (Add,[171; 166],SOME ⦕ 0; 1; 2; 3; 4; 5; 9; 159; 161; 166; 171 ⦖);
            173 :≡ (Const 1,[],NONE);
            174 :≡ (GlobalsPtr,[],NONE);
            175 :≡ (El,[174; 173],NONE);
            176 :≡ (El,[175; 172],NONE);
            177 :≡ (Const 8,[],NONE);
            178 :≡
            (Add,[177; 159],SOME ⦕ 0; 1; 2; 3; 4; 5; 9; 159; 161; 176; 177 ⦖);
            179 :≡ (Const 3,[],NONE);
            180 :≡
            (ConsExtend 31,[5; 179; 159; 178; 176; 9; 161; 0; 1; 2; 3; ... ],
             SOME ⦕ 0; 1; 2; 3; 4; 5; 9; 159; 161; 176; 178; 179 ⦖);
            return 180
          od
      od
  od

bvl_stub_5 [0; 1; 2; 3; 4; 5; 6] =
  do
    7 :≡ (Const 1,[],NONE);
    8 :≡ (El,[6; 7],NONE);
    9 :≡ (Const (-6),[],NONE);
    10 :≡ (Add,[9; 8],SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 8; 9 ⦖);
    11 :≡ (Const 0,[],NONE);
    12 :≡ (Less,[10; 11],SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 10; 11 ⦖);
    if_var 12
      do
        13 :≡ (Const 1,[],NONE);
        14 :≡ (El,[6; 13],NONE);
        15 :≡ (LessConstSmall 5,[14],NONE);
        if_var 15
          do
            16 :≡ (LessConstSmall 2,[14],NONE);
            if_var 16
              do
                17 :≡ (LessConstSmall 1,[14],NONE);
                if_var 17
                  do
                    18 :≡ (Const 0,[],NONE);
                    19 :≡ (El,[6; 18],NONE);
                    call (20,⦕ 0; 1; 2; 3; 4 ⦖) NONE [5; 6; 19] NONE;
                    21 :≡ (Const 1,[],NONE);
                    22 :≡ (El,[20; 21],NONE);
                    23 :≡ (EqualInt 4,[22],NONE);
                    if_var 23
                      do
                        24 :≡ (Const 0,[],NONE);
                        25 :≡ (El,[... ; ... ],NONE);
                        tailcall NONE [0; 1; ... ; ... ]
                      od (tailcall_bvl_stub_4 [0; 1; 2; 3; ... ; ... ])
                  od
                  do
                    29 :≡ (Const 0,[],NONE);
                    30 :≡ (El,[6; 29],NONE);
                    call (31,⦕ 0; 1; 2; 3 ⦖) NONE [4; 5; 6; 30] NONE;
                    32 :≡ (Const 1,[],NONE);
                    33 :≡ (El,[31; 32],NONE);
                    34 :≡ (EqualInt 3,[33],NONE);
                    if_var 34
                      do
                        35 :≡ (Const 0,[],NONE);
                        36 :≡ (El,[31; ... ],NONE);
                        tailcall NONE [0; 1; 2; ... ; ... ]
                      od (tailcall_bvl_stub_3 [0; 1; 2; 3; 31])
                  od
              od
              do
                41 :≡ (LessConstSmall 3,[14],NONE);
                if_var 41
                  do
                    42 :≡ (Const 0,[],NONE);
                    43 :≡ (El,[6; 42],NONE);
                    call (44,⦕ 0; 1; 2 ⦖) NONE [3; 4; 5; 6; 43] NONE;
                    45 :≡ (Const 1,[],NONE);
                    46 :≡ (El,[44; 45],NONE);
                    47 :≡ (EqualInt 2,[46],NONE);
                    if_var 47
                      do
                        48 :≡ (Const 0,[],NONE);
                        49 :≡ (El,[44; ... ],NONE);
                        tailcall NONE [0; 1; 2; ... ; ... ]
                      od (tailcall_bvl_stub_2 [0; 1; 2; 44])
                  od
                  do
                    53 :≡ (LessConstSmall 4,[14],NONE);
                    if_var 53
                      do
                        54 :≡ (Const 0,[],NONE);
                        55 :≡ (El,[6; 54],NONE);
                        call (56,⦕ 0; 1 ⦖) NONE [2; 3; 4; ... ; ... ] NONE;
                        57 :≡ (Const 1,[],NONE);
                        58 :≡ (El,[56; 57],NONE);
                        59 :≡ (EqualInt 1,[58],NONE);
                        if_var 59
                          do
                            60 :≡ (... ... ,... ,... );
                            61 :≡ (El,... ,... );
                            tailcall NONE [0; ... ; ... ]
                          od (tailcall_bvl_stub_1 [0; 1; 56])
                      od
                      do
                        65 :≡ (Const 0,[],NONE);
                        66 :≡ (El,[6; 65],NONE);
                        call (67,⦕ 0 ⦖) NONE [1; 2; 3; 4; ... ; ... ] NONE;
                        68 :≡ (Const 1,[],NONE);
                        69 :≡ (El,[67; 68],NONE);
                        70 :≡ (EqualInt 0,[69],NONE);
                        if_var 70
                          do
                            71 :≡ (Const 0,[],NONE);
                            72 :≡ (El,[... ; ... ],NONE);
                            tailcall NONE [0; 67; ... ]
                          od (tailcall_bvl_stub_0 [0; 67])
                      od
                  od
              od
          od
          do
            79 :≡ (LessConstSmall 7,[14],NONE);
            if_var 79
              do
                80 :≡ (LessConstSmall 6,[14],NONE);
                if_var 80
                  do
                    81 :≡ (Const 0,[],NONE);
                    82 :≡ (El,[6; 81],NONE);
                    call (83,LN) NONE [0; 1; 2; 3; 4; ... ; ... ] NONE;
                    84 :≡ (Const 1,[],NONE);
                    85 :≡ (El,[83; 84],NONE);
                    86 :≡ (EqualInt 0,[85],NONE);
                    if_var 86
                      do
                        87 :≡ (Const 0,[],NONE);
                        88 :≡ (El,[83; ... ],NONE);
                        tailcall NONE [83; 88]
                      od (tailcall_bvl_stub_0 [83])
                  od
                  do
                    92 :≡ (Const 0,[],NONE);
                    93 :≡ (El,[6; 92],NONE);
                    call (94,LN) NONE [10; 0; 1; 2; 3; 4; ... ; ... ] NONE;
                    95 :≡ (Const 1,[],NONE);
                    96 :≡ (El,[94; 95],NONE);
                    97 :≡ (EqualInt 0,[96],NONE);
                    if_var 97
                      do
                        98 :≡ (Const 0,[],NONE);
                        99 :≡ (El,[94; 98],NONE);
                        tailcall NONE [94; 99]
                      od (tailcall_bvl_stub_0 [94])
                  od
              od
              do
                104 :≡ (LessConstSmall 8,[14],NONE);
                if_var 104
                  do
                    105 :≡ (Const 0,[],NONE);
                    106 :≡ (El,[6; 105],NONE);
                    call (107,LN) NONE [14; 10; 0; 1; 2; 3; ... ; ... ] NONE;
                    108 :≡ (Const 1,[],NONE);
                    109 :≡ (El,[107; 108],NONE);
                    110 :≡ (EqualInt 0,[109],NONE);
                    if_var 110
                      do
                        111 :≡ (Const 0,[],NONE);
                        112 :≡ (El,[107; 111],NONE);
                        tailcall NONE [107; 112]
                      od (tailcall_bvl_stub_0 [107])
                  od
                  do
                    116 :≡ (LessConstSmall 9,[14],NONE);
                    if_var 116
                      do
                        117 :≡ (Const 0,[],NONE);
                        118 :≡ (El,[6; 117],NONE);
                        call (119,LN) NONE [14; 14; 10; 0; ... ; ... ] NONE;
                        120 :≡ (Const 1,[],NONE);
                        121 :≡ (El,[119; 120],NONE);
                        122 :≡ (EqualInt 0,[121],NONE);
                        if_var 122
                          do
                            123 :≡ (Const 0,[],NONE);
                            124 :≡ (El,[... ; ... ],NONE);
                            tailcall NONE [119; 124]
                          od (tailcall_bvl_stub_0 [119])
                      od
                      do
                        128 :≡ (Const 0,[],NONE);
                        129 :≡ (El,[6; 128],NONE);
                        call (130,LN) NONE [14; 14; 14; 10; 0; ... ; ... ] NONE;
                        131 :≡ (Const 1,[],NONE);
                        132 :≡ (El,[130; 131],NONE);
                        133 :≡ (EqualInt 0,[132],NONE);
                        if_var 133
                          do
                            134 :≡ (Const 0,[],NONE);
                            135 :≡ (El,[130; ... ],NONE);
                            tailcall NONE [130; 135]
                          od (tailcall_bvl_stub_0 [130])
                      od
                  od
              od
          od
      od
      do
        143 :≡ (TagEq 30,[6],NONE);
        if_var 143
          do
            144 :≡ (Const 1,[],NONE);
            145 :≡ (El,[6; 144],NONE);
            146 :≡ (Const 2,[],NONE);
            147 :≡ (Const (-1),[],NONE);
            148 :≡
            (Add,[147; 145],SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 10; 145; 146; 147 ⦖);
            149 :≡
            (Mult,[148; 145],SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 10; 145; 146; 148 ⦖);
            150 :≡ (Div,[149; 146],SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 10; 146; 149 ⦖);
            151 :≡ (Const 5,[],NONE);
            152 :≡ (Add,[151; 150],SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 10; 150; 151 ⦖);
            makespace 10 ⦕ 0; 1; 2; 3; 4; 5; 6; 10; 152 ⦖;
            153 :≡ (Const 1,[],NONE);
            154 :≡ (GlobalsPtr,[],NONE);
            155 :≡ (El,[154; 153],NONE);
            156 :≡ (El,[155; 152],NONE);
            157 :≡ (Cons 31,[156; 10; 6; 0; 1; 2; 3; 4; 5],NONE);
            return 157
          od
          do
            158 :≡ (LengthBlock,[6],NONE);
            159 :≡ (Const (-3),[],NONE);
            160 :≡ (Add,[159; 158],SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 10; 158; 159 ⦖);
            161 :≡ (Const 2,[],NONE);
            162 :≡ (El,[6; 161],NONE);
            163 :≡ (Const 6,[],NONE);
            164 :≡
            (Add,[163; 10],SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 10; 160; 162; 163 ⦖);
            165 :≡
            (Add,[164; 160],SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 10; 160; 162; 164 ⦖);
            166 :≡ (Const 5,[],NONE);
            167 :≡
            (Add,[166; 160],
             SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 10; 160; 162; 165; 166 ⦖);
            168 :≡ (Const 2,[],NONE);
            169 :≡ (Const (-1),[],NONE);
            170 :≡
            (Add,[169; 165],
             SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 10; 160; 162; 165; 167; 168; 169 ⦖);
            171 :≡
            (Mult,[170; 165],
             SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 10; 160; 162; 165; 167; 168; 170 ⦖);
            172 :≡
            (Div,[171; 168],
             SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 10; 160; 162; 167; 168; 171 ⦖);
            173 :≡
            (Add,[172; 167],
             SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 10; 160; 162; 167; 172 ⦖);
            174 :≡ (Const 1,[],NONE);
            175 :≡ (GlobalsPtr,[],NONE);
            176 :≡ (El,[175; 174],NONE);
            177 :≡ (El,[176; 173],NONE);
            178 :≡ (Const 9,[],NONE);
            179 :≡
            (Add,[178; 160],
             SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 10; 160; 162; 177; 178 ⦖);
            180 :≡ (Const 3,[],NONE);
            181 :≡
            (ConsExtend 31,
             [6; 180; 160; 179; 177; 10; 162; 0; 1; 2; 3; ... ; ... ],
             SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 10; 160; 162; 177; 179; 180 ⦖);
            return 181
          od
      od
  od

bvl_stub_6 [0; 1; 2; 3; 4; 5; 6; 7] =
  do
    8 :≡ (Const 1,[],NONE);
    9 :≡ (El,[7; 8],NONE);
    10 :≡ (Const (-7),[],NONE);
    11 :≡ (Add,[10; 9],SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 9; 10 ⦖);
    12 :≡ (Const 0,[],NONE);
    13 :≡ (Less,[11; 12],SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 11; 12 ⦖);
    if_var 13
      do
        14 :≡ (Const 1,[],NONE);
        15 :≡ (El,[7; 14],NONE);
        16 :≡ (LessConstSmall 5,[15],NONE);
        if_var 16
          do
            17 :≡ (LessConstSmall 2,[15],NONE);
            if_var 17
              do
                18 :≡ (LessConstSmall 1,[15],NONE);
                if_var 18
                  do
                    19 :≡ (Const 0,[],NONE);
                    20 :≡ (El,[7; 19],NONE);
                    call (21,⦕ 0; 1; 2; 3; 4; 5 ⦖) NONE [6; 7; 20] NONE;
                    22 :≡ (Const 1,[],NONE);
                    23 :≡ (El,[21; 22],NONE);
                    24 :≡ (EqualInt 5,[23],NONE);
                    if_var 24
                      do
                        25 :≡ (Const 0,[],NONE);
                        26 :≡ (El,[... ; ... ],NONE);
                        tailcall NONE [0; 1; ... ; ... ]
                      od (tailcall_bvl_stub_5 [0; 1; 2; 3; ... ; ... ])
                  od
                  do
                    30 :≡ (Const 0,[],NONE);
                    31 :≡ (El,[7; 30],NONE);
                    call (32,⦕ 0; 1; 2; 3; 4 ⦖) NONE [5; 6; 7; 31] NONE;
                    33 :≡ (Const 1,[],NONE);
                    34 :≡ (El,[32; 33],NONE);
                    35 :≡ (EqualInt 4,[34],NONE);
                    if_var 35
                      do
                        36 :≡ (Const 0,[],NONE);
                        37 :≡ (El,[32; ... ],NONE);
                        tailcall NONE [0; 1; 2; ... ; ... ]
                      od (tailcall_bvl_stub_4 [0; 1; 2; 3; 4; ... ])
                  od
              od
              do
                42 :≡ (LessConstSmall 3,[15],NONE);
                if_var 42
                  do
                    43 :≡ (Const 0,[],NONE);
                    44 :≡ (El,[7; 43],NONE);
                    call (45,⦕ 0; 1; 2; 3 ⦖) NONE [4; 5; 6; 7; 44] NONE;
                    46 :≡ (Const 1,[],NONE);
                    47 :≡ (El,[45; 46],NONE);
                    48 :≡ (EqualInt 3,[47],NONE);
                    if_var 48
                      do
                        49 :≡ (Const 0,[],NONE);
                        50 :≡ (El,[45; ... ],NONE);
                        tailcall NONE [0; 1; 2; ... ; ... ]
                      od (tailcall_bvl_stub_3 [0; 1; 2; 3; 45])
                  od
                  do
                    54 :≡ (LessConstSmall 4,[15],NONE);
                    if_var 54
                      do
                        55 :≡ (Const 0,[],NONE);
                        56 :≡ (El,[7; 55],NONE);
                        call (57,⦕ 0; 1; 2 ⦖) NONE [3; 4; 5; ... ; ... ] NONE;
                        58 :≡ (Const 1,[],NONE);
                        59 :≡ (El,[57; 58],NONE);
                        60 :≡ (EqualInt 2,[59],NONE);
                        if_var 60
                          do
                            61 :≡ (... ... ,... ,... );
                            62 :≡ (El,... ,... );
                            tailcall NONE [0; ... ; ... ]
                          od (tailcall_bvl_stub_2 [0; 1; 2; ... ])
                      od
                      do
                        66 :≡ (Const 0,[],NONE);
                        67 :≡ (El,[7; 66],NONE);
                        call (68,⦕ 0; 1 ⦖) NONE [2; 3; 4; 5; ... ; ... ] NONE;
                        69 :≡ (Const 1,[],NONE);
                        70 :≡ (El,[68; 69],NONE);
                        71 :≡ (EqualInt 1,[70],NONE);
                        if_var 71
                          do
                            72 :≡ (Const 0,[],NONE);
                            73 :≡ (El,[... ; ... ],NONE);
                            tailcall NONE [0; 1; ... ; ... ]
                          od (tailcall_bvl_stub_1 [0; 1; 68])
                      od
                  od
              od
          od
          do
            80 :≡ (LessConstSmall 7,[15],NONE);
            if_var 80
              do
                81 :≡ (LessConstSmall 6,[15],NONE);
                if_var 81
                  do
                    82 :≡ (Const 0,[],NONE);
                    83 :≡ (El,[7; 82],NONE);
                    call (84,⦕ 0 ⦖) NONE [1; 2; 3; 4; 5; ... ; ... ] NONE;
                    85 :≡ (Const 1,[],NONE);
                    86 :≡ (El,[84; 85],NONE);
                    87 :≡ (EqualInt 0,[86],NONE);
                    if_var 87
                      do
                        88 :≡ (Const 0,[],NONE);
                        89 :≡ (El,[84; ... ],NONE);
                        tailcall NONE [0; 84; 89]
                      od (tailcall_bvl_stub_0 [0; 84])
                  od
                  do
                    93 :≡ (Const 0,[],NONE);
                    94 :≡ (El,[7; 93],NONE);
                    call (95,LN) NONE [0; 1; 2; 3; 4; 5; ... ; ... ] NONE;
                    96 :≡ (Const 1,[],NONE);
                    97 :≡ (El,[95; 96],NONE);
                    98 :≡ (EqualInt 0,[97],NONE);
                    if_var 98
                      do
                        99 :≡ (Const 0,[],NONE);
                        100 :≡ (El,[95; 99],NONE);
                        tailcall NONE [95; 100]
                      od (tailcall_bvl_stub_0 [95])
                  od
              od
              do
                105 :≡ (LessConstSmall 8,[15],NONE);
                if_var 105
                  do
                    106 :≡ (Const 0,[],NONE);
                    107 :≡ (El,[7; 106],NONE);
                    call (108,LN) NONE [11; 0; 1; 2; 3; 4; ... ; ... ] NONE;
                    109 :≡ (Const 1,[],NONE);
                    110 :≡ (El,[108; 109],NONE);
                    111 :≡ (EqualInt 0,[110],NONE);
                    if_var 111
                      do
                        112 :≡ (Const 0,[],NONE);
                        113 :≡ (El,[108; 112],NONE);
                        tailcall NONE [108; 113]
                      od (tailcall_bvl_stub_0 [108])
                  od
                  do
                    117 :≡ (LessConstSmall 9,[15],NONE);
                    if_var 117
                      do
                        118 :≡ (Const 0,[],NONE);
                        119 :≡ (El,[7; 118],NONE);
                        call (120,LN) NONE [15; 11; 0; 1; ... ; ... ] NONE;
                        121 :≡ (Const 1,[],NONE);
                        122 :≡ (El,[120; 121],NONE);
                        123 :≡ (EqualInt 0,[122],NONE);
                        if_var 123
                          do
                            124 :≡ (Const 0,[],NONE);
                            125 :≡ (El,[... ; ... ],NONE);
                            tailcall NONE [120; 125]
                          od (tailcall_bvl_stub_0 [120])
                      od
                      do
                        129 :≡ (Const 0,[],NONE);
                        130 :≡ (El,[7; 129],NONE);
                        call (131,LN) NONE [15; 15; 11; 0; 1; ... ; ... ] NONE;
                        132 :≡ (Const 1,[],NONE);
                        133 :≡ (El,[131; 132],NONE);
                        134 :≡ (EqualInt 0,[133],NONE);
                        if_var 134
                          do
                            135 :≡ (Const 0,[],NONE);
                            136 :≡ (El,[131; ... ],NONE);
                            tailcall NONE [131; 136]
                          od (tailcall_bvl_stub_0 [131])
                      od
                  od
              od
          od
      od
      do
        144 :≡ (TagEq 30,[7],NONE);
        if_var 144
          do
            145 :≡ (Const 1,[],NONE);
            146 :≡ (El,[7; 145],NONE);
            147 :≡ (Const 2,[],NONE);
            148 :≡ (Const (-1),[],NONE);
            149 :≡
            (Add,[148; 146],SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 11; 146; 147; 148 ⦖);
            150 :≡
            (Mult,[149; 146],SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 11; 146; 147; 149 ⦖);
            151 :≡
            (Div,[150; 147],SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 11; 147; 150 ⦖);
            152 :≡ (Const 6,[],NONE);
            153 :≡
            (Add,[152; 151],SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 11; 151; 152 ⦖);
            makespace 11 ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 11; 153 ⦖;
            154 :≡ (Const 1,[],NONE);
            155 :≡ (GlobalsPtr,[],NONE);
            156 :≡ (El,[155; 154],NONE);
            157 :≡ (El,[156; 153],NONE);
            158 :≡ (Cons 31,[157; 11; 7; 0; 1; 2; 3; 4; 5; 6],NONE);
            return 158
          od
          do
            159 :≡ (LengthBlock,[7],NONE);
            160 :≡ (Const (-3),[],NONE);
            161 :≡
            (Add,[160; 159],SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 11; 159; 160 ⦖);
            162 :≡ (Const 2,[],NONE);
            163 :≡ (El,[7; 162],NONE);
            164 :≡ (Const 7,[],NONE);
            165 :≡
            (Add,[164; 11],SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 11; 161; 163; 164 ⦖);
            166 :≡
            (Add,[165; 161],SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 11; 161; 163; 165 ⦖);
            167 :≡ (Const 6,[],NONE);
            168 :≡
            (Add,[167; 161],
             SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 11; 161; 163; 166; 167 ⦖);
            169 :≡ (Const 2,[],NONE);
            170 :≡ (Const (-1),[],NONE);
            171 :≡
            (Add,[170; 166],
             SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 11; 161; 163; 166; 168; 169; 170 ⦖);
            172 :≡
            (Mult,[171; 166],
             SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 11; 161; 163; 166; 168; 169; 171 ⦖);
            173 :≡
            (Div,[172; 169],
             SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 11; 161; 163; 168; 169; 172 ⦖);
            174 :≡
            (Add,[173; 168],
             SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 11; 161; 163; 168; 173 ⦖);
            175 :≡ (Const 1,[],NONE);
            176 :≡ (GlobalsPtr,[],NONE);
            177 :≡ (El,[176; 175],NONE);
            178 :≡ (El,[177; 174],NONE);
            179 :≡ (Const 10,[],NONE);
            180 :≡
            (Add,[179; 161],
             SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 11; 161; 163; 178; 179 ⦖);
            181 :≡ (Const 3,[],NONE);
            182 :≡
            (ConsExtend 31,
             [7; 181; 161; 180; 178; 11; 163; 0; 1; 2; 3; ... ; ... ],
             SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 11; 161; 163; 178; 180; 181 ⦖);
            return 182
          od
      od
  od

bvl_stub_7 [0; 1; 2; 3; 4; 5; 6; 7; 8] =
  do
    9 :≡ (Const 1,[],NONE);
    10 :≡ (El,[8; 9],NONE);
    11 :≡ (Const (-8),[],NONE);
    12 :≡ (Add,[11; 10],SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 8; 10; 11 ⦖);
    13 :≡ (Const 0,[],NONE);
    14 :≡ (Less,[12; 13],SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 8; 12; 13 ⦖);
    if_var 14
      do
        15 :≡ (Const 1,[],NONE);
        16 :≡ (El,[8; 15],NONE);
        17 :≡ (LessConstSmall 5,[16],NONE);
        if_var 17
          do
            18 :≡ (LessConstSmall 2,[16],NONE);
            if_var 18
              do
                19 :≡ (LessConstSmall 1,[16],NONE);
                if_var 19
                  do
                    20 :≡ (Const 0,[],NONE);
                    21 :≡ (El,[8; 20],NONE);
                    call (22,⦕ 0; 1; 2; 3; 4; 5; 6 ⦖) NONE [7; 8; 21] NONE;
                    23 :≡ (Const 1,[],NONE);
                    24 :≡ (El,[22; 23],NONE);
                    25 :≡ (EqualInt 6,[24],NONE);
                    if_var 25
                      do
                        26 :≡ (Const 0,[],NONE);
                        27 :≡ (El,[... ; ... ],NONE);
                        tailcall NONE [0; 1; ... ; ... ]
                      od (tailcall_bvl_stub_6 [0; 1; 2; 3; ... ; ... ])
                  od
                  do
                    31 :≡ (Const 0,[],NONE);
                    32 :≡ (El,[8; 31],NONE);
                    call (33,⦕ 0; 1; 2; 3; 4; 5 ⦖) NONE [6; 7; 8; 32] NONE;
                    34 :≡ (Const 1,[],NONE);
                    35 :≡ (El,[33; 34],NONE);
                    36 :≡ (EqualInt 5,[35],NONE);
                    if_var 36
                      do
                        37 :≡ (Const 0,[],NONE);
                        38 :≡ (El,[33; ... ],NONE);
                        tailcall NONE [0; 1; 2; ... ; ... ]
                      od (tailcall_bvl_stub_5 [0; 1; 2; 3; 4; ... ; ... ])
                  od
              od
              do
                43 :≡ (LessConstSmall 3,[16],NONE);
                if_var 43
                  do
                    44 :≡ (Const 0,[],NONE);
                    45 :≡ (El,[8; 44],NONE);
                    call (46,⦕ 0; 1; 2; 3; 4 ⦖) NONE [5; 6; 7; 8; 45] NONE;
                    47 :≡ (Const 1,[],NONE);
                    48 :≡ (El,[46; 47],NONE);
                    49 :≡ (EqualInt 4,[48],NONE);
                    if_var 49
                      do
                        50 :≡ (Const 0,[],NONE);
                        51 :≡ (El,[46; ... ],NONE);
                        tailcall NONE [0; 1; 2; ... ; ... ]
                      od (tailcall_bvl_stub_4 [0; 1; 2; 3; 4; ... ])
                  od
                  do
                    55 :≡ (LessConstSmall 4,[16],NONE);
                    if_var 55
                      do
                        56 :≡ (Const 0,[],NONE);
                        57 :≡ (El,[8; 56],NONE);
                        call (58,⦕ 0; 1; 2; 3 ⦖) NONE [4; 5; 6; ... ; ... ]
                          NONE;
                        59 :≡ (Const 1,[],NONE);
                        60 :≡ (El,[58; 59],NONE);
                        61 :≡ (EqualInt 3,[60],NONE);
                        if_var 61
                          do
                            62 :≡ (... ... ,... ,... );
                            63 :≡ (El,... ,... );
                            tailcall NONE [0; ... ; ... ]
                          od (tailcall_bvl_stub_3 [0; 1; 2; ... ; ... ])
                      od
                      do
                        67 :≡ (Const 0,[],NONE);
                        68 :≡ (El,[8; 67],NONE);
                        call (69,⦕ 0; 1; 2 ⦖) NONE [3; 4; 5; 6; ... ; ... ]
                          NONE;
                        70 :≡ (Const 1,[],NONE);
                        71 :≡ (El,[69; 70],NONE);
                        72 :≡ (EqualInt 2,[71],NONE);
                        if_var 72
                          do
                            73 :≡ (Const 0,[],NONE);
                            74 :≡ (El,[... ; ... ],NONE);
                            tailcall NONE [0; 1; ... ; ... ]
                          od (tailcall_bvl_stub_2 [0; 1; 2; 69])
                      od
                  od
              od
          od
          do
            81 :≡ (LessConstSmall 7,[16],NONE);
            if_var 81
              do
                82 :≡ (LessConstSmall 6,[16],NONE);
                if_var 82
                  do
                    83 :≡ (Const 0,[],NONE);
                    84 :≡ (El,[8; 83],NONE);
                    call (85,⦕ 0; 1 ⦖) NONE [2; 3; 4; 5; 6; ... ; ... ] NONE;
                    86 :≡ (Const 1,[],NONE);
                    87 :≡ (El,[85; 86],NONE);
                    88 :≡ (EqualInt 1,[87],NONE);
                    if_var 88
                      do
                        89 :≡ (Const 0,[],NONE);
                        90 :≡ (El,[85; ... ],NONE);
                        tailcall NONE [0; 1; 85; ... ]
                      od (tailcall_bvl_stub_1 [0; 1; 85])
                  od
                  do
                    94 :≡ (Const 0,[],NONE);
                    95 :≡ (El,[8; 94],NONE);
                    call (96,⦕ 0 ⦖) NONE [1; 2; 3; 4; 5; 6; ... ; ... ] NONE;
                    97 :≡ (Const 1,[],NONE);
                    98 :≡ (El,[96; 97],NONE);
                    99 :≡ (EqualInt 0,[98],NONE);
                    if_var 99
                      do
                        100 :≡ (Const 0,[],NONE);
                        101 :≡ (El,[96; 100],NONE);
                        tailcall NONE [0; 96; 101]
                      od (tailcall_bvl_stub_0 [0; 96])
                  od
              od
              do
                106 :≡ (LessConstSmall 8,[16],NONE);
                if_var 106
                  do
                    107 :≡ (Const 0,[],NONE);
                    108 :≡ (El,[8; 107],NONE);
                    call (109,LN) NONE [0; 1; 2; 3; 4; 5; ... ; ... ] NONE;
                    110 :≡ (Const 1,[],NONE);
                    111 :≡ (El,[109; 110],NONE);
                    112 :≡ (EqualInt 0,[111],NONE);
                    if_var 112
                      do
                        113 :≡ (Const 0,[],NONE);
                        114 :≡ (El,[109; 113],NONE);
                        tailcall NONE [109; 114]
                      od (tailcall_bvl_stub_0 [109])
                  od
                  do
                    118 :≡ (LessConstSmall 9,[16],NONE);
                    if_var 118
                      do
                        119 :≡ (Const 0,[],NONE);
                        120 :≡ (El,[8; 119],NONE);
                        call (121,LN) NONE [12; 0; 1; 2; ... ; ... ] NONE;
                        122 :≡ (Const 1,[],NONE);
                        123 :≡ (El,[121; 122],NONE);
                        124 :≡ (EqualInt 0,[123],NONE);
                        if_var 124
                          do
                            125 :≡ (Const 0,[],NONE);
                            126 :≡ (El,[... ; ... ],NONE);
                            tailcall NONE [121; 126]
                          od (tailcall_bvl_stub_0 [121])
                      od
                      do
                        130 :≡ (Const 0,[],NONE);
                        131 :≡ (El,[8; 130],NONE);
                        call (132,LN) NONE [16; 12; 0; 1; 2; ... ; ... ] NONE;
                        133 :≡ (Const 1,[],NONE);
                        134 :≡ (El,[132; 133],NONE);
                        135 :≡ (EqualInt 0,[134],NONE);
                        if_var 135
                          do
                            136 :≡ (Const 0,[],NONE);
                            137 :≡ (El,[132; ... ],NONE);
                            tailcall NONE [132; 137]
                          od (tailcall_bvl_stub_0 [132])
                      od
                  od
              od
          od
      od
      do
        145 :≡ (TagEq 30,[8],NONE);
        if_var 145
          do
            146 :≡ (Const 1,[],NONE);
            147 :≡ (El,[8; 146],NONE);
            148 :≡ (Const 2,[],NONE);
            149 :≡ (Const (-1),[],NONE);
            150 :≡
            (Add,[149; 147],
             SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 8; 12; 147; 148; 149 ⦖);
            151 :≡
            (Mult,[150; 147],
             SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 8; 12; 147; 148; 150 ⦖);
            152 :≡
            (Div,[151; 148],SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 8; 12; 148; 151 ⦖);
            153 :≡ (Const 7,[],NONE);
            154 :≡
            (Add,[153; 152],SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 8; 12; 152; 153 ⦖);
            makespace 12 ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 8; 12; 154 ⦖;
            155 :≡ (Const 1,[],NONE);
            156 :≡ (GlobalsPtr,[],NONE);
            157 :≡ (El,[156; 155],NONE);
            158 :≡ (El,[157; 154],NONE);
            159 :≡ (Cons 31,[158; 12; 8; 0; 1; 2; 3; 4; 5; 6; ... ],NONE);
            return 159
          od
          do
            160 :≡ (LengthBlock,[8],NONE);
            161 :≡ (Const (-3),[],NONE);
            162 :≡
            (Add,[161; 160],SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 8; 12; 160; 161 ⦖);
            163 :≡ (Const 2,[],NONE);
            164 :≡ (El,[8; 163],NONE);
            165 :≡ (Const 8,[],NONE);
            166 :≡
            (Add,[165; 12],
             SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 8; 12; 162; 164; 165 ⦖);
            167 :≡
            (Add,[166; 162],
             SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 8; 12; 162; 164; 166 ⦖);
            168 :≡ (Const 7,[],NONE);
            169 :≡
            (Add,[168; 162],
             SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 8; 12; 162; 164; 167; 168 ⦖);
            170 :≡ (Const 2,[],NONE);
            171 :≡ (Const (-1),[],NONE);
            172 :≡
            (Add,[171; 167],
             SOME
               ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 8; 12; 162; 164; 167; 169; 170; 171 ⦖);
            173 :≡
            (Mult,[172; 167],
             SOME
               ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 8; 12; 162; 164; 167; 169; 170; 172 ⦖);
            174 :≡
            (Div,[173; 170],
             SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 8; 12; 162; 164; 169; 170; 173 ⦖);
            175 :≡
            (Add,[174; 169],
             SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 8; 12; 162; 164; 169; 174 ⦖);
            176 :≡ (Const 1,[],NONE);
            177 :≡ (GlobalsPtr,[],NONE);
            178 :≡ (El,[177; 176],NONE);
            179 :≡ (El,[178; 175],NONE);
            180 :≡ (Const 11,[],NONE);
            181 :≡
            (Add,[180; 162],
             SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 8; 12; 162; 164; 179; 180 ⦖);
            182 :≡ (Const 3,[],NONE);
            183 :≡
            (ConsExtend 31,
             [8; 182; 162; 181; 179; 12; 164; 0; 1; 2; 3; ... ; ... ],
             SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 8; 12; 162; 164; 179; 181; 182 ⦖);
            return 183
          od
      od
  od

bvl_stub_8 [0; 1; 2; 3; 4; 5; 6; 7; 8; 9] =
  do
    10 :≡ (Const 1,[],NONE);
    11 :≡ (El,[9; 10],NONE);
    12 :≡ (Const (-9),[],NONE);
    13 :≡ (Add,[12; 11],SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 11; 12 ⦖);
    14 :≡ (Const 0,[],NONE);
    15 :≡ (Less,[13; 14],SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 13; 14 ⦖);
    if_var 15
      do
        16 :≡ (Const 1,[],NONE);
        17 :≡ (El,[9; 16],NONE);
        18 :≡ (LessConstSmall 5,[17],NONE);
        if_var 18
          do
            19 :≡ (LessConstSmall 2,[17],NONE);
            if_var 19
              do
                20 :≡ (LessConstSmall 1,[17],NONE);
                if_var 20
                  do
                    21 :≡ (Const 0,[],NONE);
                    22 :≡ (El,[9; 21],NONE);
                    call (23,⦕ 0; 1; 2; 3; 4; 5; 6; 7 ⦖) NONE [8; 9; 22] NONE;
                    24 :≡ (Const 1,[],NONE);
                    25 :≡ (El,[23; 24],NONE);
                    26 :≡ (EqualInt 7,[25],NONE);
                    if_var 26
                      do
                        27 :≡ (Const 0,[],NONE);
                        28 :≡ (El,[... ; ... ],NONE);
                        tailcall NONE [0; 1; ... ; ... ]
                      od (tailcall_bvl_stub_7 [0; 1; 2; 3; ... ; ... ])
                  od
                  do
                    32 :≡ (Const 0,[],NONE);
                    33 :≡ (El,[9; 32],NONE);
                    call (34,⦕ 0; 1; 2; 3; 4; 5; 6 ⦖) NONE [7; 8; 9; 33] NONE;
                    35 :≡ (Const 1,[],NONE);
                    36 :≡ (El,[34; 35],NONE);
                    37 :≡ (EqualInt 6,[36],NONE);
                    if_var 37
                      do
                        38 :≡ (Const 0,[],NONE);
                        39 :≡ (El,[34; ... ],NONE);
                        tailcall NONE [0; 1; 2; ... ; ... ]
                      od (tailcall_bvl_stub_6 [0; 1; 2; 3; 4; ... ; ... ])
                  od
              od
              do
                44 :≡ (LessConstSmall 3,[17],NONE);
                if_var 44
                  do
                    45 :≡ (Const 0,[],NONE);
                    46 :≡ (El,[9; 45],NONE);
                    call (47,⦕ 0; 1; 2; 3; 4; 5 ⦖) NONE [6; 7; 8; 9; 46] NONE;
                    48 :≡ (Const 1,[],NONE);
                    49 :≡ (El,[47; 48],NONE);
                    50 :≡ (EqualInt 5,[49],NONE);
                    if_var 50
                      do
                        51 :≡ (Const 0,[],NONE);
                        52 :≡ (El,[47; ... ],NONE);
                        tailcall NONE [0; 1; 2; ... ; ... ]
                      od (tailcall_bvl_stub_5 [0; 1; 2; 3; 4; ... ; ... ])
                  od
                  do
                    56 :≡ (LessConstSmall 4,[17],NONE);
                    if_var 56
                      do
                        57 :≡ (Const 0,[],NONE);
                        58 :≡ (El,[9; 57],NONE);
                        call (59,⦕ 0; 1; 2; 3; 4 ⦖) NONE [5; 6; 7; ... ; ... ]
                          NONE;
                        60 :≡ (Const 1,[],NONE);
                        61 :≡ (El,[59; 60],NONE);
                        62 :≡ (EqualInt 4,[61],NONE);
                        if_var 62
                          do
                            63 :≡ (... ... ,... ,... );
                            64 :≡ (El,... ,... );
                            tailcall NONE [0; ... ; ... ]
                          od (tailcall_bvl_stub_4 [0; 1; 2; ... ; ... ])
                      od
                      do
                        68 :≡ (Const 0,[],NONE);
                        69 :≡ (El,[9; 68],NONE);
                        call (70,⦕ 0; 1; 2; 3 ⦖) NONE [4; 5; 6; 7; ... ; ... ]
                          NONE;
                        71 :≡ (Const 1,[],NONE);
                        72 :≡ (El,[70; 71],NONE);
                        73 :≡ (EqualInt 3,[72],NONE);
                        if_var 73
                          do
                            74 :≡ (Const 0,[],NONE);
                            75 :≡ (El,[... ; ... ],NONE);
                            tailcall NONE [0; 1; ... ; ... ]
                          od (tailcall_bvl_stub_3 [0; 1; 2; 3; ... ])
                      od
                  od
              od
          od
          do
            82 :≡ (LessConstSmall 7,[17],NONE);
            if_var 82
              do
                83 :≡ (LessConstSmall 6,[17],NONE);
                if_var 83
                  do
                    84 :≡ (Const 0,[],NONE);
                    85 :≡ (El,[9; 84],NONE);
                    call (86,⦕ 0; 1; 2 ⦖) NONE [3; 4; 5; 6; 7; ... ; ... ] NONE;
                    87 :≡ (Const 1,[],NONE);
                    88 :≡ (El,[86; 87],NONE);
                    89 :≡ (EqualInt 2,[88],NONE);
                    if_var 89
                      do
                        90 :≡ (Const 0,[],NONE);
                        91 :≡ (El,[86; ... ],NONE);
                        tailcall NONE [0; 1; 2; ... ; ... ]
                      od (tailcall_bvl_stub_2 [0; 1; 2; 86])
                  od
                  do
                    95 :≡ (Const 0,[],NONE);
                    96 :≡ (El,[9; 95],NONE);
                    call (97,⦕ 0; 1 ⦖) NONE [2; 3; 4; 5; 6; 7; ... ; ... ] NONE;
                    98 :≡ (Const 1,[],NONE);
                    99 :≡ (El,[97; 98],NONE);
                    100 :≡ (EqualInt 1,[99],NONE);
                    if_var 100
                      do
                        101 :≡ (Const 0,[],NONE);
                        102 :≡ (El,[97; 101],NONE);
                        tailcall NONE [0; 1; 97; 102]
                      od (tailcall_bvl_stub_1 [0; 1; 97])
                  od
              od
              do
                107 :≡ (LessConstSmall 8,[17],NONE);
                if_var 107
                  do
                    108 :≡ (Const 0,[],NONE);
                    109 :≡ (El,[9; 108],NONE);
                    call (110,⦕ 0 ⦖) NONE [1; 2; 3; 4; 5; 6; ... ; ... ] NONE;
                    111 :≡ (Const 1,[],NONE);
                    112 :≡ (El,[110; 111],NONE);
                    113 :≡ (EqualInt 0,[112],NONE);
                    if_var 113
                      do
                        114 :≡ (Const 0,[],NONE);
                        115 :≡ (El,[110; 114],NONE);
                        tailcall NONE [0; 110; 115]
                      od (tailcall_bvl_stub_0 [0; 110])
                  od
                  do
                    119 :≡ (LessConstSmall 9,[17],NONE);
                    if_var 119
                      do
                        120 :≡ (Const 0,[],NONE);
                        121 :≡ (El,[9; 120],NONE);
                        call (122,LN) NONE [0; 1; 2; 3; ... ; ... ] NONE;
                        123 :≡ (Const 1,[],NONE);
                        124 :≡ (El,[122; 123],NONE);
                        125 :≡ (EqualInt 0,[124],NONE);
                        if_var 125
                          do
                            126 :≡ (Const 0,[],NONE);
                            127 :≡ (El,[... ; ... ],NONE);
                            tailcall NONE [122; 127]
                          od (tailcall_bvl_stub_0 [122])
                      od
                      do
                        131 :≡ (Const 0,[],NONE);
                        132 :≡ (El,[9; 131],NONE);
                        call (133,LN) NONE [13; 0; 1; 2; 3; ... ; ... ] NONE;
                        134 :≡ (Const 1,[],NONE);
                        135 :≡ (El,[133; 134],NONE);
                        136 :≡ (EqualInt 0,[135],NONE);
                        if_var 136
                          do
                            137 :≡ (Const 0,[],NONE);
                            138 :≡ (El,[133; ... ],NONE);
                            tailcall NONE [133; 138]
                          od (tailcall_bvl_stub_0 [133])
                      od
                  od
              od
          od
      od
      do
        146 :≡ (TagEq 30,[9],NONE);
        if_var 146
          do
            147 :≡ (Const 1,[],NONE);
            148 :≡ (El,[9; 147],NONE);
            149 :≡ (Const 2,[],NONE);
            150 :≡ (Const (-1),[],NONE);
            151 :≡
            (Add,[150; 148],
             SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 13; 148; 149; 150 ⦖);
            152 :≡
            (Mult,[151; 148],
             SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 13; 148; 149; 151 ⦖);
            153 :≡
            (Div,[152; 149],SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 13; 149; 152 ⦖);
            154 :≡ (Const 8,[],NONE);
            155 :≡
            (Add,[154; 153],SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 13; 153; 154 ⦖);
            makespace 13 ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 13; 155 ⦖;
            156 :≡ (Const 1,[],NONE);
            157 :≡ (GlobalsPtr,[],NONE);
            158 :≡ (El,[157; 156],NONE);
            159 :≡ (El,[158; 155],NONE);
            160 :≡ (Cons 31,[159; 13; 9; 0; 1; 2; 3; 4; 5; 6; ... ; ... ],NONE);
            return 160
          od
          do
            161 :≡ (LengthBlock,[9],NONE);
            162 :≡ (Const (-3),[],NONE);
            163 :≡
            (Add,[162; 161],SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 13; 161; 162 ⦖);
            164 :≡ (Const 2,[],NONE);
            165 :≡ (El,[9; 164],NONE);
            166 :≡ (Const 9,[],NONE);
            167 :≡
            (Add,[166; 13],
             SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 13; 163; 165; 166 ⦖);
            168 :≡
            (Add,[167; 163],
             SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 13; 163; 165; 167 ⦖);
            169 :≡ (Const 8,[],NONE);
            170 :≡
            (Add,[169; 163],
             SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 13; 163; 165; 168; 169 ⦖);
            171 :≡ (Const 2,[],NONE);
            172 :≡ (Const (-1),[],NONE);
            173 :≡
            (Add,[172; 168],
             SOME
               ⦕
                 0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 13; 163; 165; 168; 170; 171; 172
               ⦖);
            174 :≡
            (Mult,[173; 168],
             SOME
               ⦕
                 0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 13; 163; 165; 168; 170; 171; 173
               ⦖);
            175 :≡
            (Div,[174; 171],
             SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 13; 163; 165; 170; 171; 174 ⦖);
            176 :≡
            (Add,[175; 170],
             SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 13; 163; 165; 170; 175 ⦖);
            177 :≡ (Const 1,[],NONE);
            178 :≡ (GlobalsPtr,[],NONE);
            179 :≡ (El,[178; 177],NONE);
            180 :≡ (El,[179; 176],NONE);
            181 :≡ (Const 12,[],NONE);
            182 :≡
            (Add,[181; 163],
             SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 13; 163; 165; 180; 181 ⦖);
            183 :≡ (Const 3,[],NONE);
            184 :≡
            (ConsExtend 31,
             [9; 183; 163; 182; 180; 13; 165; 0; 1; 2; 3; ... ; ... ],
             SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 13; 163; 165; 180; 182; 183 ⦖);
            return 184
          od
      od
  od

bvl_stub_9 [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10] =
  do
    11 :≡ (Const 1,[],NONE);
    12 :≡ (El,[10; 11],NONE);
    13 :≡ (Const (-10),[],NONE);
    14 :≡ (Add,[13; 12],SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 12; 13 ⦖);
    15 :≡ (Const 0,[],NONE);
    16 :≡ (Less,[14; 15],SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 14; 15 ⦖);
    if_var 16
      do
        17 :≡ (Const 1,[],NONE);
        18 :≡ (El,[10; 17],NONE);
        19 :≡ (LessConstSmall 5,[18],NONE);
        if_var 19
          do
            20 :≡ (LessConstSmall 2,[18],NONE);
            if_var 20
              do
                21 :≡ (LessConstSmall 1,[18],NONE);
                if_var 21
                  do
                    22 :≡ (Const 0,[],NONE);
                    23 :≡ (El,[10; 22],NONE);
                    call (24,⦕ 0; 1; 2; 3; 4; 5; 6; 7; 8 ⦖) NONE [9; 10; 23]
                      NONE;
                    25 :≡ (Const 1,[],NONE);
                    26 :≡ (El,[24; 25],NONE);
                    27 :≡ (EqualInt 8,[26],NONE);
                    if_var 27
                      do
                        28 :≡ (Const 0,[],NONE);
                        29 :≡ (El,[... ; ... ],NONE);
                        tailcall NONE [0; 1; ... ; ... ]
                      od (tailcall_bvl_stub_8 [0; 1; 2; 3; ... ; ... ])
                  od
                  do
                    33 :≡ (Const 0,[],NONE);
                    34 :≡ (El,[10; 33],NONE);
                    call (35,⦕ 0; 1; 2; 3; 4; 5; 6; 7 ⦖) NONE [8; 9; 10; 34]
                      NONE;
                    36 :≡ (Const 1,[],NONE);
                    37 :≡ (El,[35; 36],NONE);
                    38 :≡ (EqualInt 7,[37],NONE);
                    if_var 38
                      do
                        39 :≡ (Const 0,[],NONE);
                        40 :≡ (El,[35; ... ],NONE);
                        tailcall NONE [0; 1; 2; ... ; ... ]
                      od (tailcall_bvl_stub_7 [0; 1; 2; 3; 4; ... ; ... ])
                  od
              od
              do
                45 :≡ (LessConstSmall 3,[18],NONE);
                if_var 45
                  do
                    46 :≡ (Const 0,[],NONE);
                    47 :≡ (El,[10; 46],NONE);
                    call (48,⦕ 0; 1; 2; 3; 4; 5; 6 ⦖) NONE [7; 8; 9; 10; 47]
                      NONE;
                    49 :≡ (Const 1,[],NONE);
                    50 :≡ (El,[48; 49],NONE);
                    51 :≡ (EqualInt 6,[50],NONE);
                    if_var 51
                      do
                        52 :≡ (Const 0,[],NONE);
                        53 :≡ (El,[48; ... ],NONE);
                        tailcall NONE [0; 1; 2; ... ; ... ]
                      od (tailcall_bvl_stub_6 [0; 1; 2; 3; 4; ... ; ... ])
                  od
                  do
                    57 :≡ (LessConstSmall 4,[18],NONE);
                    if_var 57
                      do
                        58 :≡ (Const 0,[],NONE);
                        59 :≡ (El,[10; 58],NONE);
                        call (60,⦕ 0; 1; 2; 3; 4; 5 ⦖) NONE
                          [6; 7; 8; ... ; ... ] NONE;
                        61 :≡ (Const 1,[],NONE);
                        62 :≡ (El,[60; 61],NONE);
                        63 :≡ (EqualInt 5,[62],NONE);
                        if_var 63
                          do
                            64 :≡ (... ... ,... ,... );
                            65 :≡ (El,... ,... );
                            tailcall NONE [0; ... ; ... ]
                          od (tailcall_bvl_stub_5 [0; 1; 2; ... ; ... ])
                      od
                      do
                        69 :≡ (Const 0,[],NONE);
                        70 :≡ (El,[10; 69],NONE);
                        call (71,⦕ 0; 1; 2; 3; 4 ⦖) NONE
                          [5; 6; 7; 8; ... ; ... ] NONE;
                        72 :≡ (Const 1,[],NONE);
                        73 :≡ (El,[71; 72],NONE);
                        74 :≡ (EqualInt 4,[73],NONE);
                        if_var 74
                          do
                            75 :≡ (Const 0,[],NONE);
                            76 :≡ (El,[... ; ... ],NONE);
                            tailcall NONE [0; 1; ... ; ... ]
                          od (tailcall_bvl_stub_4 [0; 1; 2; 3; ... ; ... ])
                      od
                  od
              od
          od
          do
            83 :≡ (LessConstSmall 7,[18],NONE);
            if_var 83
              do
                84 :≡ (LessConstSmall 6,[18],NONE);
                if_var 84
                  do
                    85 :≡ (Const 0,[],NONE);
                    86 :≡ (El,[10; 85],NONE);
                    call (87,⦕ 0; 1; 2; 3 ⦖) NONE [4; 5; 6; 7; 8; ... ; ... ]
                      NONE;
                    88 :≡ (Const 1,[],NONE);
                    89 :≡ (El,[87; 88],NONE);
                    90 :≡ (EqualInt 3,[89],NONE);
                    if_var 90
                      do
                        91 :≡ (Const 0,[],NONE);
                        92 :≡ (El,[87; ... ],NONE);
                        tailcall NONE [0; 1; 2; ... ; ... ]
                      od (tailcall_bvl_stub_3 [0; 1; 2; 3; 87])
                  od
                  do
                    96 :≡ (Const 0,[],NONE);
                    97 :≡ (El,[10; 96],NONE);
                    call (98,⦕ 0; 1; 2 ⦖) NONE [3; 4; 5; 6; 7; 8; ... ; ... ]
                      NONE;
                    99 :≡ (Const 1,[],NONE);
                    100 :≡ (El,[98; 99],NONE);
                    101 :≡ (EqualInt 2,[100],NONE);
                    if_var 101
                      do
                        102 :≡ (Const 0,[],NONE);
                        103 :≡ (El,[98; 102],NONE);
                        tailcall NONE [0; 1; 2; 98; ... ]
                      od (tailcall_bvl_stub_2 [0; 1; 2; 98])
                  od
              od
              do
                108 :≡ (LessConstSmall 8,[18],NONE);
                if_var 108
                  do
                    109 :≡ (Const 0,[],NONE);
                    110 :≡ (El,[10; 109],NONE);
                    call (111,⦕ 0; 1 ⦖) NONE [2; 3; 4; 5; 6; 7; ... ; ... ]
                      NONE;
                    112 :≡ (Const 1,[],NONE);
                    113 :≡ (El,[111; 112],NONE);
                    114 :≡ (EqualInt 1,[113],NONE);
                    if_var 114
                      do
                        115 :≡ (Const 0,[],NONE);
                        116 :≡ (El,[111; 115],NONE);
                        tailcall NONE [0; 1; 111; 116]
                      od (tailcall_bvl_stub_1 [0; 1; 111])
                  od
                  do
                    120 :≡ (LessConstSmall 9,[18],NONE);
                    if_var 120
                      do
                        121 :≡ (Const 0,[],NONE);
                        122 :≡ (El,[10; 121],NONE);
                        call (123,⦕ 0 ⦖) NONE [1; 2; 3; 4; ... ; ... ] NONE;
                        124 :≡ (Const 1,[],NONE);
                        125 :≡ (El,[123; 124],NONE);
                        126 :≡ (EqualInt 0,[125],NONE);
                        if_var 126
                          do
                            127 :≡ (Const 0,[],NONE);
                            128 :≡ (El,[... ; ... ],NONE);
                            tailcall NONE [0; 123; ... ]
                          od (tailcall_bvl_stub_0 [0; 123])
                      od
                      do
                        132 :≡ (Const 0,[],NONE);
                        133 :≡ (El,[10; 132],NONE);
                        call (134,LN) NONE [0; 1; 2; 3; 4; ... ; ... ] NONE;
                        135 :≡ (Const 1,[],NONE);
                        136 :≡ (El,[134; 135],NONE);
                        137 :≡ (EqualInt 0,[136],NONE);
                        if_var 137
                          do
                            138 :≡ (Const 0,[],NONE);
                            139 :≡ (El,[134; ... ],NONE);
                            tailcall NONE [134; 139]
                          od (tailcall_bvl_stub_0 [134])
                      od
                  od
              od
          od
      od
      do
        147 :≡ (TagEq 30,[10],NONE);
        if_var 147
          do
            148 :≡ (Const 1,[],NONE);
            149 :≡ (El,[10; 148],NONE);
            150 :≡ (Const 2,[],NONE);
            151 :≡ (Const (-1),[],NONE);
            152 :≡
            (Add,[151; 149],
             SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 14; 149; 150; 151 ⦖);
            153 :≡
            (Mult,[152; 149],
             SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 14; 149; 150; 152 ⦖);
            154 :≡
            (Div,[153; 150],
             SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 14; 150; 153 ⦖);
            155 :≡ (Const 9,[],NONE);
            156 :≡
            (Add,[155; 154],
             SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 14; 154; 155 ⦖);
            makespace 14 ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 14; 156 ⦖;
            157 :≡ (Const 1,[],NONE);
            158 :≡ (GlobalsPtr,[],NONE);
            159 :≡ (El,[158; 157],NONE);
            160 :≡ (El,[159; 156],NONE);
            161 :≡
            (Cons 31,[160; 14; 10; 0; 1; 2; 3; 4; 5; 6; ... ; ... ],NONE);
            return 161
          od
          do
            162 :≡ (LengthBlock,[10],NONE);
            163 :≡ (Const (-3),[],NONE);
            164 :≡
            (Add,[163; 162],
             SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 14; 162; 163 ⦖);
            165 :≡ (Const 2,[],NONE);
            166 :≡ (El,[10; 165],NONE);
            167 :≡ (Const 10,[],NONE);
            168 :≡
            (Add,[167; 14],
             SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 14; 164; 166; 167 ⦖);
            169 :≡
            (Add,[168; 164],
             SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 14; 164; 166; 168 ⦖);
            170 :≡ (Const 9,[],NONE);
            171 :≡
            (Add,[170; 164],
             SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 14; 164; 166; 169; 170 ⦖);
            172 :≡ (Const 2,[],NONE);
            173 :≡ (Const (-1),[],NONE);
            174 :≡
            (Add,[173; 169],
             SOME
               ⦕
                 0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 14; 164; 166; 169; 171; 172;
                 173
               ⦖);
            175 :≡
            (Mult,[174; 169],
             SOME
               ⦕
                 0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 14; 164; 166; 169; 171; 172;
                 174
               ⦖);
            176 :≡
            (Div,[175; 172],
             SOME
               ⦕
                 0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 14; 164; 166; 171; 172; 175
               ⦖);
            177 :≡
            (Add,[176; 171],
             SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 14; 164; 166; 171; 176 ⦖);
            178 :≡ (Const 1,[],NONE);
            179 :≡ (GlobalsPtr,[],NONE);
            180 :≡ (El,[179; 178],NONE);
            181 :≡ (El,[180; 177],NONE);
            182 :≡ (Const 13,[],NONE);
            183 :≡
            (Add,[182; 164],
             SOME ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 14; 164; 166; 181; 182 ⦖);
            184 :≡ (Const 3,[],NONE);
            185 :≡
            (ConsExtend 31,
             [10; 184; 164; 183; 181; 14; 166; 0; 1; 2; 3; ... ; ... ],
             SOME
               ⦕
                 0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10; 14; 164; 166; 181; 183; 184
               ⦖);
            return 185
          od
      od
  od

bvl_stub_10 [0; 1] =
  do
    2 :≡ (Const 2,[],NONE);
    3 :≡ (El,[1; 2],NONE);
    4 :≡ (Const 3,[],NONE);
    5 :≡ (El,[1; 4],NONE);
    6 :≡ (Const 0,[],NONE);
    7 :≡ (El,[3; 6],NONE);
    tailcall NONE [0; 5; 3; 7]
  od

bvl_stub_11 [0; 1; 2] =
  do
    3 :≡ (Const 2,[],NONE);
    4 :≡ (El,[2; 3],NONE);
    5 :≡ (Const 3,[],NONE);
    6 :≡ (El,[2; 5],NONE);
    7 :≡ (Const 0,[],NONE);
    8 :≡ (El,[4; 7],NONE);
    tailcall NONE [0; 1; 6; 4; 8]
  od

bvl_stub_12 [0; 1] =
  do
    2 :≡ (Const 2,[],NONE);
    3 :≡ (El,[1; 2],NONE);
    4 :≡ (Const 3,[],NONE);
    5 :≡ (El,[1; 4],NONE);
    6 :≡ (Const 4,[],NONE);
    7 :≡ (El,[1; 6],NONE);
    8 :≡ (Const 0,[],NONE);
    9 :≡ (El,[3; 8],NONE);
    tailcall NONE [0; 5; 7; 3; 9]
  od

bvl_stub_13 [0; 1; 2; 3] =
  do
    4 :≡ (Const 2,[],NONE);
    5 :≡ (El,[3; 4],NONE);
    6 :≡ (Const 3,[],NONE);
    7 :≡ (El,[3; 6],NONE);
    8 :≡ (Const 0,[],NONE);
    9 :≡ (El,[5; 8],NONE);
    tailcall NONE [0; 1; 2; 7; 5; 9]
  od

bvl_stub_14 [0; 1; 2] =
  do
    3 :≡ (Const 2,[],NONE);
    4 :≡ (El,[2; 3],NONE);
    5 :≡ (Const 3,[],NONE);
    6 :≡ (El,[2; 5],NONE);
    7 :≡ (Const 4,[],NONE);
    8 :≡ (El,[2; 7],NONE);
    9 :≡ (Const 0,[],NONE);
    10 :≡ (El,[4; 9],NONE);
    tailcall NONE [0; 1; 6; 8; 4; 10]
  od

bvl_stub_15 [0; 1] =
  do
    2 :≡ (Const 2,[],NONE);
    3 :≡ (El,[1; 2],NONE);
    4 :≡ (Const 3,[],NONE);
    5 :≡ (El,[1; 4],NONE);
    6 :≡ (Const 4,[],NONE);
    7 :≡ (El,[1; 6],NONE);
    8 :≡ (Const 5,[],NONE);
    9 :≡ (El,[1; 8],NONE);
    10 :≡ (Const 0,[],NONE);
    11 :≡ (El,[3; 10],NONE);
    tailcall NONE [0; 5; 7; 9; 3; 11]
  od

bvl_stub_16 [0; 1; 2; 3; 4] =
  do
    5 :≡ (Const 2,[],NONE);
    6 :≡ (El,[4; 5],NONE);
    7 :≡ (Const 3,[],NONE);
    8 :≡ (El,[4; 7],NONE);
    9 :≡ (Const 0,[],NONE);
    10 :≡ (El,[6; 9],NONE);
    tailcall NONE [0; 1; 2; 3; 8; 6; 10]
  od

bvl_stub_17 [0; 1; 2; 3] =
  do
    4 :≡ (Const 2,[],NONE);
    5 :≡ (El,[3; 4],NONE);
    6 :≡ (Const 3,[],NONE);
    7 :≡ (El,[3; 6],NONE);
    8 :≡ (Const 4,[],NONE);
    9 :≡ (El,[3; 8],NONE);
    10 :≡ (Const 0,[],NONE);
    11 :≡ (El,[5; 10],NONE);
    tailcall NONE [0; 1; 2; 7; 9; 5; 11]
  od

bvl_stub_18 [0; 1; 2] =
  do
    3 :≡ (Const 2,[],NONE);
    4 :≡ (El,[2; 3],NONE);
    5 :≡ (Const 3,[],NONE);
    6 :≡ (El,[2; 5],NONE);
    7 :≡ (Const 4,[],NONE);
    8 :≡ (El,[2; 7],NONE);
    9 :≡ (Const 5,[],NONE);
    10 :≡ (El,[2; 9],NONE);
    11 :≡ (Const 0,[],NONE);
    12 :≡ (El,[4; 11],NONE);
    tailcall NONE [0; 1; 6; 8; 10; 4; 12]
  od

bvl_stub_19 [0; 1] =
  do
    2 :≡ (Const 2,[],NONE);
    3 :≡ (El,[1; 2],NONE);
    4 :≡ (Const 3,[],NONE);
    5 :≡ (El,[1; 4],NONE);
    6 :≡ (Const 4,[],NONE);
    7 :≡ (El,[1; 6],NONE);
    8 :≡ (Const 5,[],NONE);
    9 :≡ (El,[1; 8],NONE);
    10 :≡ (Const 6,[],NONE);
    11 :≡ (El,[1; 10],NONE);
    12 :≡ (Const 0,[],NONE);
    13 :≡ (El,[3; 12],NONE);
    tailcall NONE [0; 5; 7; 9; 11; 3; 13]
  od

bvl_stub_20 [0; 1; 2; 3; 4; 5] =
  do
    6 :≡ (Const 2,[],NONE);
    7 :≡ (El,[5; 6],NONE);
    8 :≡ (Const 3,[],NONE);
    9 :≡ (El,[5; 8],NONE);
    10 :≡ (Const 0,[],NONE);
    11 :≡ (El,[7; 10],NONE);
    tailcall NONE [0; 1; 2; 3; 4; 9; 7; 11]
  od

bvl_stub_21 [0; 1; 2; 3; 4] =
  do
    5 :≡ (Const 2,[],NONE);
    6 :≡ (El,[4; 5],NONE);
    7 :≡ (Const 3,[],NONE);
    8 :≡ (El,[4; 7],NONE);
    9 :≡ (Const 4,[],NONE);
    10 :≡ (El,[4; 9],NONE);
    11 :≡ (Const 0,[],NONE);
    12 :≡ (El,[6; 11],NONE);
    tailcall NONE [0; 1; 2; 3; 8; 10; 6; 12]
  od

bvl_stub_22 [0; 1; 2; 3] =
  do
    4 :≡ (Const 2,[],NONE);
    5 :≡ (El,[3; 4],NONE);
    6 :≡ (Const 3,[],NONE);
    7 :≡ (El,[3; 6],NONE);
    8 :≡ (Const 4,[],NONE);
    9 :≡ (El,[3; 8],NONE);
    10 :≡ (Const 5,[],NONE);
    11 :≡ (El,[3; 10],NONE);
    12 :≡ (Const 0,[],NONE);
    13 :≡ (El,[5; 12],NONE);
    tailcall NONE [0; 1; 2; 7; 9; 11; 5; 13]
  od

bvl_stub_23 [0; 1; 2] =
  do
    3 :≡ (Const 2,[],NONE);
    4 :≡ (El,[2; 3],NONE);
    5 :≡ (Const 3,[],NONE);
    6 :≡ (El,[2; 5],NONE);
    7 :≡ (Const 4,[],NONE);
    8 :≡ (El,[2; 7],NONE);
    9 :≡ (Const 5,[],NONE);
    10 :≡ (El,[2; 9],NONE);
    11 :≡ (Const 6,[],NONE);
    12 :≡ (El,[2; 11],NONE);
    13 :≡ (Const 0,[],NONE);
    14 :≡ (El,[4; 13],NONE);
    tailcall NONE [0; 1; 6; 8; 10; 12; 4; 14]
  od

bvl_stub_24 [0; 1] =
  do
    2 :≡ (Const 2,[],NONE);
    3 :≡ (El,[1; 2],NONE);
    4 :≡ (Const 3,[],NONE);
    5 :≡ (El,[1; 4],NONE);
    6 :≡ (Const 4,[],NONE);
    7 :≡ (El,[1; 6],NONE);
    8 :≡ (Const 5,[],NONE);
    9 :≡ (El,[1; 8],NONE);
    10 :≡ (Const 6,[],NONE);
    11 :≡ (El,[1; 10],NONE);
    12 :≡ (Const 7,[],NONE);
    13 :≡ (El,[1; 12],NONE);
    14 :≡ (Const 0,[],NONE);
    15 :≡ (El,[3; 14],NONE);
    tailcall NONE [0; 5; 7; 9; 11; 13; 3; 15]
  od

bvl_stub_25 [0; 1; 2; 3; 4; 5; 6] =
  do
    7 :≡ (Const 2,[],NONE);
    8 :≡ (El,[6; 7],NONE);
    9 :≡ (Const 3,[],NONE);
    10 :≡ (El,[6; 9],NONE);
    11 :≡ (Const 0,[],NONE);
    12 :≡ (El,[8; 11],NONE);
    tailcall NONE [0; 1; 2; 3; 4; 5; 10; 8; 12]
  od

bvl_stub_26 [0; 1; 2; 3; 4; 5] =
  do
    6 :≡ (Const 2,[],NONE);
    7 :≡ (El,[5; 6],NONE);
    8 :≡ (Const 3,[],NONE);
    9 :≡ (El,[5; 8],NONE);
    10 :≡ (Const 4,[],NONE);
    11 :≡ (El,[5; 10],NONE);
    12 :≡ (Const 0,[],NONE);
    13 :≡ (El,[7; 12],NONE);
    tailcall NONE [0; 1; 2; 3; 4; 9; 11; 7; 13]
  od

bvl_stub_27 [0; 1; 2; 3; 4] =
  do
    5 :≡ (Const 2,[],NONE);
    6 :≡ (El,[4; 5],NONE);
    7 :≡ (Const 3,[],NONE);
    8 :≡ (El,[4; 7],NONE);
    9 :≡ (Const 4,[],NONE);
    10 :≡ (El,[4; 9],NONE);
    11 :≡ (Const 5,[],NONE);
    12 :≡ (El,[4; 11],NONE);
    13 :≡ (Const 0,[],NONE);
    14 :≡ (El,[6; 13],NONE);
    tailcall NONE [0; 1; 2; 3; 8; 10; 12; 6; 14]
  od

bvl_stub_28 [0; 1; 2; 3] =
  do
    4 :≡ (Const 2,[],NONE);
    5 :≡ (El,[3; 4],NONE);
    6 :≡ (Const 3,[],NONE);
    7 :≡ (El,[3; 6],NONE);
    8 :≡ (Const 4,[],NONE);
    9 :≡ (El,[3; 8],NONE);
    10 :≡ (Const 5,[],NONE);
    11 :≡ (El,[3; 10],NONE);
    12 :≡ (Const 6,[],NONE);
    13 :≡ (El,[3; 12],NONE);
    14 :≡ (Const 0,[],NONE);
    15 :≡ (El,[5; 14],NONE);
    tailcall NONE [0; 1; 2; 7; 9; 11; 13; 5; 15]
  od

bvl_stub_29 [0; 1; 2] =
  do
    3 :≡ (Const 2,[],NONE);
    4 :≡ (El,[2; 3],NONE);
    5 :≡ (Const 3,[],NONE);
    6 :≡ (El,[2; 5],NONE);
    7 :≡ (Const 4,[],NONE);
    8 :≡ (El,[2; 7],NONE);
    9 :≡ (Const 5,[],NONE);
    10 :≡ (El,[2; 9],NONE);
    11 :≡ (Const 6,[],NONE);
    12 :≡ (El,[2; 11],NONE);
    13 :≡ (Const 7,[],NONE);
    14 :≡ (El,[2; 13],NONE);
    15 :≡ (Const 0,[],NONE);
    16 :≡ (El,[4; 15],NONE);
    tailcall NONE [0; 1; 6; 8; 10; 12; 14; 4; 16]
  od

bvl_stub_30 [0; 1] =
  do
    2 :≡ (Const 2,[],NONE);
    3 :≡ (El,[1; 2],NONE);
    4 :≡ (Const 3,[],NONE);
    5 :≡ (El,[1; 4],NONE);
    6 :≡ (Const 4,[],NONE);
    7 :≡ (El,[1; 6],NONE);
    8 :≡ (Const 5,[],NONE);
    9 :≡ (El,[1; 8],NONE);
    10 :≡ (Const 6,[],NONE);
    11 :≡ (El,[1; 10],NONE);
    12 :≡ (Const 7,[],NONE);
    13 :≡ (El,[1; 12],NONE);
    14 :≡ (Const 8,[],NONE);
    15 :≡ (El,[1; 14],NONE);
    16 :≡ (Const 0,[],NONE);
    17 :≡ (El,[3; 16],NONE);
    tailcall NONE [0; 5; 7; 9; 11; 13; 15; 3; 17]
  od

bvl_stub_31 [0; 1; 2; 3; 4; 5; 6; 7] =
  do
    8 :≡ (Const 2,[],NONE);
    9 :≡ (El,[7; 8],NONE);
    10 :≡ (Const 3,[],NONE);
    11 :≡ (El,[7; 10],NONE);
    12 :≡ (Const 0,[],NONE);
    13 :≡ (El,[9; 12],NONE);
    tailcall NONE [0; 1; 2; 3; 4; 5; 6; 11; 9; 13]
  od

bvl_stub_32 [0; 1; 2; 3; 4; 5; 6] =
  do
    7 :≡ (Const 2,[],NONE);
    8 :≡ (El,[6; 7],NONE);
    9 :≡ (Const 3,[],NONE);
    10 :≡ (El,[6; 9],NONE);
    11 :≡ (Const 4,[],NONE);
    12 :≡ (El,[6; 11],NONE);
    13 :≡ (Const 0,[],NONE);
    14 :≡ (El,[8; 13],NONE);
    tailcall NONE [0; 1; 2; 3; 4; 5; 10; 12; 8; 14]
  od

bvl_stub_33 [0; 1; 2; 3; 4; 5] =
  do
    6 :≡ (Const 2,[],NONE);
    7 :≡ (El,[5; 6],NONE);
    8 :≡ (Const 3,[],NONE);
    9 :≡ (El,[5; 8],NONE);
    10 :≡ (Const 4,[],NONE);
    11 :≡ (El,[5; 10],NONE);
    12 :≡ (Const 5,[],NONE);
    13 :≡ (El,[5; 12],NONE);
    14 :≡ (Const 0,[],NONE);
    15 :≡ (El,[7; 14],NONE);
    tailcall NONE [0; 1; 2; 3; 4; 9; 11; 13; 7; 15]
  od

bvl_stub_34 [0; 1; 2; 3; 4] =
  do
    5 :≡ (Const 2,[],NONE);
    6 :≡ (El,[4; 5],NONE);
    7 :≡ (Const 3,[],NONE);
    8 :≡ (El,[4; 7],NONE);
    9 :≡ (Const 4,[],NONE);
    10 :≡ (El,[4; 9],NONE);
    11 :≡ (Const 5,[],NONE);
    12 :≡ (El,[4; 11],NONE);
    13 :≡ (Const 6,[],NONE);
    14 :≡ (El,[4; 13],NONE);
    15 :≡ (Const 0,[],NONE);
    16 :≡ (El,[6; 15],NONE);
    tailcall NONE [0; 1; 2; 3; 8; 10; 12; 14; 6; 16]
  od

bvl_stub_35 [0; 1; 2; 3] =
  do
    4 :≡ (Const 2,[],NONE);
    5 :≡ (El,[3; 4],NONE);
    6 :≡ (Const 3,[],NONE);
    7 :≡ (El,[3; 6],NONE);
    8 :≡ (Const 4,[],NONE);
    9 :≡ (El,[3; 8],NONE);
    10 :≡ (Const 5,[],NONE);
    11 :≡ (El,[3; 10],NONE);
    12 :≡ (Const 6,[],NONE);
    13 :≡ (El,[3; 12],NONE);
    14 :≡ (Const 7,[],NONE);
    15 :≡ (El,[3; 14],NONE);
    16 :≡ (Const 0,[],NONE);
    17 :≡ (El,[5; 16],NONE);
    tailcall NONE [0; 1; 2; 7; 9; 11; 13; 15; 5; 17]
  od

bvl_stub_36 [0; 1; 2] =
  do
    3 :≡ (Const 2,[],NONE);
    4 :≡ (El,[2; 3],NONE);
    5 :≡ (Const 3,[],NONE);
    6 :≡ (El,[2; 5],NONE);
    7 :≡ (Const 4,[],NONE);
    8 :≡ (El,[2; 7],NONE);
    9 :≡ (Const 5,[],NONE);
    10 :≡ (El,[2; 9],NONE);
    11 :≡ (Const 6,[],NONE);
    12 :≡ (El,[2; 11],NONE);
    13 :≡ (Const 7,[],NONE);
    14 :≡ (El,[2; 13],NONE);
    15 :≡ (Const 8,[],NONE);
    16 :≡ (El,[2; 15],NONE);
    17 :≡ (Const 0,[],NONE);
    18 :≡ (El,[4; 17],NONE);
    tailcall NONE [0; 1; 6; 8; 10; 12; 14; 16; 4; 18]
  od

bvl_stub_37 [0; 1] =
  do
    2 :≡ (Const 2,[],NONE);
    3 :≡ (El,[1; 2],NONE);
    4 :≡ (Const 3,[],NONE);
    5 :≡ (El,[1; 4],NONE);
    6 :≡ (Const 4,[],NONE);
    7 :≡ (El,[1; 6],NONE);
    8 :≡ (Const 5,[],NONE);
    9 :≡ (El,[1; 8],NONE);
    10 :≡ (Const 6,[],NONE);
    11 :≡ (El,[1; 10],NONE);
    12 :≡ (Const 7,[],NONE);
    13 :≡ (El,[1; 12],NONE);
    14 :≡ (Const 8,[],NONE);
    15 :≡ (El,[1; 14],NONE);
    16 :≡ (Const 9,[],NONE);
    17 :≡ (El,[1; 16],NONE);
    18 :≡ (Const 0,[],NONE);
    19 :≡ (El,[3; 18],NONE);
    tailcall NONE [0; 5; 7; 9; 11; 13; 15; 17; 3; 19]
  od

bvl_stub_38 [0; 1; 2; 3; 4; 5; 6; 7; 8] =
  do
    9 :≡ (Const 2,[],NONE);
    10 :≡ (El,[8; 9],NONE);
    11 :≡ (Const 3,[],NONE);
    12 :≡ (El,[8; 11],NONE);
    13 :≡ (Const 0,[],NONE);
    14 :≡ (El,[10; 13],NONE);
    tailcall NONE [0; 1; 2; 3; 4; 5; 6; 7; 12; 10; 14]
  od

bvl_stub_39 [0; 1; 2; 3; 4; 5; 6; 7] =
  do
    8 :≡ (Const 2,[],NONE);
    9 :≡ (El,[7; 8],NONE);
    10 :≡ (Const 3,[],NONE);
    11 :≡ (El,[7; 10],NONE);
    12 :≡ (Const 4,[],NONE);
    13 :≡ (El,[7; 12],NONE);
    14 :≡ (Const 0,[],NONE);
    15 :≡ (El,[9; 14],NONE);
    tailcall NONE [0; 1; 2; 3; 4; 5; 6; 11; 13; 9; 15]
  od

bvl_stub_40 [0; 1; 2; 3; 4; 5; 6] =
  do
    7 :≡ (Const 2,[],NONE);
    8 :≡ (El,[6; 7],NONE);
    9 :≡ (Const 3,[],NONE);
    10 :≡ (El,[6; 9],NONE);
    11 :≡ (Const 4,[],NONE);
    12 :≡ (El,[6; 11],NONE);
    13 :≡ (Const 5,[],NONE);
    14 :≡ (El,[6; 13],NONE);
    15 :≡ (Const 0,[],NONE);
    16 :≡ (El,[8; 15],NONE);
    tailcall NONE [0; 1; 2; 3; 4; 5; 10; 12; 14; 8; 16]
  od

bvl_stub_41 [0; 1; 2; 3; 4; 5] =
  do
    6 :≡ (Const 2,[],NONE);
    7 :≡ (El,[5; 6],NONE);
    8 :≡ (Const 3,[],NONE);
    9 :≡ (El,[5; 8],NONE);
    10 :≡ (Const 4,[],NONE);
    11 :≡ (El,[5; 10],NONE);
    12 :≡ (Const 5,[],NONE);
    13 :≡ (El,[5; 12],NONE);
    14 :≡ (Const 6,[],NONE);
    15 :≡ (El,[5; 14],NONE);
    16 :≡ (Const 0,[],NONE);
    17 :≡ (El,[7; 16],NONE);
    tailcall NONE [0; 1; 2; 3; 4; 9; 11; 13; 15; 7; 17]
  od

bvl_stub_42 [0; 1; 2; 3; 4] =
  do
    5 :≡ (Const 2,[],NONE);
    6 :≡ (El,[4; 5],NONE);
    7 :≡ (Const 3,[],NONE);
    8 :≡ (El,[4; 7],NONE);
    9 :≡ (Const 4,[],NONE);
    10 :≡ (El,[4; 9],NONE);
    11 :≡ (Const 5,[],NONE);
    12 :≡ (El,[4; 11],NONE);
    13 :≡ (Const 6,[],NONE);
    14 :≡ (El,[4; 13],NONE);
    15 :≡ (Const 7,[],NONE);
    16 :≡ (El,[4; 15],NONE);
    17 :≡ (Const 0,[],NONE);
    18 :≡ (El,[6; 17],NONE);
    tailcall NONE [0; 1; 2; 3; 8; 10; 12; 14; 16; 6; 18]
  od

bvl_stub_43 [0; 1; 2; 3] =
  do
    4 :≡ (Const 2,[],NONE);
    5 :≡ (El,[3; 4],NONE);
    6 :≡ (Const 3,[],NONE);
    7 :≡ (El,[3; 6],NONE);
    8 :≡ (Const 4,[],NONE);
    9 :≡ (El,[3; 8],NONE);
    10 :≡ (Const 5,[],NONE);
    11 :≡ (El,[3; 10],NONE);
    12 :≡ (Const 6,[],NONE);
    13 :≡ (El,[3; 12],NONE);
    14 :≡ (Const 7,[],NONE);
    15 :≡ (El,[3; 14],NONE);
    16 :≡ (Const 8,[],NONE);
    17 :≡ (El,[3; 16],NONE);
    18 :≡ (Const 0,[],NONE);
    19 :≡ (El,[5; 18],NONE);
    tailcall NONE [0; 1; 2; 7; 9; 11; 13; 15; 17; 5; 19]
  od

bvl_stub_44 [0; 1; 2] =
  do
    3 :≡ (Const 2,[],NONE);
    4 :≡ (El,[2; 3],NONE);
    5 :≡ (Const 3,[],NONE);
    6 :≡ (El,[2; 5],NONE);
    7 :≡ (Const 4,[],NONE);
    8 :≡ (El,[2; 7],NONE);
    9 :≡ (Const 5,[],NONE);
    10 :≡ (El,[2; 9],NONE);
    11 :≡ (Const 6,[],NONE);
    12 :≡ (El,[2; 11],NONE);
    13 :≡ (Const 7,[],NONE);
    14 :≡ (El,[2; 13],NONE);
    15 :≡ (Const 8,[],NONE);
    16 :≡ (El,[2; 15],NONE);
    17 :≡ (Const 9,[],NONE);
    18 :≡ (El,[2; 17],NONE);
    19 :≡ (Const 0,[],NONE);
    20 :≡ (El,[4; 19],NONE);
    tailcall NONE [0; 1; 6; 8; 10; 12; 14; 16; 18; 4; 20]
  od

bvl_stub_45 [0; 1] =
  do
    2 :≡ (Const 2,[],NONE);
    3 :≡ (El,[1; 2],NONE);
    4 :≡ (Const 3,[],NONE);
    5 :≡ (El,[1; 4],NONE);
    6 :≡ (Const 4,[],NONE);
    7 :≡ (El,[1; 6],NONE);
    8 :≡ (Const 5,[],NONE);
    9 :≡ (El,[1; 8],NONE);
    10 :≡ (Const 6,[],NONE);
    11 :≡ (El,[1; 10],NONE);
    12 :≡ (Const 7,[],NONE);
    13 :≡ (El,[1; 12],NONE);
    14 :≡ (Const 8,[],NONE);
    15 :≡ (El,[1; 14],NONE);
    16 :≡ (Const 9,[],NONE);
    17 :≡ (El,[1; 16],NONE);
    18 :≡ (Const 10,[],NONE);
    19 :≡ (El,[1; 18],NONE);
    20 :≡ (Const 0,[],NONE);
    21 :≡ (El,[3; 20],NONE);
    tailcall NONE [0; 5; 7; 9; 11; 13; 15; 17; 19; 3; 21]
  od

bvl_stub_46 [0; 1; 2; 3; 4; 5; 6; 7; 8; 9] =
  do
    10 :≡ (Const 2,[],NONE);
    11 :≡ (El,[9; 10],NONE);
    12 :≡ (Const 3,[],NONE);
    13 :≡ (El,[9; 12],NONE);
    14 :≡ (Const 0,[],NONE);
    15 :≡ (El,[11; 14],NONE);
    tailcall NONE [0; 1; 2; 3; 4; 5; 6; 7; 8; 13; 11; 15]
  od

bvl_stub_47 [0; 1; 2; 3; 4; 5; 6; 7; 8] =
  do
    9 :≡ (Const 2,[],NONE);
    10 :≡ (El,[8; 9],NONE);
    11 :≡ (Const 3,[],NONE);
    12 :≡ (El,[8; 11],NONE);
    13 :≡ (Const 4,[],NONE);
    14 :≡ (El,[8; 13],NONE);
    15 :≡ (Const 0,[],NONE);
    16 :≡ (El,[10; 15],NONE);
    tailcall NONE [0; 1; 2; 3; 4; 5; 6; 7; 12; 14; 10; 16]
  od

bvl_stub_48 [0; 1; 2; 3; 4; 5; 6; 7] =
  do
    8 :≡ (Const 2,[],NONE);
    9 :≡ (El,[7; 8],NONE);
    10 :≡ (Const 3,[],NONE);
    11 :≡ (El,[7; 10],NONE);
    12 :≡ (Const 4,[],NONE);
    13 :≡ (El,[7; 12],NONE);
    14 :≡ (Const 5,[],NONE);
    15 :≡ (El,[7; 14],NONE);
    16 :≡ (Const 0,[],NONE);
    17 :≡ (El,[9; 16],NONE);
    tailcall NONE [0; 1; 2; 3; 4; 5; 6; 11; 13; 15; 9; 17]
  od

bvl_stub_49 [0; 1; 2; 3; 4; 5; 6] =
  do
    7 :≡ (Const 2,[],NONE);
    8 :≡ (El,[6; 7],NONE);
    9 :≡ (Const 3,[],NONE);
    10 :≡ (El,[6; 9],NONE);
    11 :≡ (Const 4,[],NONE);
    12 :≡ (El,[6; 11],NONE);
    13 :≡ (Const 5,[],NONE);
    14 :≡ (El,[6; 13],NONE);
    15 :≡ (Const 6,[],NONE);
    16 :≡ (El,[6; 15],NONE);
    17 :≡ (Const 0,[],NONE);
    18 :≡ (El,[8; 17],NONE);
    tailcall NONE [0; 1; 2; 3; 4; 5; 10; 12; 14; 16; 8; 18]
  od

bvl_stub_50 [0; 1; 2; 3; 4; 5] =
  do
    6 :≡ (Const 2,[],NONE);
    7 :≡ (El,[5; 6],NONE);
    8 :≡ (Const 3,[],NONE);
    9 :≡ (El,[5; 8],NONE);
    10 :≡ (Const 4,[],NONE);
    11 :≡ (El,[5; 10],NONE);
    12 :≡ (Const 5,[],NONE);
    13 :≡ (El,[5; 12],NONE);
    14 :≡ (Const 6,[],NONE);
    15 :≡ (El,[5; 14],NONE);
    16 :≡ (Const 7,[],NONE);
    17 :≡ (El,[5; 16],NONE);
    18 :≡ (Const 0,[],NONE);
    19 :≡ (El,[7; 18],NONE);
    tailcall NONE [0; 1; 2; 3; 4; 9; 11; 13; 15; 17; 7; 19]
  od

bvl_stub_51 [0; 1; 2; 3; 4] =
  do
    5 :≡ (Const 2,[],NONE);
    6 :≡ (El,[4; 5],NONE);
    7 :≡ (Const 3,[],NONE);
    8 :≡ (El,[4; 7],NONE);
    9 :≡ (Const 4,[],NONE);
    10 :≡ (El,[4; 9],NONE);
    11 :≡ (Const 5,[],NONE);
    12 :≡ (El,[4; 11],NONE);
    13 :≡ (Const 6,[],NONE);
    14 :≡ (El,[4; 13],NONE);
    15 :≡ (Const 7,[],NONE);
    16 :≡ (El,[4; 15],NONE);
    17 :≡ (Const 8,[],NONE);
    18 :≡ (El,[4; 17],NONE);
    19 :≡ (Const 0,[],NONE);
    20 :≡ (El,[6; 19],NONE);
    tailcall NONE [0; 1; 2; 3; 8; 10; 12; 14; 16; 18; 6; 20]
  od

bvl_stub_52 [0; 1; 2; 3] =
  do
    4 :≡ (Const 2,[],NONE);
    5 :≡ (El,[3; 4],NONE);
    6 :≡ (Const 3,[],NONE);
    7 :≡ (El,[3; 6],NONE);
    8 :≡ (Const 4,[],NONE);
    9 :≡ (El,[3; 8],NONE);
    10 :≡ (Const 5,[],NONE);
    11 :≡ (El,[3; 10],NONE);
    12 :≡ (Const 6,[],NONE);
    13 :≡ (El,[3; 12],NONE);
    14 :≡ (Const 7,[],NONE);
    15 :≡ (El,[3; 14],NONE);
    16 :≡ (Const 8,[],NONE);
    17 :≡ (El,[3; 16],NONE);
    18 :≡ (Const 9,[],NONE);
    19 :≡ (El,[3; 18],NONE);
    20 :≡ (Const 0,[],NONE);
    21 :≡ (El,[5; 20],NONE);
    tailcall NONE [0; 1; 2; 7; 9; 11; 13; 15; 17; 19; 5; 21]
  od

bvl_stub_53 [0; 1; 2] =
  do
    3 :≡ (Const 2,[],NONE);
    4 :≡ (El,[2; 3],NONE);
    5 :≡ (Const 3,[],NONE);
    6 :≡ (El,[2; 5],NONE);
    7 :≡ (Const 4,[],NONE);
    8 :≡ (El,[2; 7],NONE);
    9 :≡ (Const 5,[],NONE);
    10 :≡ (El,[2; 9],NONE);
    11 :≡ (Const 6,[],NONE);
    12 :≡ (El,[2; 11],NONE);
    13 :≡ (Const 7,[],NONE);
    14 :≡ (El,[2; 13],NONE);
    15 :≡ (Const 8,[],NONE);
    16 :≡ (El,[2; 15],NONE);
    17 :≡ (Const 9,[],NONE);
    18 :≡ (El,[2; 17],NONE);
    19 :≡ (Const 10,[],NONE);
    20 :≡ (El,[2; 19],NONE);
    21 :≡ (Const 0,[],NONE);
    22 :≡ (El,[4; 21],NONE);
    tailcall NONE [0; 1; 6; 8; 10; 12; 14; 16; 18; 20; 4; 22]
  od

bvl_stub_54 [0; 1] =
  do
    2 :≡ (Const 2,[],NONE);
    3 :≡ (El,[1; 2],NONE);
    4 :≡ (Const 3,[],NONE);
    5 :≡ (El,[1; 4],NONE);
    6 :≡ (Const 4,[],NONE);
    7 :≡ (El,[1; 6],NONE);
    8 :≡ (Const 5,[],NONE);
    9 :≡ (El,[1; 8],NONE);
    10 :≡ (Const 6,[],NONE);
    11 :≡ (El,[1; 10],NONE);
    12 :≡ (Const 7,[],NONE);
    13 :≡ (El,[1; 12],NONE);
    14 :≡ (Const 8,[],NONE);
    15 :≡ (El,[1; 14],NONE);
    16 :≡ (Const 9,[],NONE);
    17 :≡ (El,[1; 16],NONE);
    18 :≡ (Const 10,[],NONE);
    19 :≡ (El,[1; 18],NONE);
    20 :≡ (Const 11,[],NONE);
    21 :≡ (El,[1; 20],NONE);
    22 :≡ (Const 0,[],NONE);
    23 :≡ (El,[3; 22],NONE);
    tailcall NONE [0; 5; 7; 9; 11; 13; 15; 17; 19; 21; 3; 23]
  od

bvl_init [] =
  do
    call_AllocGlobal (0,LN) [] NONE;
    makespace 46 LN;
    1 :≡ (Label_bvl_stub_54,[],NONE);
    2 :≡ (Label_bvl_stub_53,[],NONE);
    3 :≡ (Label_bvl_stub_52,[],NONE);
    4 :≡ (Label_bvl_stub_51,[],NONE);
    5 :≡ (Label_bvl_stub_50,[],NONE);
    6 :≡ (Label_bvl_stub_49,[],NONE);
    7 :≡ (Label_bvl_stub_48,[],NONE);
    8 :≡ (Label_bvl_stub_47,[],NONE);
    9 :≡ (Label_bvl_stub_46,[],NONE);
    10 :≡ (Label_bvl_stub_45,[],NONE);
    11 :≡ (Label_bvl_stub_44,[],NONE);
    12 :≡ (Label_bvl_stub_43,[],NONE);
    13 :≡ (Label_bvl_stub_42,[],NONE);
    14 :≡ (Label_bvl_stub_41,[],NONE);
    15 :≡ (Label_bvl_stub_40,[],NONE);
    16 :≡ (Label_bvl_stub_39,[],NONE);
    17 :≡ (Label_bvl_stub_38,[],NONE);
    18 :≡ (Label_bvl_stub_37,[],NONE);
    19 :≡ (Label_bvl_stub_36,[],NONE);
    20 :≡ (Label_bvl_stub_35,[],NONE);
    21 :≡ (Label_bvl_stub_34,[],NONE);
    22 :≡ (Label_bvl_stub_33,[],NONE);
    23 :≡ (Label_bvl_stub_32,[],NONE);
    24 :≡ (Label_bvl_stub_31,[],NONE);
    25 :≡ (Label_bvl_stub_30,[],NONE);
    26 :≡ (Label_bvl_stub_29,[],NONE);
    27 :≡ (Label_bvl_stub_28,[],NONE);
    28 :≡ (Label_bvl_stub_27,[],NONE);
    29 :≡ (Label_bvl_stub_26,[],NONE);
    30 :≡ (Label_bvl_stub_25,[],NONE);
    31 :≡ (Label_bvl_stub_24,[],NONE);
    32 :≡ (Label_bvl_stub_23,[],NONE);
    33 :≡ (Label_bvl_stub_22,[],NONE);
    34 :≡ (Label_bvl_stub_21,[],NONE);
    35 :≡ (Label_bvl_stub_20,[],NONE);
    36 :≡ (Label_bvl_stub_19,[],NONE);
    37 :≡ (Label_bvl_stub_18,[],NONE);
    38 :≡ (Label_bvl_stub_17,[],NONE);
    39 :≡ (Label_bvl_stub_16,[],NONE);
    40 :≡ (Label_bvl_stub_15,[],NONE);
    41 :≡ (Label_bvl_stub_14,[],NONE);
    42 :≡ (Label_bvl_stub_13,[],NONE);
    43 :≡ (Label_bvl_stub_12,[],NONE);
    44 :≡ (Label_bvl_stub_11,[],NONE);
    45 :≡ (Label_bvl_stub_10,[],NONE);
    46 :≡
    (Cons 0,
     [45; 44; 43; 42; 41; 40; 39; 38; 37; 36; 35; 34; 33; 32; 31; ... ; ... ],
     NONE);
    47 :≡ (Const 1,[],NONE);
    48 :≡ (GlobalsPtr,[],NONE);
    49 :≡ (Update,[48; 47; 46],NONE);
    tailcall_dec_0 []
  od

dec_0 [] =
  do
    call_AllocGlobal (0,LN) [] NONE;
    call_AllocGlobal (1,LN) [] NONE;
    call_AllocGlobal (2,LN) [] NONE;
    call_AllocGlobal (3,LN) [] NONE;
    call_AllocGlobal (4,LN) [] NONE;
    call_AllocGlobal (5,LN) [] NONE;
    call_AllocGlobal (6,LN) [] NONE;
    call_AllocGlobal (7,LN) [] NONE;
    call_AllocGlobal (8,LN) [] NONE;
    call_AllocGlobal (9,LN) [] NONE;
    call_AllocGlobal (10,LN) [] NONE;
    call_AllocGlobal (11,LN) [] NONE;
    call_AllocGlobal (12,LN) [] NONE;
    call_AllocGlobal (13,LN) [] NONE;
    call_AllocGlobal (14,LN) [] NONE;
    call_AllocGlobal (15,LN) [] NONE;
    call_AllocGlobal (16,LN) [] NONE;
    call_AllocGlobal (17,LN) [] NONE;
    call_AllocGlobal (18,LN) [] NONE;
    call_AllocGlobal (19,LN) [] NONE;
    call_AllocGlobal (20,LN) [] NONE;
    call_AllocGlobal (21,LN) [] NONE;
    call_AllocGlobal (22,LN) [] NONE;
    call_AllocGlobal (23,LN) [] NONE;
    call_AllocGlobal (24,LN) [] NONE;
    call_AllocGlobal (25,LN) [] NONE;
    call_AllocGlobal (26,LN) [] NONE;
    call_AllocGlobal (27,LN) [] NONE;
    call_AllocGlobal (28,LN) [] NONE;
    call_AllocGlobal (29,LN) [] NONE;
    call_AllocGlobal (30,LN) [] NONE;
    call_AllocGlobal (31,LN) [] NONE;
    call_AllocGlobal (32,LN) [] NONE;
    call_AllocGlobal (33,LN) [] NONE;
    call_AllocGlobal (34,LN) [] NONE;
    call_AllocGlobal (35,LN) [] NONE;
    call_AllocGlobal (36,LN) [] NONE;
    call_AllocGlobal (37,LN) [] NONE;
    call_AllocGlobal (38,LN) [] NONE;
    call_AllocGlobal (39,LN) [] NONE;
    call_AllocGlobal (40,LN) [] NONE;
    call_AllocGlobal (41,LN) [] NONE;
    call_AllocGlobal (42,LN) [] NONE;
    call_AllocGlobal (43,LN) [] NONE;
    call_AllocGlobal (44,LN) [] NONE;
    call_AllocGlobal (45,LN) [] NONE;
    call_AllocGlobal (46,LN) [] NONE;
    call_AllocGlobal (47,LN) [] NONE;
    call_AllocGlobal (48,LN) [] NONE;
    call_AllocGlobal (49,LN) [] NONE;
    call_AllocGlobal (50,LN) [] NONE;
    call_AllocGlobal (51,LN) [] NONE;
    call_AllocGlobal (52,LN) [] NONE;
    call_AllocGlobal (53,LN) [] NONE;
    call_AllocGlobal (54,LN) [] NONE;
    call_AllocGlobal (55,LN) [] NONE;
    call_AllocGlobal (56,LN) [] NONE;
    call_AllocGlobal (57,LN) [] NONE;
    call_AllocGlobal (58,LN) [] NONE;
    call_AllocGlobal (59,LN) [] NONE;
    call_AllocGlobal (60,LN) [] NONE;
    call_AllocGlobal (61,LN) [] NONE;
    call_AllocGlobal (62,LN) [] NONE;
    call_AllocGlobal (63,LN) [] NONE;
    call_AllocGlobal (64,LN) [] NONE;
    call_AllocGlobal (65,LN) [] NONE;
    call_AllocGlobal (66,LN) [] NONE;
    call_AllocGlobal (67,LN) [] NONE;
    call_AllocGlobal (68,LN) [] NONE;
    call_AllocGlobal (69,LN) [] NONE;
    call_AllocGlobal (70,LN) [] NONE;
    call_AllocGlobal (71,LN) [] NONE;
    call_AllocGlobal (72,LN) [] NONE;
    call_AllocGlobal (73,LN) [] NONE;
    call_AllocGlobal (74,LN) [] NONE;
    call_AllocGlobal (75,LN) [] NONE;
    call_AllocGlobal (76,LN) [] NONE;
    call_AllocGlobal (77,LN) [] NONE;
    call_AllocGlobal (78,LN) [] NONE;
    call_AllocGlobal (79,LN) [] NONE;
    call_AllocGlobal (80,LN) [] NONE;
    call_AllocGlobal (81,LN) [] NONE;
    call_AllocGlobal (82,LN) [] NONE;
    call_AllocGlobal (83,LN) [] NONE;
    call_AllocGlobal (84,LN) [] NONE;
    call_AllocGlobal (85,LN) [] NONE;
    call_AllocGlobal (86,LN) [] NONE;
    call_AllocGlobal (87,LN) [] NONE;
    call_AllocGlobal (88,LN) [] NONE;
    call_AllocGlobal (89,LN) [] NONE;
    call_AllocGlobal (90,LN) [] NONE;
    call_AllocGlobal (91,LN) [] NONE;
    call_AllocGlobal (92,LN) [] NONE;
    call_AllocGlobal (93,LN) [] NONE;
    call_AllocGlobal (94,LN) [] NONE;
    call_AllocGlobal (95,LN) [] NONE;
    call_AllocGlobal (96,LN) [] NONE;
    call_AllocGlobal (97,LN) [] NONE;
    call_AllocGlobal (98,LN) [] NONE;
    call_AllocGlobal (99,LN) [] NONE;
    call_AllocGlobal (100,LN) [] NONE;
    call_AllocGlobal (101,LN) [] NONE;
    call_AllocGlobal (102,LN) [] NONE;
    call_AllocGlobal (103,LN) [] NONE;
    call_AllocGlobal (104,LN) [] NONE;
    call_AllocGlobal (105,LN) [] NONE;
    call_AllocGlobal (106,LN) [] NONE;
    call_AllocGlobal (107,LN) [] NONE;
    call_AllocGlobal (108,LN) [] NONE;
    call_AllocGlobal (109,LN) [] NONE;
    call_AllocGlobal (110,LN) [] NONE;
    call_AllocGlobal (111,LN) [] NONE;
    call_AllocGlobal (112,LN) [] NONE;
    call_AllocGlobal (113,LN) [] NONE;
    call_AllocGlobal (114,LN) [] NONE;
    call_AllocGlobal (115,LN) [] NONE;
    call_AllocGlobal (116,LN) [] NONE;
    call_AllocGlobal (117,LN) [] NONE;
    call_AllocGlobal (118,LN) [] NONE;
    call_AllocGlobal (119,LN) [] NONE;
    call_AllocGlobal (120,LN) [] NONE;
    call_AllocGlobal (121,LN) [] NONE;
    call_AllocGlobal (122,LN) [] NONE;
    call_AllocGlobal (123,LN) [] NONE;
    call_AllocGlobal (124,LN) [] NONE;
    call_AllocGlobal (125,LN) [] NONE;
    call_AllocGlobal (126,LN) [] NONE;
    call_AllocGlobal (127,LN) [] NONE;
    call_AllocGlobal (128,LN) [] NONE;
    call_AllocGlobal (129,LN) [] NONE;
    call_AllocGlobal (130,LN) [] NONE;
    call_AllocGlobal (131,LN) [] NONE;
    call_AllocGlobal (132,LN) [] NONE;
    call_AllocGlobal (133,LN) [] NONE;
    call_AllocGlobal (134,LN) [] NONE;
    call_AllocGlobal (135,LN) [] NONE;
    call_AllocGlobal (136,LN) [] NONE;
    call_AllocGlobal (137,LN) [] NONE;
    call_AllocGlobal (138,LN) [] NONE;
    call_AllocGlobal (139,LN) [] NONE;
    call_AllocGlobal (140,LN) [] NONE;
    call_AllocGlobal (141,LN) [] NONE;
    call_AllocGlobal (142,LN) [] NONE;
    call_AllocGlobal (143,LN) [] NONE;
    call_AllocGlobal (144,LN) [] NONE;
    call_AllocGlobal (145,LN) [] NONE;
    call_AllocGlobal (146,LN) [] NONE;
    call_AllocGlobal (147,LN) [] NONE;
    call_AllocGlobal (148,LN) [] NONE;
    call_AllocGlobal (149,LN) [] NONE;
    call_AllocGlobal (150,LN) [] NONE;
    call_AllocGlobal (151,LN) [] NONE;
    call_AllocGlobal (152,LN) [] NONE;
    call_AllocGlobal (153,LN) [] NONE;
    call_AllocGlobal (154,LN) [] NONE;
    call_AllocGlobal (155,LN) [] NONE;
    call_AllocGlobal (156,LN) [] NONE;
    call_AllocGlobal (157,LN) [] NONE;
    call_AllocGlobal (158,LN) [] NONE;
    call_AllocGlobal (159,LN) [] NONE;
    call_AllocGlobal (160,LN) [] NONE;
    call_AllocGlobal (161,LN) [] NONE;
    call_AllocGlobal (162,LN) [] NONE;
    call_AllocGlobal (163,LN) [] NONE;
    call_AllocGlobal (164,LN) [] NONE;
    call_AllocGlobal (165,LN) [] NONE;
    call_AllocGlobal (166,LN) [] NONE;
    call_AllocGlobal (167,LN) [] NONE;
    call_AllocGlobal (168,LN) [] NONE;
    call_AllocGlobal (169,LN) [] NONE;
    call_AllocGlobal (170,LN) [] NONE;
    call_AllocGlobal (171,LN) [] NONE;
    call_AllocGlobal (172,LN) [] NONE;
    call_AllocGlobal (173,LN) [] NONE;
    call_AllocGlobal (174,LN) [] NONE;
    call_AllocGlobal (175,LN) [] NONE;
    call_AllocGlobal (176,LN) [] NONE;
    call_AllocGlobal (177,LN) [] NONE;
    call_AllocGlobal (178,LN) [] NONE;
    call_AllocGlobal (179,LN) [] NONE;
    call_AllocGlobal (180,LN) [] NONE;
    call_AllocGlobal (181,LN) [] NONE;
    call_AllocGlobal (182,LN) [] NONE;
    call_AllocGlobal (183,LN) [] NONE;
    call_AllocGlobal (184,LN) [] NONE;
    call_AllocGlobal (185,LN) [] NONE;
    call_AllocGlobal (186,LN) [] NONE;
    call_AllocGlobal (187,LN) [] NONE;
    call_AllocGlobal (188,LN) [] NONE;
    call_AllocGlobal (189,LN) [] NONE;
    call_AllocGlobal (190,LN) [] NONE;
    call_AllocGlobal (191,LN) [] NONE;
    call_AllocGlobal (192,LN) [] NONE;
    call_AllocGlobal (193,LN) [] NONE;
    call_AllocGlobal (194,LN) [] NONE;
    call_AllocGlobal (195,LN) [] NONE;
    call_AllocGlobal (196,LN) [] NONE;
    call_AllocGlobal (197,LN) [] NONE;
    call_AllocGlobal (198,LN) [] NONE;
    call_AllocGlobal (199,LN) [] NONE;
    call_AllocGlobal (200,LN) [] NONE;
    call_AllocGlobal (201,LN) [] NONE;
    call_AllocGlobal (202,LN) [] NONE;
    call_AllocGlobal (203,LN) [] NONE;
    call_AllocGlobal (204,LN) [] NONE;
    call_AllocGlobal (205,LN) [] NONE;
    call_AllocGlobal (206,LN) [] NONE;
    call_AllocGlobal (207,LN) [] NONE;
    call_AllocGlobal (208,LN) [] NONE;
    call_AllocGlobal (209,LN) [] NONE;
    call_AllocGlobal (210,LN) [] NONE;
    call_AllocGlobal (211,LN) [] NONE;
    call_AllocGlobal (212,LN) [] NONE;
    call_AllocGlobal (213,LN) [] NONE;
    call_AllocGlobal (214,LN) [] NONE;
    call_AllocGlobal (215,LN) [] NONE;
    call_AllocGlobal (216,LN) [] NONE;
    call_AllocGlobal (217,LN) [] NONE;
    call_AllocGlobal (218,LN) [] NONE;
    call_AllocGlobal (219,LN) [] NONE;
    call_AllocGlobal (220,LN) [] NONE;
    call_AllocGlobal (221,LN) [] NONE;
    call_AllocGlobal (222,LN) [] NONE;
    call_AllocGlobal (223,LN) [] NONE;
    call_AllocGlobal (224,LN) [] NONE;
    call_AllocGlobal (225,LN) [] NONE;
    call_AllocGlobal (226,LN) [] NONE;
    call_AllocGlobal (227,LN) [] NONE;
    call_AllocGlobal (228,LN) [] NONE;
    call_AllocGlobal (229,LN) [] NONE;
    call_AllocGlobal (230,LN) [] NONE;
    call_AllocGlobal (231,LN) [] NONE;
    call_AllocGlobal (232,LN) [] NONE;
    call_AllocGlobal (233,LN) [] NONE;
    call_AllocGlobal (234,LN) [] NONE;
    call_AllocGlobal (235,LN) [] NONE;
    call_AllocGlobal (236,LN) [] NONE;
    call_AllocGlobal (237,LN) [] NONE;
    call_AllocGlobal (238,LN) [] NONE;
    call_AllocGlobal (239,LN) [] NONE;
    call_AllocGlobal (240,LN) [] NONE;
    call_AllocGlobal (241,LN) [] NONE;
    call_AllocGlobal (242,LN) [] NONE;
    call_AllocGlobal (243,LN) [] NONE;
    call_AllocGlobal (244,LN) [] NONE;
    call_AllocGlobal (245,LN) [] NONE;
    call_AllocGlobal (246,LN) [] NONE;
    call_AllocGlobal (247,LN) [] NONE;
    call_AllocGlobal (248,LN) [] NONE;
    call_AllocGlobal (249,LN) [] NONE;
    call_AllocGlobal (250,LN) [] NONE;
    call_AllocGlobal (251,LN) [] NONE;
    call_AllocGlobal (252,LN) [] NONE;
    call_AllocGlobal (253,LN) [] NONE;
    call_AllocGlobal (254,LN) [] NONE;
    call_AllocGlobal (255,LN) [] NONE;
    call_AllocGlobal (256,LN) [] NONE;
    call_AllocGlobal (257,LN) [] NONE;
    call_AllocGlobal (258,LN) [] NONE;
    call_AllocGlobal (259,LN) [] NONE;
    call_AllocGlobal (260,LN) [] NONE;
    call_AllocGlobal (261,LN) [] NONE;
    call_AllocGlobal (262,LN) [] NONE;
    call_AllocGlobal (263,LN) [] NONE;
    call_AllocGlobal (264,LN) [] NONE;
    call_AllocGlobal (265,LN) [] NONE;
    call_AllocGlobal (266,LN) [] NONE;
    call_AllocGlobal (267,LN) [] NONE;
    call_AllocGlobal (268,LN) [] NONE;
    call_AllocGlobal (269,LN) [] NONE;
    call_AllocGlobal (270,LN) [] NONE;
    call_AllocGlobal (271,LN) [] NONE;
    call_AllocGlobal (272,LN) [] NONE;
    call_AllocGlobal (273,LN) [] NONE;
    call_AllocGlobal (274,LN) [] NONE;
    call_AllocGlobal (275,LN) [] NONE;
    call_AllocGlobal (276,LN) [] NONE;
    call_AllocGlobal (277,LN) [] NONE;
    call_AllocGlobal (278,LN) [] NONE;
    call_AllocGlobal (279,LN) [] NONE;
    call_AllocGlobal (280,LN) [] NONE;
    call_AllocGlobal (281,LN) [] NONE;
    call_AllocGlobal (282,LN) [] NONE;
    call_AllocGlobal (283,LN) [] NONE;
    call_AllocGlobal (284,LN) [] NONE;
    call_AllocGlobal (285,LN) [] NONE;
    call_AllocGlobal (286,LN) [] NONE;
    call_AllocGlobal (287,LN) [] NONE;
    call_AllocGlobal (288,LN) [] NONE;
    call_AllocGlobal (289,LN) [] NONE;
    call_AllocGlobal (290,LN) [] NONE;
    call_AllocGlobal (291,LN) [] NONE;
    call_AllocGlobal (292,LN) [] NONE;
    call_AllocGlobal (293,LN) [] NONE;
    call_AllocGlobal (294,LN) [] NONE;
    call_AllocGlobal (295,LN) [] NONE;
    call_AllocGlobal (296,LN) [] NONE;
    call_AllocGlobal (297,LN) [] NONE;
    call_AllocGlobal (298,LN) [] NONE;
    call_AllocGlobal (299,LN) [] NONE;
    call_AllocGlobal (300,LN) [] NONE;
    call_AllocGlobal (301,LN) [] NONE;
    call_AllocGlobal (302,LN) [] NONE;
    call_AllocGlobal (303,LN) [] NONE;
    call_AllocGlobal (304,LN) [] NONE;
    call_AllocGlobal (305,LN) [] NONE;
    call_AllocGlobal (306,LN) [] NONE;
    call_AllocGlobal (307,LN) [] NONE;
    call_AllocGlobal (308,LN) [] NONE;
    call_AllocGlobal (309,LN) [] NONE;
    call_AllocGlobal (310,LN) [] NONE;
    call_AllocGlobal (311,LN) [] NONE;
    call_AllocGlobal (312,LN) [] NONE;
    call_AllocGlobal (313,LN) [] NONE;
    call_AllocGlobal (314,LN) [] NONE;
    call_AllocGlobal (315,LN) [] NONE;
    call_AllocGlobal (316,LN) [] NONE;
    call_AllocGlobal (317,LN) [] NONE;
    318 :≡ (Cons 0,[],NONE);
    tailcall_dec_1 []
  od

dec_1 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 0,[],NONE);
    1 :≡ (Label_fst_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 2,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_2 []
  od

dec_2 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 0,[],NONE);
    1 :≡ (Label_snd_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 3,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_3 []
  od

dec_3 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 0,[],NONE);
    1 :≡ (Label_Runtime_fullGC_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 24,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_4 []
  od

dec_4 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 1,[],NONE);
    1 :≡ (Label_length_aux_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 42,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_5 []
  od

dec_5 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 0,[],NONE);
    1 :≡ (Label_List_length_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 43,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_6 []
  od

dec_6 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 0,[],NONE);
    1 :≡ (Label_concat_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 57,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_7 []
  od

dec_7 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 1,[],NONE);
    1 :≡ (Label_map_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 58,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_8 []
  od

dec_8 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 1,[],NONE);
    1 :≡ (Label_all_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 73,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_9 []
  od

dec_9 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 0,[],NONE);
    1 :≡ (Label_zip_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 80,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_10 []
  od

dec_10 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 1,[],NONE);
    1 :≡ (Label_lookup_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 95,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_11 []
  od

dec_11 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 1,[],NONE);
    1 :≡ (Label_+_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 162,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_12 []
  od

dec_12 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 1,[],NONE);
    1 :≡ (Label_*_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 164,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_13 []
  od

dec_13 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 1,[],NONE);
    1 :≡ (Label_<=_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 169,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_14 []
  od

dec_14 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 1,[],NONE);
    1 :≡ (Label_@_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 172,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_15 []
  od

dec_15 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 1,[],NONE);
    1 :≡ (Label_<>_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 175,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_16 []
  od

dec_16 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 0,[],NONE);
    1 :≡ (Label_Word8_fromInt_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 246,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_17 []
  od

dec_17 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 1,[],NONE);
    1 :≡ (Label_Word8Array_array_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 257,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_18 []
  od

dec_18 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 1,[],NONE);
    1 :≡ (Label_Word8Array_sub_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 258,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_19 []
  od

dec_19 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 0,[],NONE);
    1 :≡ (Label_Word8Array_length_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 259,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_20 []
  od

dec_20 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 2,[],NONE);
    1 :≡ (Label_Word8Array_update_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 260,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_21 []
  od

dec_21 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 2,[],NONE);
    1 :≡ (Label_Word8Array_substring_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 263,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_22 []
  od

dec_22 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 1,[],NONE);
    1 :≡ (Label_word_lt_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 266,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_23 []
  od

dec_23 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 1,[],NONE);
    1 :≡ (Label_word_le_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 267,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_24 []
  od

dec_24 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 1,[],NONE);
    1 :≡ (Label_word_le_1_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 268,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_25 []
  od

dec_25 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 0,[],NONE);
    1 :≡ (Label_round_to_inf_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 270,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_26 []
  od

dec_26 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 1,[],NONE);
    1 :≡ (Label_lookup_var_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 271,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_27 []
  od

dec_27 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 1,[],NONE);
    1 :≡ (Label_pl_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 272,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_28 []
  od

dec_28 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 1,[],NONE);
    1 :≡ (Label_pu_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 273,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_29 []
  od

dec_29 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 1,[],NONE);
    1 :≡ (Label_wmin_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 274,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_30 []
  od

dec_30 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 1,[],NONE);
    1 :≡ (Label_wmax_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 275,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_31 []
  od

dec_31 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 1,[],NONE);
    1 :≡ (Label_wtimes_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 276,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_32 []
  od

dec_32 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 3,[],NONE);
    1 :≡ (Label_tl_1_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 277,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_33 []
  od

dec_33 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 3,[],NONE);
    1 :≡ (Label_tu_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 278,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_34 []
  od

dec_34 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 0,[],NONE);
    1 :≡ (Label_wneg_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 279,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_35 []
  od

dec_35 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 1,[],NONE);
    1 :≡ (Label_wle_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 280,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_36 []
  od

dec_36 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 1,[],NONE);
    1 :≡ (Label_wleq_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 281,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_37 []
  od

dec_37 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 1,[],NONE);
    1 :≡ (Label_divl_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 282,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_38 []
  od

dec_38 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 1,[],NONE);
    1 :≡ (Label_divu_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 283,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_39 []
  od

dec_39 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 3,[],NONE);
    1 :≡ (Label_divpair_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 284,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_40 []
  od

dec_40 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 1,[],NONE);
    1 :≡ (Label_cwtsem_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 285,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_41 []
  od

dec_41 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 1,[],NONE);
    1 :≡ (Label_cwfsem_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 286,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_42 []
  od

dec_42 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 1,[],NONE);
    1 :≡ (Label_cwfsem_bi_val_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 287,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_43 []
  od

dec_43 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 3,[],NONE);
    1 :≡ (Label_le_bytes_to_w32_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 288,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_44 []
  od

dec_44 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 0,[],NONE);
    1 :≡ (Label_w32_to_le_bytes_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 289,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_45 []
  od

dec_45 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 0,[],NONE);
    1 :≡ (Label_pack_w32_list_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 290,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_46 []
  od

dec_46 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 0,[],NONE);
    1 :≡ (Label_unpack_w32_list_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 291,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_47 []
  od

dec_47 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 0,[],NONE);
    1 :≡ (Label_to_string_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 292,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_48 []
  od

dec_48 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 0,[],NONE);
    1 :≡ (Label_const_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 293,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_49 []
  od

dec_49 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 0,[],NONE);
    1 :≡ (Label_ctrl_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 294,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_50 []
  od

dec_50 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 0,[],NONE);
    1 :≡ (Label_sense_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 295,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_51 []
  od

dec_51 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 2,[],NONE);
    1 :≡ (Label_extCtrl_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 296,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_52 []
  od

dec_52 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 1,[],NONE);
    1 :≡ (Label_lookup_fixed_clos_1,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 297,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_53 []
  od

dec_53 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 0,[],NONE);
    1 :≡ (Label_is_point_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 298,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_54 []
  od

dec_54 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 2,[],NONE);
    1 :≡ (Label_evaluate_default_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 299,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_55 []
  od

dec_55 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 9,[],NONE);
    1 :≡ (Label_ctrl_monitor_clos_1,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 300,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_56 []
  od

dec_56 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 1,[],NONE);
    1 :≡ (Label_actuate_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 301,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_57 []
  od

dec_57 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 0,[],NONE);
    1 :≡ (Label_stop_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 302,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_58 []
  od

dec_58 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 0,[],NONE);
    1 :≡ (Label_violation_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 303,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_59 []
  od

dec_59 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 8,[],NONE);
    1 :≡ (Label_plant_monitor_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 304,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_60 []
  od

dec_60 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 6,[],NONE);
    1 :≡ (Label_init_monitor_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 305,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_61 []
  od

dec_61 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 9,[],NONE);
    1 :≡ (Label_monitor_loop_body_clos_1,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 306,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_62 []
  od

dec_62 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 9,[],NONE);
    1 :≡ (Label_monitor_loop_clos_1,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 307,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_63 []
  od

dec_63 [] =
  do
    makespace 30 LN;
    0 :≡ (Cons 0,[],NONE);
    1 :≡ (Cons 0,[],NONE);
    2 :≡ (Const 115,[],NONE);
    3 :≡ (Cons 0,[2; 1],NONE);
    4 :≡ (Const 112,[],NONE);
    5 :≡ (Cons 0,[4; 3],NONE);
    6 :≡ (Const 101,[],NONE);
    7 :≡ (Cons 0,[6; 5],NONE);
    8 :≡ (Cons 0,[7; 0],NONE);
    9 :≡ (Cons 0,[],NONE);
    10 :≡ (Const 84,[],NONE);
    11 :≡ (Cons 0,[10; 9],NONE);
    12 :≡ (Cons 0,[11; 8],NONE);
    13 :≡ (Cons 0,[],NONE);
    14 :≡ (Const 66,[],NONE);
    15 :≡ (Cons 0,[14; 13],NONE);
    16 :≡ (Cons 0,[15; 12],NONE);
    17 :≡ (Cons 0,[],NONE);
    18 :≡ (Const 65,[],NONE);
    19 :≡ (Cons 0,[18; 17],NONE);
    20 :≡ (Cons 0,[19; 16],NONE);
    21 :≡ (Const 308,[],NONE);
    22 :≡ (GlobalsPtr,[],NONE);
    23 :≡ (Update,[22; 21; 20],NONE);
    tailcall_dec_64 []
  od

dec_64 [] =
  do
    makespace 30 LN;
    0 :≡ (Cons 0,[],NONE);
    1 :≡ (Cons 0,[],NONE);
    2 :≡ (Const 103,[],NONE);
    3 :≡ (Cons 0,[2; 1],NONE);
    4 :≡ (Const 121,[],NONE);
    5 :≡ (Cons 0,[4; 3],NONE);
    6 :≡ (Cons 0,[5; 0],NONE);
    7 :≡ (Cons 0,[],NONE);
    8 :≡ (Const 103,[],NONE);
    9 :≡ (Cons 0,[8; 7],NONE);
    10 :≡ (Const 120,[],NONE);
    11 :≡ (Cons 0,[10; 9],NONE);
    12 :≡ (Cons 0,[11; 6],NONE);
    13 :≡ (Cons 0,[],NONE);
    14 :≡ (Const 118,[],NONE);
    15 :≡ (Cons 0,[14; 13],NONE);
    16 :≡ (Cons 0,[15; 12],NONE);
    17 :≡ (Cons 0,[],NONE);
    18 :≡ (Const 116,[],NONE);
    19 :≡ (Cons 0,[18; 17],NONE);
    20 :≡ (Cons 0,[19; 16],NONE);
    21 :≡ (Const 309,[],NONE);
    22 :≡ (GlobalsPtr,[],NONE);
    23 :≡ (Update,[22; 21; 20],NONE);
    tailcall_dec_65 []
  od

dec_65 [] =
  do
    makespace 78 LN;
    0 :≡ (Cons 0,[],NONE);
    1 :≡ (Cons 0,[],NONE);
    2 :≡ (Const 116,[],NONE);
    3 :≡ (Cons 0,[2; 1],NONE);
    4 :≡ (Const 115,[],NONE);
    5 :≡ (Cons 0,[4; 3],NONE);
    6 :≡ (Const 111,[],NONE);
    7 :≡ (Cons 0,[6; 5],NONE);
    8 :≡ (Const 112,[],NONE);
    9 :≡ (Cons 0,[8; 7],NONE);
    10 :≡ (Const 103,[],NONE);
    11 :≡ (Cons 0,[10; 9],NONE);
    12 :≡ (Const 121,[],NONE);
    13 :≡ (Cons 0,[12; 11],NONE);
    14 :≡ (Cons 0,[13; 0],NONE);
    15 :≡ (Cons 0,[],NONE);
    16 :≡ (Const 116,[],NONE);
    17 :≡ (Cons 0,[16; 15],NONE);
    18 :≡ (Const 115,[],NONE);
    19 :≡ (Cons 0,[18; 17],NONE);
    20 :≡ (Const 111,[],NONE);
    21 :≡ (Cons 0,[20; 19],NONE);
    22 :≡ (Const 112,[],NONE);
    23 :≡ (Cons 0,[22; 21],NONE);
    24 :≡ (Const 103,[],NONE);
    25 :≡ (Cons 0,[24; 23],NONE);
    26 :≡ (Const 120,[],NONE);
    27 :≡ (Cons 0,[26; 25],NONE);
    28 :≡ (Cons 0,[27; 14],NONE);
    29 :≡ (Cons 0,[],NONE);
    30 :≡ (Const 116,[],NONE);
    31 :≡ (Cons 0,[30; 29],NONE);
    32 :≡ (Const 115,[],NONE);
    33 :≡ (Cons 0,[32; 31],NONE);
    34 :≡ (Const 111,[],NONE);
    35 :≡ (Cons 0,[34; 33],NONE);
    36 :≡ (Const 112,[],NONE);
    37 :≡ (Cons 0,[36; 35],NONE);
    38 :≡ (Const 118,[],NONE);
    39 :≡ (Cons 0,[38; 37],NONE);
    40 :≡ (Cons 0,[39; 28],NONE);
    41 :≡ (Cons 0,[],NONE);
    42 :≡ (Const 116,[],NONE);
    43 :≡ (Cons 0,[42; 41],NONE);
    44 :≡ (Const 115,[],NONE);
    45 :≡ (Cons 0,[44; 43],NONE);
    46 :≡ (Const 111,[],NONE);
    47 :≡ (Cons 0,[46; 45],NONE);
    48 :≡ (Const 112,[],NONE);
    49 :≡ (Cons 0,[48; 47],NONE);
    50 :≡ (Const 116,[],NONE);
    51 :≡ (Cons 0,[50; 49],NONE);
    52 :≡ (Cons 0,[51; 40],NONE);
    53 :≡ (Const 310,[],NONE);
    54 :≡ (GlobalsPtr,[],NONE);
    55 :≡ (Update,[54; 53; 52],NONE);
    tailcall_dec_66 []
  od

dec_66 [] =
  do
    makespace 54 LN;
    0 :≡ (Cons 0,[],NONE);
    1 :≡ (Cons 0,[],NONE);
    2 :≡ (Const 103,[],NONE);
    3 :≡ (Cons 0,[2; 1],NONE);
    4 :≡ (Const 121,[],NONE);
    5 :≡ (Cons 0,[4; 3],NONE);
    6 :≡ (Cons 0,[5; 0],NONE);
    7 :≡ (Cons 0,[],NONE);
    8 :≡ (Const 103,[],NONE);
    9 :≡ (Cons 0,[8; 7],NONE);
    10 :≡ (Const 120,[],NONE);
    11 :≡ (Cons 0,[10; 9],NONE);
    12 :≡ (Cons 0,[11; 6],NONE);
    13 :≡ (Cons 0,[],NONE);
    14 :≡ (Const 108,[],NONE);
    15 :≡ (Cons 0,[14; 13],NONE);
    16 :≡ (Const 118,[],NONE);
    17 :≡ (Cons 0,[16; 15],NONE);
    18 :≡ (Cons 0,[17; 12],NONE);
    19 :≡ (Cons 0,[],NONE);
    20 :≡ (Const 104,[],NONE);
    21 :≡ (Cons 0,[20; 19],NONE);
    22 :≡ (Const 118,[],NONE);
    23 :≡ (Cons 0,[22; 21],NONE);
    24 :≡ (Cons 0,[23; 18],NONE);
    25 :≡ (Cons 0,[],NONE);
    26 :≡ (Const 116,[],NONE);
    27 :≡ (Cons 0,[26; 25],NONE);
    28 :≡ (Cons 0,[27; 24],NONE);
    29 :≡ (Cons 0,[],NONE);
    30 :≡ (Const 107,[],NONE);
    31 :≡ (Cons 0,[30; 29],NONE);
    32 :≡ (Cons 0,[31; 28],NONE);
    33 :≡ (Cons 0,[],NONE);
    34 :≡ (Const 97,[],NONE);
    35 :≡ (Cons 0,[34; 33],NONE);
    36 :≡ (Cons 0,[35; 32],NONE);
    37 :≡ (Const 311,[],NONE);
    38 :≡ (GlobalsPtr,[],NONE);
    39 :≡ (Update,[38; 37; 36],NONE);
    tailcall_dec_67 []
  od

dec_67 [] =
  do
    makespace 138 LN;
    0 :≡ (Cons 0,[],NONE);
    1 :≡ (Cons 0,[],NONE);
    2 :≡ (Const 116,[],NONE);
    3 :≡ (Cons 0,[2; 1],NONE);
    4 :≡ (Const 115,[],NONE);
    5 :≡ (Cons 0,[4; 3],NONE);
    6 :≡ (Const 111,[],NONE);
    7 :≡ (Cons 0,[6; 5],NONE);
    8 :≡ (Const 112,[],NONE);
    9 :≡ (Cons 0,[8; 7],NONE);
    10 :≡ (Const 103,[],NONE);
    11 :≡ (Cons 0,[10; 9],NONE);
    12 :≡ (Const 121,[],NONE);
    13 :≡ (Cons 0,[12; 11],NONE);
    14 :≡ (Cons 0,[13; 0],NONE);
    15 :≡ (Cons 0,[],NONE);
    16 :≡ (Const 116,[],NONE);
    17 :≡ (Cons 0,[16; 15],NONE);
    18 :≡ (Const 115,[],NONE);
    19 :≡ (Cons 0,[18; 17],NONE);
    20 :≡ (Const 111,[],NONE);
    21 :≡ (Cons 0,[20; 19],NONE);
    22 :≡ (Const 112,[],NONE);
    23 :≡ (Cons 0,[22; 21],NONE);
    24 :≡ (Const 103,[],NONE);
    25 :≡ (Cons 0,[24; 23],NONE);
    26 :≡ (Const 120,[],NONE);
    27 :≡ (Cons 0,[26; 25],NONE);
    28 :≡ (Cons 0,[27; 14],NONE);
    29 :≡ (Cons 0,[],NONE);
    30 :≡ (Const 116,[],NONE);
    31 :≡ (Cons 0,[30; 29],NONE);
    32 :≡ (Const 115,[],NONE);
    33 :≡ (Cons 0,[32; 31],NONE);
    34 :≡ (Const 111,[],NONE);
    35 :≡ (Cons 0,[34; 33],NONE);
    36 :≡ (Const 112,[],NONE);
    37 :≡ (Cons 0,[36; 35],NONE);
    38 :≡ (Const 108,[],NONE);
    39 :≡ (Cons 0,[38; 37],NONE);
    40 :≡ (Const 118,[],NONE);
    41 :≡ (Cons 0,[40; 39],NONE);
    42 :≡ (Cons 0,[41; 28],NONE);
    43 :≡ (Cons 0,[],NONE);
    44 :≡ (Const 116,[],NONE);
    45 :≡ (Cons 0,[44; 43],NONE);
    46 :≡ (Const 115,[],NONE);
    47 :≡ (Cons 0,[46; 45],NONE);
    48 :≡ (Const 111,[],NONE);
    49 :≡ (Cons 0,[48; 47],NONE);
    50 :≡ (Const 112,[],NONE);
    51 :≡ (Cons 0,[50; 49],NONE);
    52 :≡ (Const 104,[],NONE);
    53 :≡ (Cons 0,[52; 51],NONE);
    54 :≡ (Const 118,[],NONE);
    55 :≡ (Cons 0,[54; 53],NONE);
    56 :≡ (Cons 0,[55; 42],NONE);
    57 :≡ (Cons 0,[],NONE);
    58 :≡ (Const 116,[],NONE);
    59 :≡ (Cons 0,[58; 57],NONE);
    60 :≡ (Const 115,[],NONE);
    61 :≡ (Cons 0,[60; 59],NONE);
    62 :≡ (Const 111,[],NONE);
    63 :≡ (Cons 0,[62; 61],NONE);
    64 :≡ (Const 112,[],NONE);
    65 :≡ (Cons 0,[64; 63],NONE);
    66 :≡ (Const 116,[],NONE);
    67 :≡ (Cons 0,[66; 65],NONE);
    68 :≡ (Cons 0,[67; 56],NONE);
    69 :≡ (Cons 0,[],NONE);
    70 :≡ (Const 116,[],NONE);
    71 :≡ (Cons 0,[70; 69],NONE);
    72 :≡ (Const 115,[],NONE);
    73 :≡ (Cons 0,[72; 71],NONE);
    74 :≡ (Const 111,[],NONE);
    75 :≡ (Cons 0,[74; 73],NONE);
    76 :≡ (Const 112,[],NONE);
    77 :≡ (Cons 0,[76; 75],NONE);
    78 :≡ (Const 107,[],NONE);
    79 :≡ (Cons 0,[78; 77],NONE);
    80 :≡ (Cons 0,[79; 68],NONE);
    81 :≡ (Cons 0,[],NONE);
    82 :≡ (Const 116,[],NONE);
    83 :≡ (Cons 0,[82; 81],NONE);
    84 :≡ (Const 115,[],NONE);
    85 :≡ (Cons 0,[84; 83],NONE);
    86 :≡ (Const 111,[],NONE);
    87 :≡ (Cons 0,[86; 85],NONE);
    88 :≡ (Const 112,[],NONE);
    89 :≡ (Cons 0,[88; 87],NONE);
    90 :≡ (Const 97,[],NONE);
    91 :≡ (Cons 0,[90; 89],NONE);
    92 :≡ (Cons 0,[91; 80],NONE);
    93 :≡ (Const 312,[],NONE);
    94 :≡ (GlobalsPtr,[],NONE);
    95 :≡ (Update,[94; 93; 92],NONE);
    tailcall_dec_68 []
  od

dec_68 [] =
  do
    makespace 18 LN;
    0 :≡ (Cons 0,[],NONE);
    1 :≡ (Cons 0,[],NONE);
    2 :≡ (Const 116,[],NONE);
    3 :≡ (Cons 0,[2; 1],NONE);
    4 :≡ (Const 115,[],NONE);
    5 :≡ (Cons 0,[4; 3],NONE);
    6 :≡ (Const 111,[],NONE);
    7 :≡ (Cons 0,[6; 5],NONE);
    8 :≡ (Const 112,[],NONE);
    9 :≡ (Cons 0,[8; 7],NONE);
    10 :≡ (Const 118,[],NONE);
    11 :≡ (Cons 0,[10; 9],NONE);
    12 :≡ (Cons 0,[11; 0],NONE);
    13 :≡ (Const 313,[],NONE);
    14 :≡ (GlobalsPtr,[],NONE);
    15 :≡ (Update,[14; 13; 12],NONE);
    tailcall_dec_69 []
  od

dec_69 [] =
  do
    makespace 6 LN;
    0 :≡ (Cons 0,[],NONE);
    1 :≡ (Cons 0,[],NONE);
    2 :≡ (Const 118,[],NONE);
    3 :≡ (Cons 0,[2; 1],NONE);
    4 :≡ (Cons 0,[3; 0],NONE);
    5 :≡ (Const 314,[],NONE);
    6 :≡ (GlobalsPtr,[],NONE);
    7 :≡ (Update,[6; 5; 4],NONE);
    tailcall_dec_70 []
  od

dec_70 [] =
  do
    makespace 140 LN;
    0 :≡ (Cons 0,[],NONE);
    1 :≡ (Const 104,[],NONE);
    2 :≡ (Cons 0,[1; 0],NONE);
    3 :≡ (Const 118,[],NONE);
    4 :≡ (Cons 0,[3; 2],NONE);
    5 :≡ (Cons 2,[4],NONE);
    6 :≡ (Cons 0,[],NONE);
    7 :≡ (Const 118,[],NONE);
    8 :≡ (Cons 0,[7; 6],NONE);
    9 :≡ (Cons 2,[8],NONE);
    10 :≡ (Cons 3,[9; 5],NONE);
    11 :≡ (Cons 0,[],NONE);
    12 :≡ (Const 118,[],NONE);
    13 :≡ (Cons 0,[12; 11],NONE);
    14 :≡ (Cons 2,[13],NONE);
    15 :≡ (Cons 0,[],NONE);
    16 :≡ (Const 108,[],NONE);
    17 :≡ (Cons 0,[16; 15],NONE);
    18 :≡ (Const 118,[],NONE);
    19 :≡ (Cons 0,[18; 17],NONE);
    20 :≡ (Cons 2,[19],NONE);
    21 :≡ (Cons 3,[20; 14],NONE);
    22 :≡ (Cons 1,[21; 10],NONE);
    23 :≡ (Cons 0,[],NONE);
    24 :≡ (Const 108,[],NONE);
    25 :≡ (Cons 0,[24; 23],NONE);
    26 :≡ (Const 118,[],NONE);
    27 :≡ (Cons 0,[26; 25],NONE);
    28 :≡ (Cons 2,[27],NONE);
    29 :≡ (Const 0,[],NONE);
    30 :≡ (WordFromInt,[29],NONE);
    31 :≡ (Cons 3,[30],NONE);
    32 :≡ (Cons 3,[31; 28],NONE);
    33 :≡ (Cons 1,[32; 22],NONE);
    34 :≡ (Cons 0,[],NONE);
    35 :≡ (Const 118,[],NONE);
    36 :≡ (Cons 0,[35; 34],NONE);
    37 :≡ (Cons 2,[36],NONE);
    38 :≡ (Const 0,[],NONE);
    39 :≡ (WordFromInt,[38],NONE);
    40 :≡ (Cons 3,[39],NONE);
    41 :≡ (Cons 3,[40; 37],NONE);
    42 :≡ (Cons 1,[41; 33],NONE);
    43 :≡ (Cons 0,[],NONE);
    44 :≡ (Const 66,[],NONE);
    45 :≡ (Cons 0,[44; 43],NONE);
    46 :≡ (Cons 2,[45],NONE);
    47 :≡ (Const 0,[],NONE);
    48 :≡ (WordFromInt,[47],NONE);
    49 :≡ (Cons 3,[48],NONE);
    50 :≡ (Cons 4,[49; 46],NONE);
    51 :≡ (Cons 0,[],NONE);
    52 :≡ (Const 65,[],NONE);
    53 :≡ (Cons 0,[52; 51],NONE);
    54 :≡ (Cons 2,[53],NONE);
    55 :≡ (Const 0,[],NONE);
    56 :≡ (WordFromInt,[55],NONE);
    57 :≡ (Cons 3,[56],NONE);
    58 :≡ (Cons 4,[57; 54],NONE);
    59 :≡ (Cons 1,[58; 50],NONE);
    60 :≡ (Cons 0,[],NONE);
    61 :≡ (Const 115,[],NONE);
    62 :≡ (Cons 0,[61; 60],NONE);
    63 :≡ (Const 112,[],NONE);
    64 :≡ (Cons 0,[63; 62],NONE);
    65 :≡ (Const 101,[],NONE);
    66 :≡ (Cons 0,[65; 64],NONE);
    67 :≡ (Cons 2,[66],NONE);
    68 :≡ (Const 0,[],NONE);
    69 :≡ (WordFromInt,[68],NONE);
    70 :≡ (Cons 3,[69],NONE);
    71 :≡ (Cons 4,[70; 67],NONE);
    72 :≡ (Cons 1,[71; 59],NONE);
    73 :≡ (Cons 0,[],NONE);
    74 :≡ (Const 84,[],NONE);
    75 :≡ (Cons 0,[74; 73],NONE);
    76 :≡ (Cons 2,[75],NONE);
    77 :≡ (Const 0,[],NONE);
    78 :≡ (WordFromInt,[77],NONE);
    79 :≡ (Cons 3,[78],NONE);
    80 :≡ (Cons 4,[79; 76],NONE);
    81 :≡ (Cons 1,[80; 72],NONE);
    82 :≡ (Cons 1,[81; 42],NONE);
    83 :≡ (Const 315,[],NONE);
    84 :≡ (GlobalsPtr,[],NONE);
    85 :≡ (Update,[84; 83; 82],NONE);
    tailcall_dec_71 []
  od

dec_71 [] =
  do
    call_bvi_aux_3 (0,LN) [] NONE;
    1 :≡ (Const 316,[],NONE);
    2 :≡ (GlobalsPtr,[],NONE);
    3 :≡ (Update,[2; 1; 0],NONE);
    tailcall_dec_72 []
  od

bvi_aux_0 [] =
  do
    0 :≡ (Const 1599,[],NONE);
    1 :≡ (Const 268435457,[],NONE);
    2 :≡ (Mult,[1; 0],SOME ⦕ 0; 1 ⦖);
    3 :≡ (Const 268433857,[],NONE);
    4 :≡ (Add,[3; 2],SOME ⦕ 2; 3 ⦖);
    makespace 5 ⦕ 4 ⦖;
    5 :≡ (WordFromInt,[4],NONE);
    6 :≡ (Cons 3,[5],NONE);
    7 :≡ (Const 159999,[],NONE);
    8 :≡ (Const 268435457,[],NONE);
    9 :≡ (Mult,[8; 7],SOME ⦕ 6; 7; 8 ⦖);
    10 :≡ (Const 268275457,[],NONE);
    11 :≡ (Add,[10; 9],SOME ⦕ 6; 9; 10 ⦖);
    makespace 16 ⦕ 6; 11 ⦖;
    12 :≡ (WordFromInt,[11],NONE);
    13 :≡ (Cons 3,[12],NONE);
    14 :≡ (Cons 0,[],NONE);
    15 :≡ (Const 115,[],NONE);
    16 :≡ (Cons 0,[15; 14],NONE);
    17 :≡ (Const 112,[],NONE);
    18 :≡ (Cons 0,[17; 16],NONE);
    19 :≡ (Const 101,[],NONE);
    20 :≡ (Cons 0,[19; 18],NONE);
    21 :≡ (Cons 2,[20],NONE);
    22 :≡ (Const 159,[],NONE);
    23 :≡ (Const 268435457,[],NONE);
    24 :≡ (Mult,[23; 22],SOME ⦕ 6; 13; 21; 22; 23 ⦖);
    25 :≡ (Const 268435297,[],NONE);
    26 :≡ (Add,[25; 24],SOME ⦕ 6; 13; 21; 24; 25 ⦖);
    makespace 8 ⦕ 6; 13; 21; 26 ⦖;
    27 :≡ (WordFromInt,[26],NONE);
    28 :≡ (Cons 3,[27],NONE);
    29 :≡ (Cons 3,[28; 21],NONE);
    30 :≡ (Const 255,[],NONE);
    31 :≡ (Const 268435457,[],NONE);
    32 :≡ (Mult,[31; 30],SOME ⦕ 6; 13; 29; 30; 31 ⦖);
    33 :≡ (Const 268434929,[],NONE);
    34 :≡ (Add,[33; 32],SOME ⦕ 6; 13; 29; 32; 33 ⦖);
    35 :≡ (Const 268435457,[],NONE);
    36 :≡ (Mult,[35; 34],SOME ⦕ 6; 13; 29; 34; 35 ⦖);
    37 :≡ (Const 272,[],NONE);
    38 :≡ (Add,[37; 36],SOME ⦕ 6; 13; 29; 36; 37 ⦖);
    makespace 42 ⦕ 6; 13; 29; 38 ⦖;
    39 :≡ (WordFromInt,[38],NONE);
    40 :≡ (Cons 3,[39],NONE);
    41 :≡ (Cons 3,[40; 29],NONE);
    42 :≡ (Cons 0,[],NONE);
    43 :≡ (Const 116,[],NONE);
    44 :≡ (Cons 0,[43; 42],NONE);
    45 :≡ (Const 115,[],NONE);
    46 :≡ (Cons 0,[45; 44],NONE);
    47 :≡ (Const 111,[],NONE);
    48 :≡ (Cons 0,[47; 46],NONE);
    49 :≡ (Const 112,[],NONE);
    50 :≡ (Cons 0,[49; 48],NONE);
    51 :≡ (Const 103,[],NONE);
    52 :≡ (Cons 0,[51; 50],NONE);
    53 :≡ (Const 121,[],NONE);
    54 :≡ (Cons 0,[53; 52],NONE);
    55 :≡ (Cons 2,[54],NONE);
    56 :≡ (Cons 4,[55; 41],NONE);
    57 :≡ (Cons 3,[56; 13],NONE);
    58 :≡ (Cons 3,[57; 6],NONE);
    59 :≡ (Cons 0,[],NONE);
    60 :≡ (Const 65,[],NONE);
    61 :≡ (Cons 0,[60; 59],NONE);
    62 :≡ (Cons 2,[61],NONE);
    63 :≡ (Const 31,[],NONE);
    64 :≡ (Const 268435457,[],NONE);
    65 :≡ (Mult,[64; 63],SOME ⦕ 58; 62; 63; 64 ⦖);
    66 :≡ (Const 268435425,[],NONE);
    67 :≡ (Add,[66; 65],SOME ⦕ 58; 62; 65; 66 ⦖);
    makespace 35 ⦕ 58; 62; 67 ⦖;
    68 :≡ (WordFromInt,[67],NONE);
    69 :≡ (Cons 3,[68],NONE);
    70 :≡ (Cons 3,[69; 62],NONE);
    71 :≡ (Cons 0,[],NONE);
    72 :≡ (Const 116,[],NONE);
    73 :≡ (Cons 0,[72; 71],NONE);
    74 :≡ (Const 115,[],NONE);
    75 :≡ (Cons 0,[74; 73],NONE);
    76 :≡ (Const 111,[],NONE);
    77 :≡ (Cons 0,[76; 75],NONE);
    78 :≡ (Const 112,[],NONE);
    79 :≡ (Cons 0,[78; 77],NONE);
    80 :≡ (Const 97,[],NONE);
    81 :≡ (Cons 0,[80; 79],NONE);
    82 :≡ (Cons 2,[81],NONE);
    83 :≡ (Cons 1,[82],NONE);
    84 :≡ (Cons 0,[],NONE);
    85 :≡ (Const 118,[],NONE);
    86 :≡ (Cons 0,[85; 84],NONE);
    87 :≡ (Cons 2,[86],NONE);
    88 :≡ (Cons 2,[87; 83],NONE);
    89 :≡ (Const 159,[],NONE);
    90 :≡ (Const 268435457,[],NONE);
    91 :≡ (Mult,[90; 89],SOME ⦕ 58; 70; 88; 89; 90 ⦖);
    92 :≡ (Const 268435297,[],NONE);
    93 :≡ (Add,[92; 91],SOME ⦕ 58; 70; 88; 91; 92 ⦖);
    makespace 36 ⦕ 58; 70; 88; 93 ⦖;
    94 :≡ (WordFromInt,[93],NONE);
    95 :≡ (Cons 3,[94],NONE);
    96 :≡ (Cons 3,[95; 88],NONE);
    97 :≡ (Cons 0,[],NONE);
    98 :≡ (Const 84,[],NONE);
    99 :≡ (Cons 0,[98; 97],NONE);
    100 :≡ (Cons 2,[99],NONE);
    101 :≡ (Cons 0,[100; 96],NONE);
    102 :≡ (Cons 0,[],NONE);
    103 :≡ (Const 116,[],NONE);
    104 :≡ (Cons 0,[103; 102],NONE);
    105 :≡ (Const 115,[],NONE);
    106 :≡ (Cons 0,[105; 104],NONE);
    107 :≡ (Const 111,[],NONE);
    108 :≡ (Cons 0,[107; 106],NONE);
    109 :≡ (Const 112,[],NONE);
    110 :≡ (Cons 0,[109; 108],NONE);
    111 :≡ (Const 97,[],NONE);
    112 :≡ (Cons 0,[111; 110],NONE);
    113 :≡ (Cons 2,[112],NONE);
    114 :≡ (Cons 3,[113; 101],NONE);
    115 :≡ (Const 159,[],NONE);
    116 :≡ (Const 268435457,[],NONE);
    117 :≡ (Mult,[116; 115],SOME ⦕ 58; 70; 114; 115; 116 ⦖);
    118 :≡ (Const 268435297,[],NONE);
    119 :≡ (Add,[118; 117],SOME ⦕ 58; 70; 114; 117; 118 ⦖);
    makespace 43 ⦕ 58; 70; 114; 119 ⦖;
    120 :≡ (WordFromInt,[119],NONE);
    121 :≡ (Cons 3,[120],NONE);
    122 :≡ (Cons 0,[],NONE);
    123 :≡ (Const 118,[],NONE);
    124 :≡ (Cons 0,[123; 122],NONE);
    125 :≡ (Cons 2,[124],NONE);
    126 :≡ (Cons 3,[125; 121],NONE);
    127 :≡ (Cons 4,[126; 114],NONE);
    128 :≡ (Cons 0,[],NONE);
    129 :≡ (Const 116,[],NONE);
    130 :≡ (Cons 0,[129; 128],NONE);
    131 :≡ (Const 115,[],NONE);
    132 :≡ (Cons 0,[131; 130],NONE);
    133 :≡ (Const 111,[],NONE);
    134 :≡ (Cons 0,[133; 132],NONE);
    135 :≡ (Const 112,[],NONE);
    136 :≡ (Cons 0,[135; 134],NONE);
    137 :≡ (Const 97,[],NONE);
    138 :≡ (Cons 0,[137; 136],NONE);
    139 :≡ (Cons 2,[138],NONE);
    140 :≡ (Cons 1,[139],NONE);
    141 :≡ (Cons 0,[],NONE);
    142 :≡ (Const 118,[],NONE);
    143 :≡ (Cons 0,[142; 141],NONE);
    144 :≡ (Cons 2,[143],NONE);
    145 :≡ (Cons 2,[144; 140],NONE);
    146 :≡ (Const 159,[],NONE);
    147 :≡ (Const 268435457,[],NONE);
    148 :≡ (Mult,[147; 146],SOME ⦕ 58; 70; 127; 145; 146; 147 ⦖);
    149 :≡ (Const 268435297,[],NONE);
    150 :≡ (Add,[149; 148],SOME ⦕ 58; 70; 127; 145; 148; 149 ⦖);
    makespace 36 ⦕ 58; 70; 127; 145; 150 ⦖;
    151 :≡ (WordFromInt,[150],NONE);
    152 :≡ (Cons 3,[151],NONE);
    153 :≡ (Cons 3,[152; 145],NONE);
    154 :≡ (Cons 0,[],NONE);
    155 :≡ (Const 84,[],NONE);
    156 :≡ (Cons 0,[155; 154],NONE);
    157 :≡ (Cons 2,[156],NONE);
    158 :≡ (Cons 0,[157; 153],NONE);
    159 :≡ (Cons 0,[],NONE);
    160 :≡ (Const 116,[],NONE);
    161 :≡ (Cons 0,[160; 159],NONE);
    162 :≡ (Const 115,[],NONE);
    163 :≡ (Cons 0,[162; 161],NONE);
    164 :≡ (Const 111,[],NONE);
    165 :≡ (Cons 0,[164; 163],NONE);
    166 :≡ (Const 112,[],NONE);
    167 :≡ (Cons 0,[166; 165],NONE);
    168 :≡ (Const 97,[],NONE);
    169 :≡ (Cons 0,[168; 167],NONE);
    170 :≡ (Cons 2,[169],NONE);
    171 :≡ (Cons 3,[170; 158],NONE);
    172 :≡ (Const 159,[],NONE);
    173 :≡ (Const 268435457,[],NONE);
    174 :≡ (Mult,[173; 172],SOME ⦕ 58; 70; 127; 171; 172; 173 ⦖);
    175 :≡ (Const 268435297,[],NONE);
    176 :≡ (Add,[175; 174],SOME ⦕ 58; 70; 127; 171; 174; 175 ⦖);
    makespace 19 ⦕ 58; 70; 127; 171; 176 ⦖;
    177 :≡ (WordFromInt,[176],NONE);
    178 :≡ (Cons 3,[177],NONE);
    179 :≡ (Cons 0,[],NONE);
    180 :≡ (Const 118,[],NONE);
    181 :≡ (Cons 0,[180; 179],NONE);
    182 :≡ (Cons 2,[181],NONE);
    183 :≡ (Cons 3,[182; 178],NONE);
    184 :≡ (Cons 4,[183; 171],NONE);
    185 :≡ (Cons 3,[184; 127],NONE);
    186 :≡ (Const 255,[],NONE);
    187 :≡ (Const 268435457,[],NONE);
    188 :≡ (Mult,[187; 186],SOME ⦕ 58; 70; 185; 186; 187 ⦖);
    189 :≡ (Const 268434929,[],NONE);
    190 :≡ (Add,[189; 188],SOME ⦕ 58; 70; 185; 188; 189 ⦖);
    191 :≡ (Const 268435457,[],NONE);
    192 :≡ (Mult,[191; 190],SOME ⦕ 58; 70; 185; 190; 191 ⦖);
    193 :≡ (Const 272,[],NONE);
    194 :≡ (Add,[193; 192],SOME ⦕ 58; 70; 185; 192; 193 ⦖);
    makespace 8 ⦕ 58; 70; 185; 194 ⦖;
    195 :≡ (WordFromInt,[194],NONE);
    196 :≡ (Cons 3,[195],NONE);
    197 :≡ (Cons 3,[196; 185],NONE);
    198 :≡ (Const 159,[],NONE);
    199 :≡ (Const 268435457,[],NONE);
    200 :≡ (Mult,[199; 198],SOME ⦕ 58; 70; 197; 198; 199 ⦖);
    201 :≡ (Const 268435297,[],NONE);
    202 :≡ (Add,[201; 200],SOME ⦕ 58; 70; 197; 200; 201 ⦖);
    makespace 28 ⦕ 58; 70; 197; 202 ⦖;
    203 :≡ (WordFromInt,[202],NONE);
    204 :≡ (Cons 3,[203],NONE);
    205 :≡ (Cons 0,[],NONE);
    206 :≡ (Const 116,[],NONE);
    207 :≡ (Cons 0,[206; 205],NONE);
    208 :≡ (Const 115,[],NONE);
    209 :≡ (Cons 0,[208; 207],NONE);
    210 :≡ (Const 111,[],NONE);
    211 :≡ (Cons 0,[210; 209],NONE);
    212 :≡ (Const 112,[],NONE);
    213 :≡ (Cons 0,[212; 211],NONE);
    214 :≡ (Const 108,[],NONE);
    215 :≡ (Cons 0,[214; 213],NONE);
    216 :≡ (Const 118,[],NONE);
    217 :≡ (Cons 0,[216; 215],NONE);
    218 :≡ (Cons 2,[217],NONE);
    219 :≡ (Cons 3,[218; 204],NONE);
    220 :≡ (Const 159,[],NONE);
    221 :≡ (Const 268435457,[],NONE);
    222 :≡ (Mult,[221; 220],SOME ⦕ 58; 70; 197; 219; 220; 221 ⦖);
    223 :≡ (Const 268435297,[],NONE);
    224 :≡ (Add,[223; 222],SOME ⦕ 58; 70; 197; 219; 222; 223 ⦖);
    makespace 64 ⦕ 58; 70; 197; 219; 224 ⦖;
    225 :≡ (WordFromInt,[224],NONE);
    226 :≡ (Cons 3,[225],NONE);
    227 :≡ (Cons 0,[],NONE);
    228 :≡ (Const 116,[],NONE);
    229 :≡ (Cons 0,[228; 227],NONE);
    230 :≡ (Const 115,[],NONE);
    231 :≡ (Cons 0,[230; 229],NONE);
    232 :≡ (Const 111,[],NONE);
    233 :≡ (Cons 0,[232; 231],NONE);
    234 :≡ (Const 112,[],NONE);
    235 :≡ (Cons 0,[234; 233],NONE);
    236 :≡ (Const 108,[],NONE);
    237 :≡ (Cons 0,[236; 235],NONE);
    238 :≡ (Const 118,[],NONE);
    239 :≡ (Cons 0,[238; 237],NONE);
    240 :≡ (Cons 2,[239],NONE);
    241 :≡ (Cons 3,[240; 226],NONE);
    242 :≡ (Cons 3,[241; 219],NONE);
    243 :≡ (Cons 4,[242; 197],NONE);
    244 :≡ (Cons 2,[243; 70],NONE);
    245 :≡ (Cons 0,[],NONE);
    246 :≡ (Const 116,[],NONE);
    247 :≡ (Cons 0,[246; 245],NONE);
    248 :≡ (Const 115,[],NONE);
    249 :≡ (Cons 0,[248; 247],NONE);
    250 :≡ (Const 111,[],NONE);
    251 :≡ (Cons 0,[250; 249],NONE);
    252 :≡ (Const 112,[],NONE);
    253 :≡ (Cons 0,[252; 251],NONE);
    254 :≡ (Const 97,[],NONE);
    255 :≡ (Cons 0,[254; 253],NONE);
    256 :≡ (Cons 2,[255],NONE);
    257 :≡ (Cons 1,[256],NONE);
    258 :≡ (Cons 0,[],NONE);
    259 :≡ (Const 118,[],NONE);
    260 :≡ (Cons 0,[259; 258],NONE);
    261 :≡ (Cons 2,[260],NONE);
    262 :≡ (Cons 2,[261; 257],NONE);
    263 :≡ (Const 159,[],NONE);
    264 :≡ (Const 268435457,[],NONE);
    265 :≡ (Mult,[264; 263],SOME ⦕ 58; 244; 262; 263; 264 ⦖);
    266 :≡ (Const 268435297,[],NONE);
    267 :≡ (Add,[266; 265],SOME ⦕ 58; 244; 262; 265; 266 ⦖);
    makespace 43 ⦕ 58; 244; 262; 267 ⦖;
    268 :≡ (WordFromInt,[267],NONE);
    269 :≡ (Cons 3,[268],NONE);
    270 :≡ (Cons 3,[269; 262],NONE);
    271 :≡ (Cons 0,[],NONE);
    272 :≡ (Const 84,[],NONE);
    273 :≡ (Cons 0,[272; 271],NONE);
    274 :≡ (Cons 2,[273],NONE);
    275 :≡ (Cons 0,[274; 270],NONE);
    276 :≡ (Cons 0,[],NONE);
    277 :≡ (Const 116,[],NONE);
    278 :≡ (Cons 0,[277; 276],NONE);
    279 :≡ (Const 115,[],NONE);
    280 :≡ (Cons 0,[279; 278],NONE);
    281 :≡ (Const 111,[],NONE);
    282 :≡ (Cons 0,[281; 280],NONE);
    283 :≡ (Const 112,[],NONE);
    284 :≡ (Cons 0,[283; 282],NONE);
    285 :≡ (Const 97,[],NONE);
    286 :≡ (Cons 0,[285; 284],NONE);
    287 :≡ (Cons 2,[286],NONE);
    288 :≡ (Cons 1,[287],NONE);
    289 :≡ (Cons 0,[],NONE);
    290 :≡ (Const 118,[],NONE);
    291 :≡ (Cons 0,[290; 289],NONE);
    292 :≡ (Cons 2,[291],NONE);
    293 :≡ (Cons 2,[292; 288],NONE);
    294 :≡ (Const 159,[],NONE);
    295 :≡ (Const 268435457,[],NONE);
    296 :≡ (Mult,[295; 294],SOME ⦕ 58; 244; 275; 293; 294; 295 ⦖);
    297 :≡ (Const 268435297,[],NONE);
    298 :≡ (Add,[297; 296],SOME ⦕ 58; 244; 275; 293; 296; 297 ⦖);
    makespace 19 ⦕ 58; 244; 275; 293; 298 ⦖;
    299 :≡ (WordFromInt,[298],NONE);
    300 :≡ (Cons 3,[299],NONE);
    301 :≡ (Cons 3,[300; 293],NONE);
    302 :≡ (Cons 0,[],NONE);
    303 :≡ (Const 84,[],NONE);
    304 :≡ (Cons 0,[303; 302],NONE);
    305 :≡ (Cons 2,[304],NONE);
    306 :≡ (Cons 0,[305; 301],NONE);
    307 :≡ (Cons 3,[306; 275],NONE);
    308 :≡ (Const 31,[],NONE);
    309 :≡ (Const 268435457,[],NONE);
    310 :≡ (Mult,[309; 308],SOME ⦕ 58; 244; 307; 308; 309 ⦖);
    311 :≡ (Const 268435425,[],NONE);
    312 :≡ (Add,[311; 310],SOME ⦕ 58; 244; 307; 310; 311 ⦖);
    makespace 28 ⦕ 58; 244; 307; 312 ⦖;
    313 :≡ (WordFromInt,[312],NONE);
    314 :≡ (Cons 3,[313],NONE);
    315 :≡ (Cons 0,[],NONE);
    316 :≡ (Const 116,[],NONE);
    317 :≡ (Cons 0,[316; 315],NONE);
    318 :≡ (Const 115,[],NONE);
    319 :≡ (Cons 0,[318; 317],NONE);
    320 :≡ (Const 111,[],NONE);
    321 :≡ (Cons 0,[320; 319],NONE);
    322 :≡ (Const 112,[],NONE);
    323 :≡ (Cons 0,[322; 321],NONE);
    324 :≡ (Const 97,[],NONE);
    325 :≡ (Cons 0,[324; 323],NONE);
    326 :≡ (Cons 2,[325],NONE);
    327 :≡ (Cons 2,[326; 314],NONE);
    328 :≡ (Cons 3,[327; 307],NONE);
    329 :≡ (Const 159,[],NONE);
    330 :≡ (Const 268435457,[],NONE);
    331 :≡ (Mult,[330; 329],SOME ⦕ 58; 244; 328; 329; 330 ⦖);
    332 :≡ (Const 268435297,[],NONE);
    333 :≡ (Add,[332; 331],SOME ⦕ 58; 244; 328; 331; 332 ⦖);
    makespace 32 ⦕ 58; 244; 328; 333 ⦖;
    334 :≡ (WordFromInt,[333],NONE);
    335 :≡ (Cons 3,[334],NONE);
    336 :≡ (Cons 0,[],NONE);
    337 :≡ (Const 116,[],NONE);
    338 :≡ (Cons 0,[337; 336],NONE);
    339 :≡ (Const 115,[],NONE);
    340 :≡ (Cons 0,[339; 338],NONE);
    341 :≡ (Const 111,[],NONE);
    342 :≡ (Cons 0,[341; 340],NONE);
    343 :≡ (Const 112,[],NONE);
    344 :≡ (Cons 0,[343; 342],NONE);
    345 :≡ (Const 97,[],NONE);
    346 :≡ (Cons 0,[345; 344],NONE);
    347 :≡ (Cons 2,[346],NONE);
    348 :≡ (Cons 1,[347],NONE);
    349 :≡ (Cons 0,[],NONE);
    350 :≡ (Const 118,[],NONE);
    351 :≡ (Cons 0,[350; 349],NONE);
    352 :≡ (Cons 2,[351],NONE);
    353 :≡ (Cons 2,[352; 348],NONE);
    354 :≡ (Const 159,[],NONE);
    355 :≡ (Const 268435457,[],NONE);
    356 :≡ (Mult,[355; 354],SOME ⦕ 58; 244; 328; 335; 353; 354; 355 ⦖);
    357 :≡ (Const 268435297,[],NONE);
    358 :≡ (Add,[357; 356],SOME ⦕ 58; 244; 328; 335; 353; 356; 357 ⦖);
    makespace 98 ⦕ 58; 244; 328; 335; 353; 358 ⦖;
    359 :≡ (WordFromInt,[358],NONE);
    360 :≡ (Cons 3,[359],NONE);
    361 :≡ (Cons 3,[360; 353],NONE);
    362 :≡ (Cons 0,[],NONE);
    363 :≡ (Const 84,[],NONE);
    364 :≡ (Cons 0,[363; 362],NONE);
    365 :≡ (Cons 2,[364],NONE);
    366 :≡ (Cons 0,[365; 361],NONE);
    367 :≡ (Cons 0,[],NONE);
    368 :≡ (Const 118,[],NONE);
    369 :≡ (Cons 0,[368; 367],NONE);
    370 :≡ (Cons 2,[369],NONE);
    371 :≡ (Cons 3,[370; 366],NONE);
    372 :≡ (Cons 3,[371; 335],NONE);
    373 :≡ (Cons 4,[372; 328],NONE);
    374 :≡ (Cons 4,[373; 244],NONE);
    375 :≡ (Cons 0,[],NONE);
    376 :≡ (Const 116,[],NONE);
    377 :≡ (Cons 0,[376; 375],NONE);
    378 :≡ (Const 115,[],NONE);
    379 :≡ (Cons 0,[378; 377],NONE);
    380 :≡ (Const 111,[],NONE);
    381 :≡ (Cons 0,[380; 379],NONE);
    382 :≡ (Const 112,[],NONE);
    383 :≡ (Cons 0,[382; 381],NONE);
    384 :≡ (Const 107,[],NONE);
    385 :≡ (Cons 0,[384; 383],NONE);
    386 :≡ (Cons 2,[385],NONE);
    387 :≡ (Cons 0,[],NONE);
    388 :≡ (Const 116,[],NONE);
    389 :≡ (Cons 0,[388; 387],NONE);
    390 :≡ (Const 115,[],NONE);
    391 :≡ (Cons 0,[390; 389],NONE);
    392 :≡ (Const 111,[],NONE);
    393 :≡ (Cons 0,[392; 391],NONE);
    394 :≡ (Const 112,[],NONE);
    395 :≡ (Cons 0,[394; 393],NONE);
    396 :≡ (Const 107,[],NONE);
    397 :≡ (Cons 0,[396; 395],NONE);
    398 :≡ (Cons 2,[397],NONE);
    399 :≡ (Cons 3,[398; 386],NONE);
    400 :≡ (Cons 0,[],NONE);
    401 :≡ (Const 115,[],NONE);
    402 :≡ (Cons 0,[401; 400],NONE);
    403 :≡ (Const 112,[],NONE);
    404 :≡ (Cons 0,[403; 402],NONE);
    405 :≡ (Const 101,[],NONE);
    406 :≡ (Cons 0,[405; 404],NONE);
    407 :≡ (Cons 2,[406],NONE);
    408 :≡ (Cons 0,[],NONE);
    409 :≡ (Const 115,[],NONE);
    410 :≡ (Cons 0,[409; 408],NONE);
    411 :≡ (Const 112,[],NONE);
    412 :≡ (Cons 0,[411; 410],NONE);
    413 :≡ (Const 101,[],NONE);
    414 :≡ (Cons 0,[413; 412],NONE);
    415 :≡ (Cons 2,[414],NONE);
    416 :≡ (Cons 3,[415; 407],NONE);
    417 :≡ (Cons 3,[416; 399],NONE);
    418 :≡ (Const 1599,[],NONE);
    419 :≡ (Const 268435457,[],NONE);
    420 :≡ (Mult,[419; 418],SOME ⦕ 58; 374; 417; 418; 419 ⦖);
    421 :≡ (Const 268433857,[],NONE);
    422 :≡ (Add,[421; 420],SOME ⦕ 58; 374; 417; 420; 421 ⦖);
    makespace 35 ⦕ 58; 374; 417; 422 ⦖;
    423 :≡ (WordFromInt,[422],NONE);
    424 :≡ (Cons 3,[423],NONE);
    425 :≡ (Cons 0,[],NONE);
    426 :≡ (Const 116,[],NONE);
    427 :≡ (Cons 0,[426; 425],NONE);
    428 :≡ (Const 115,[],NONE);
    429 :≡ (Cons 0,[428; 427],NONE);
    430 :≡ (Const 111,[],NONE);
    431 :≡ (Cons 0,[430; 429],NONE);
    432 :≡ (Const 112,[],NONE);
    433 :≡ (Cons 0,[432; 431],NONE);
    434 :≡ (Const 107,[],NONE);
    435 :≡ (Cons 0,[434; 433],NONE);
    436 :≡ (Cons 2,[435],NONE);
    437 :≡ (Cons 0,[436],NONE);
    438 :≡ (Cons 0,[],NONE);
    439 :≡ (Const 115,[],NONE);
    440 :≡ (Cons 0,[439; 438],NONE);
    441 :≡ (Const 112,[],NONE);
    442 :≡ (Cons 0,[441; 440],NONE);
    443 :≡ (Const 101,[],NONE);
    444 :≡ (Cons 0,[443; 442],NONE);
    445 :≡ (Cons 2,[444],NONE);
    446 :≡ (Const 31,[],NONE);
    447 :≡ (Const 268435457,[],NONE);
    448 :≡ (Mult,[447; 446],SOME ⦕ 58; 374; 417; 424; 437; 445; 446; 447 ⦖);
    449 :≡ (Const 268435425,[],NONE);
    450 :≡ (Add,[449; 448],SOME ⦕ 58; 374; 417; 424; 437; 445; 448; 449 ⦖);
    makespace 14 ⦕ 58; 374; 417; 424; 437; 445; 450 ⦖;
    451 :≡ (WordFromInt,[450],NONE);
    452 :≡ (Cons 3,[451],NONE);
    453 :≡ (Cons 3,[452; 445],NONE);
    454 :≡ (Cons 3,[453; 437],NONE);
    455 :≡ (Cons 3,[454; 424],NONE);
    456 :≡ (Const 159999,[],NONE);
    457 :≡ (Const 268435457,[],NONE);
    458 :≡ (Mult,[457; 456],SOME ⦕ 58; 374; 417; 455; 456; 457 ⦖);
    459 :≡ (Const 268275457,[],NONE);
    460 :≡ (Add,[459; 458],SOME ⦕ 58; 374; 417; 455; 458; 459 ⦖);
    makespace 17 ⦕ 58; 374; 417; 455; 460 ⦖;
    461 :≡ (WordFromInt,[460],NONE);
    462 :≡ (Cons 3,[461],NONE);
    463 :≡ (Cons 4,[462; 455],NONE);
    464 :≡ (Cons 4,[463; 417],NONE);
    465 :≡ (Cons 3,[464; 374],NONE);
    466 :≡ (Cons 3,[465; 58],NONE);
    467 :≡ (Const 1599,[],NONE);
    468 :≡ (Const 268435457,[],NONE);
    469 :≡ (Mult,[468; 467],SOME ⦕ 466; 467; 468 ⦖);
    470 :≡ (Const 268433857,[],NONE);
    471 :≡ (Add,[470; 469],SOME ⦕ 466; 469; 470 ⦖);
    makespace 5 ⦕ 466; 471 ⦖;
    472 :≡ (WordFromInt,[471],NONE);
    473 :≡ (Cons 3,[472],NONE);
    474 :≡ (Const 159999,[],NONE);
    475 :≡ (Const 268435457,[],NONE);
    476 :≡ (Mult,[475; 474],SOME ⦕ 466; 473; 474; 475 ⦖);
    477 :≡ (Const 268275457,[],NONE);
    478 :≡ (Add,[477; 476],SOME ⦕ 466; 473; 476; 477 ⦖);
    makespace 16 ⦕ 466; 473; 478 ⦖;
    479 :≡ (WordFromInt,[478],NONE);
    480 :≡ (Cons 3,[479],NONE);
    481 :≡ (Cons 0,[],NONE);
    482 :≡ (Const 115,[],NONE);
    483 :≡ (Cons 0,[482; 481],NONE);
    484 :≡ (Const 112,[],NONE);
    485 :≡ (Cons 0,[484; 483],NONE);
    486 :≡ (Const 101,[],NONE);
    487 :≡ (Cons 0,[486; 485],NONE);
    488 :≡ (Cons 2,[487],NONE);
    489 :≡ (Const 159,[],NONE);
    490 :≡ (Const 268435457,[],NONE);
    491 :≡ (Mult,[490; 489],SOME ⦕ 466; 473; 480; 488; 489; 490 ⦖);
    492 :≡ (Const 268435297,[],NONE);
    493 :≡ (Add,[492; 491],SOME ⦕ 466; 473; 480; 488; 491; 492 ⦖);
    makespace 8 ⦕ 466; 473; 480; 488; 493 ⦖;
    494 :≡ (WordFromInt,[493],NONE);
    495 :≡ (Cons 3,[494],NONE);
    496 :≡ (Cons 3,[495; 488],NONE);
    497 :≡ (Const 255,[],NONE);
    498 :≡ (Const 268435457,[],NONE);
    499 :≡ (Mult,[498; 497],SOME ⦕ 466; 473; 480; 496; 497; 498 ⦖);
    500 :≡ (Const 268434929,[],NONE);
    501 :≡ (Add,[500; 499],SOME ⦕ 466; 473; 480; 496; 499; 500 ⦖);
    502 :≡ (Const 268435457,[],NONE);
    503 :≡ (Mult,[502; 501],SOME ⦕ 466; 473; 480; 496; 501; 502 ⦖);
    504 :≡ (Const 272,[],NONE);
    505 :≡ (Add,[504; 503],SOME ⦕ 466; 473; 480; 496; 503; 504 ⦖);
    makespace 44 ⦕ 466; 473; 480; 496; 505 ⦖;
    506 :≡ (WordFromInt,[505],NONE);
    507 :≡ (Cons 3,[506],NONE);
    508 :≡ (Cons 3,[507; 496],NONE);
    509 :≡ (Cons 0,[],NONE);
    510 :≡ (Const 116,[],NONE);
    511 :≡ (Cons 0,[510; 509],NONE);
    512 :≡ (Const 115,[],NONE);
    513 :≡ (Cons 0,[512; 511],NONE);
    514 :≡ (Const 111,[],NONE);
    515 :≡ (Cons 0,[514; 513],NONE);
    516 :≡ (Const 112,[],NONE);
    517 :≡ (Cons 0,[516; 515],NONE);
    518 :≡ (Const 103,[],NONE);
    519 :≡ (Cons 0,[518; 517],NONE);
    520 :≡ (Const 120,[],NONE);
    521 :≡ (Cons 0,[520; 519],NONE);
    522 :≡ (Cons 2,[521],NONE);
    523 :≡ (Cons 0,[522],NONE);
    524 :≡ (Cons 4,[523; 508],NONE);
    525 :≡ (Cons 3,[524; 480],NONE);
    526 :≡ (Cons 3,[525; 473],NONE);
    527 :≡ (Cons 0,[],NONE);
    528 :≡ (Const 65,[],NONE);
    529 :≡ (Cons 0,[528; 527],NONE);
    530 :≡ (Cons 2,[529],NONE);
    531 :≡ (Const 31,[],NONE);
    532 :≡ (Const 268435457,[],NONE);
    533 :≡ (Mult,[532; 531],SOME ⦕ 466; 526; 530; 531; 532 ⦖);
    534 :≡ (Const 268435425,[],NONE);
    535 :≡ (Add,[534; 533],SOME ⦕ 466; 526; 530; 533; 534 ⦖);
    makespace 35 ⦕ 466; 526; 530; 535 ⦖;
    536 :≡ (WordFromInt,[535],NONE);
    537 :≡ (Cons 3,[536],NONE);
    538 :≡ (Cons 3,[537; 530],NONE);
    539 :≡ (Cons 0,[],NONE);
    540 :≡ (Const 116,[],NONE);
    541 :≡ (Cons 0,[540; 539],NONE);
    542 :≡ (Const 115,[],NONE);
    543 :≡ (Cons 0,[542; 541],NONE);
    544 :≡ (Const 111,[],NONE);
    545 :≡ (Cons 0,[544; 543],NONE);
    546 :≡ (Const 112,[],NONE);
    547 :≡ (Cons 0,[546; 545],NONE);
    548 :≡ (Const 97,[],NONE);
    549 :≡ (Cons 0,[548; 547],NONE);
    550 :≡ (Cons 2,[549],NONE);
    551 :≡ (Cons 1,[550],NONE);
    552 :≡ (Cons 0,[],NONE);
    553 :≡ (Const 118,[],NONE);
    554 :≡ (Cons 0,[553; 552],NONE);
    555 :≡ (Cons 2,[554],NONE);
    556 :≡ (Cons 2,[555; 551],NONE);
    557 :≡ (Const 159,[],NONE);
    558 :≡ (Const 268435457,[],NONE);
    559 :≡ (Mult,[558; 557],SOME ⦕ 466; 526; 538; 556; 557; 558 ⦖);
    560 :≡ (Const 268435297,[],NONE);
    561 :≡ (Add,[560; 559],SOME ⦕ 466; 526; 538; 556; 559; 560 ⦖);
    makespace 36 ⦕ 466; 526; 538; 556; 561 ⦖;
    562 :≡ (WordFromInt,[561],NONE);
    563 :≡ (Cons 3,[562],NONE);
    564 :≡ (Cons 3,[563; 556],NONE);
    565 :≡ (Cons 0,[],NONE);
    566 :≡ (Const 84,[],NONE);
    567 :≡ (Cons 0,[566; 565],NONE);
    568 :≡ (Cons 2,[567],NONE);
    569 :≡ (Cons 0,[568; 564],NONE);
    570 :≡ (Cons 0,[],NONE);
    571 :≡ (Const 116,[],NONE);
    572 :≡ (Cons 0,[571; 570],NONE);
    573 :≡ (Const 115,[],NONE);
    574 :≡ (Cons 0,[573; 572],NONE);
    575 :≡ (Const 111,[],NONE);
    576 :≡ (Cons 0,[575; 574],NONE);
    577 :≡ (Const 112,[],NONE);
    578 :≡ (Cons 0,[577; 576],NONE);
    579 :≡ (Const 97,[],NONE);
    580 :≡ (Cons 0,[579; 578],NONE);
    581 :≡ (Cons 2,[580],NONE);
    582 :≡ (Cons 3,[581; 569],NONE);
    583 :≡ (Const 159,[],NONE);
    584 :≡ (Const 268435457,[],NONE);
    585 :≡ (Mult,[584; 583],SOME ⦕ 466; 526; 538; 582; 583; 584 ⦖);
    586 :≡ (Const 268435297,[],NONE);
    587 :≡ (Add,[586; 585],SOME ⦕ 466; 526; 538; 582; 585; 586 ⦖);
    makespace 43 ⦕ 466; 526; 538; 582; 587 ⦖;
    588 :≡ (WordFromInt,[587],NONE);
    589 :≡ (Cons 3,[588],NONE);
    590 :≡ (Cons 0,[],NONE);
    591 :≡ (Const 118,[],NONE);
    592 :≡ (Cons 0,[591; 590],NONE);
    593 :≡ (Cons 2,[592],NONE);
    594 :≡ (Cons 3,[593; 589],NONE);
    595 :≡ (Cons 4,[594; 582],NONE);
    596 :≡ (Cons 0,[],NONE);
    597 :≡ (Const 116,[],NONE);
    598 :≡ (Cons 0,[597; 596],NONE);
    599 :≡ (Const 115,[],NONE);
    600 :≡ (Cons 0,[599; 598],NONE);
    601 :≡ (Const 111,[],NONE);
    602 :≡ (Cons 0,[601; 600],NONE);
    603 :≡ (Const 112,[],NONE);
    604 :≡ (Cons 0,[603; 602],NONE);
    605 :≡ (Const 97,[],NONE);
    606 :≡ (Cons 0,[605; 604],NONE);
    607 :≡ (Cons 2,[606],NONE);
    608 :≡ (Cons 1,[607],NONE);
    609 :≡ (Cons 0,[],NONE);
    610 :≡ (Const 118,[],NONE);
    611 :≡ (Cons 0,[610; 609],NONE);
    612 :≡ (Cons 2,[611],NONE);
    613 :≡ (Cons 2,[612; 608],NONE);
    614 :≡ (Const 159,[],NONE);
    615 :≡ (Const 268435457,[],NONE);
    616 :≡ (Mult,[615; 614],SOME ⦕ 466; 526; 538; 595; 613; 614; 615 ⦖);
    617 :≡ (Const 268435297,[],NONE);
    618 :≡ (Add,[617; 616],SOME ⦕ 466; 526; 538; 595; 613; 616; 617 ⦖);
    makespace 36 ⦕ 466; 526; 538; 595; 613; 618 ⦖;
    619 :≡ (WordFromInt,[618],NONE);
    620 :≡ (Cons 3,[619],NONE);
    621 :≡ (Cons 3,[620; 613],NONE);
    622 :≡ (Cons 0,[],NONE);
    623 :≡ (Const 84,[],NONE);
    624 :≡ (Cons 0,[623; 622],NONE);
    625 :≡ (Cons 2,[624],NONE);
    626 :≡ (Cons 0,[625; 621],NONE);
    627 :≡ (Cons 0,[],NONE);
    628 :≡ (Const 116,[],NONE);
    629 :≡ (Cons 0,[628; 627],NONE);
    630 :≡ (Const 115,[],NONE);
    631 :≡ (Cons 0,[630; 629],NONE);
    632 :≡ (Const 111,[],NONE);
    633 :≡ (Cons 0,[632; 631],NONE);
    634 :≡ (Const 112,[],NONE);
    635 :≡ (Cons 0,[634; 633],NONE);
    636 :≡ (Const 97,[],NONE);
    637 :≡ (Cons 0,[636; 635],NONE);
    638 :≡ (Cons 2,[637],NONE);
    639 :≡ (Cons 3,[638; 626],NONE);
    640 :≡ (Const 159,[],NONE);
    641 :≡ (Const 268435457,[],NONE);
    642 :≡ (Mult,[641; 640],SOME ⦕ 466; 526; 538; 595; 639; 640; 641 ⦖);
    643 :≡ (Const 268435297,[],NONE);
    644 :≡ (Add,[643; 642],SOME ⦕ 466; 526; 538; 595; 639; 642; 643 ⦖);
    makespace 19 ⦕ 466; 526; 538; 595; 639; 644 ⦖;
    645 :≡ (WordFromInt,[644],NONE);
    646 :≡ (Cons 3,[645],NONE);
    647 :≡ (Cons 0,[],NONE);
    648 :≡ (Const 118,[],NONE);
    649 :≡ (Cons 0,[648; 647],NONE);
    650 :≡ (Cons 2,[649],NONE);
    651 :≡ (Cons 3,[650; 646],NONE);
    652 :≡ (Cons 4,[651; 639],NONE);
    653 :≡ (Cons 3,[652; 595],NONE);
    654 :≡ (Const 255,[],NONE);
    655 :≡ (Const 268435457,[],NONE);
    656 :≡ (Mult,[655; 654],SOME ⦕ 466; 526; 538; 653; 654; 655 ⦖);
    657 :≡ (Const 268434929,[],NONE);
    658 :≡ (Add,[657; 656],SOME ⦕ 466; 526; 538; 653; 656; 657 ⦖);
    659 :≡ (Const 268435457,[],NONE);
    660 :≡ (Mult,[659; 658],SOME ⦕ 466; 526; 538; 653; 658; 659 ⦖);
    661 :≡ (Const 272,[],NONE);
    662 :≡ (Add,[661; 660],SOME ⦕ 466; 526; 538; 653; 660; 661 ⦖);
    makespace 8 ⦕ 466; 526; 538; 653; 662 ⦖;
    663 :≡ (WordFromInt,[662],NONE);
    664 :≡ (Cons 3,[663],NONE);
    665 :≡ (Cons 3,[664; 653],NONE);
    666 :≡ (Const 159,[],NONE);
    667 :≡ (Const 268435457,[],NONE);
    668 :≡ (Mult,[667; 666],SOME ⦕ 466; 526; 538; 665; 666; 667 ⦖);
    669 :≡ (Const 268435297,[],NONE);
    670 :≡ (Add,[669; 668],SOME ⦕ 466; 526; 538; 665; 668; 669 ⦖);
    makespace 28 ⦕ 466; 526; 538; 665; 670 ⦖;
    671 :≡ (WordFromInt,[670],NONE);
    672 :≡ (Cons 3,[671],NONE);
    673 :≡ (Cons 0,[],NONE);
    674 :≡ (Const 116,[],NONE);
    675 :≡ (Cons 0,[674; 673],NONE);
    676 :≡ (Const 115,[],NONE);
    677 :≡ (Cons 0,[676; 675],NONE);
    678 :≡ (Const 111,[],NONE);
    679 :≡ (Cons 0,[678; 677],NONE);
    680 :≡ (Const 112,[],NONE);
    681 :≡ (Cons 0,[680; 679],NONE);
    682 :≡ (Const 108,[],NONE);
    683 :≡ (Cons 0,[682; 681],NONE);
    684 :≡ (Const 118,[],NONE);
    685 :≡ (Cons 0,[684; 683],NONE);
    686 :≡ (Cons 2,[685],NONE);
    687 :≡ (Cons 3,[686; 672],NONE);
    688 :≡ (Const 159,[],NONE);
    689 :≡ (Const 268435457,[],NONE);
    690 :≡ (Mult,[689; 688],SOME ⦕ 466; 526; 538; 665; 687; 688; 689 ⦖);
    691 :≡ (Const 268435297,[],NONE);
    692 :≡ (Add,[691; 690],SOME ⦕ 466; 526; 538; 665; 687; 690; 691 ⦖);
    makespace 64 ⦕ 466; 526; 538; 665; 687; 692 ⦖;
    693 :≡ (WordFromInt,[692],NONE);
    694 :≡ (Cons 3,[693],NONE);
    695 :≡ (Cons 0,[],NONE);
    696 :≡ (Const 116,[],NONE);
    697 :≡ (Cons 0,[696; 695],NONE);
    698 :≡ (Const 115,[],NONE);
    699 :≡ (Cons 0,[698; 697],NONE);
    700 :≡ (Const 111,[],NONE);
    701 :≡ (Cons 0,[700; 699],NONE);
    702 :≡ (Const 112,[],NONE);
    703 :≡ (Cons 0,[702; 701],NONE);
    704 :≡ (Const 108,[],NONE);
    705 :≡ (Cons 0,[704; 703],NONE);
    706 :≡ (Const 118,[],NONE);
    707 :≡ (Cons 0,[706; 705],NONE);
    708 :≡ (Cons 2,[707],NONE);
    709 :≡ (Cons 3,[708; 694],NONE);
    710 :≡ (Cons 3,[709; 687],NONE);
    711 :≡ (Cons 4,[710; 665],NONE);
    712 :≡ (Cons 2,[711; 538],NONE);
    713 :≡ (Cons 0,[],NONE);
    714 :≡ (Const 116,[],NONE);
    715 :≡ (Cons 0,[714; 713],NONE);
    716 :≡ (Const 115,[],NONE);
    717 :≡ (Cons 0,[716; 715],NONE);
    718 :≡ (Const 111,[],NONE);
    719 :≡ (Cons 0,[718; 717],NONE);
    720 :≡ (Const 112,[],NONE);
    721 :≡ (Cons 0,[720; 719],NONE);
    722 :≡ (Const 97,[],NONE);
    723 :≡ (Cons 0,[722; 721],NONE);
    724 :≡ (Cons 2,[723],NONE);
    725 :≡ (Cons 1,[724],NONE);
    726 :≡ (Cons 0,[],NONE);
    727 :≡ (Const 118,[],NONE);
    728 :≡ (Cons 0,[727; 726],NONE);
    729 :≡ (Cons 2,[728],NONE);
    730 :≡ (Cons 2,[729; 725],NONE);
    731 :≡ (Const 159,[],NONE);
    732 :≡ (Const 268435457,[],NONE);
    733 :≡ (Mult,[732; 731],SOME ⦕ 466; 526; 712; 730; 731; 732 ⦖);
    734 :≡ (Const 268435297,[],NONE);
    735 :≡ (Add,[734; 733],SOME ⦕ 466; 526; 712; 730; 733; 734 ⦖);
    makespace 43 ⦕ 466; 526; 712; 730; 735 ⦖;
    736 :≡ (WordFromInt,[735],NONE);
    737 :≡ (Cons 3,[736],NONE);
    738 :≡ (Cons 3,[737; 730],NONE);
    739 :≡ (Cons 0,[],NONE);
    740 :≡ (Const 84,[],NONE);
    741 :≡ (Cons 0,[740; 739],NONE);
    742 :≡ (Cons 2,[741],NONE);
    743 :≡ (Cons 0,[742; 738],NONE);
    744 :≡ (Cons 0,[],NONE);
    745 :≡ (Const 116,[],NONE);
    746 :≡ (Cons 0,[745; 744],NONE);
    747 :≡ (Const 115,[],NONE);
    748 :≡ (Cons 0,[747; 746],NONE);
    749 :≡ (Const 111,[],NONE);
    750 :≡ (Cons 0,[749; 748],NONE);
    751 :≡ (Const 112,[],NONE);
    752 :≡ (Cons 0,[751; 750],NONE);
    753 :≡ (Const 97,[],NONE);
    754 :≡ (Cons 0,[753; 752],NONE);
    755 :≡ (Cons 2,[754],NONE);
    756 :≡ (Cons 1,[755],NONE);
    757 :≡ (Cons 0,[],NONE);
    758 :≡ (Const 118,[],NONE);
    759 :≡ (Cons 0,[758; 757],NONE);
    760 :≡ (Cons 2,[759],NONE);
    761 :≡ (Cons 2,[760; 756],NONE);
    762 :≡ (Const 159,[],NONE);
    763 :≡ (Const 268435457,[],NONE);
    764 :≡ (Mult,[763; 762],SOME ⦕ 466; 526; 712; 743; 761; 762; 763 ⦖);
    765 :≡ (Const 268435297,[],NONE);
    766 :≡ (Add,[765; 764],SOME ⦕ 466; 526; 712; 743; 761; 764; 765 ⦖);
    makespace 19 ⦕ 466; 526; 712; 743; 761; 766 ⦖;
    767 :≡ (WordFromInt,[766],NONE);
    768 :≡ (Cons 3,[767],NONE);
    769 :≡ (Cons 3,[768; 761],NONE);
    770 :≡ (Cons 0,[],NONE);
    771 :≡ (Const 84,[],NONE);
    772 :≡ (Cons 0,[771; 770],NONE);
    773 :≡ (Cons 2,[772],NONE);
    774 :≡ (Cons 0,[773; 769],NONE);
    775 :≡ (Cons 3,[774; 743],NONE);
    776 :≡ (Const 31,[],NONE);
    777 :≡ (Const 268435457,[],NONE);
    778 :≡ (Mult,[777; 776],SOME ⦕ 466; 526; 712; 775; 776; 777 ⦖);
    779 :≡ (Const 268435425,[],NONE);
    780 :≡ (Add,[779; 778],SOME ⦕ 466; 526; 712; 775; 778; 779 ⦖);
    makespace 28 ⦕ 466; 526; 712; 775; 780 ⦖;
    781 :≡ (WordFromInt,[780],NONE);
    782 :≡ (Cons 3,[781],NONE);
    783 :≡ (Cons 0,[],NONE);
    784 :≡ (Const 116,[],NONE);
    785 :≡ (Cons 0,[784; 783],NONE);
    786 :≡ (Const 115,[],NONE);
    787 :≡ (Cons 0,[786; 785],NONE);
    788 :≡ (Const 111,[],NONE);
    789 :≡ (Cons 0,[788; 787],NONE);
    790 :≡ (Const 112,[],NONE);
    791 :≡ (Cons 0,[790; 789],NONE);
    792 :≡ (Const 97,[],NONE);
    793 :≡ (Cons 0,[792; 791],NONE);
    794 :≡ (Cons 2,[793],NONE);
    795 :≡ (Cons 2,[794; 782],NONE);
    796 :≡ (Cons 3,[795; 775],NONE);
    797 :≡ (Const 159,[],NONE);
    798 :≡ (Const 268435457,[],NONE);
    799 :≡ (Mult,[798; 797],SOME ⦕ 466; 526; 712; 796; 797; 798 ⦖);
    800 :≡ (Const 268435297,[],NONE);
    801 :≡ (Add,[800; 799],SOME ⦕ 466; 526; 712; 796; 799; 800 ⦖);
    makespace 32 ⦕ 466; 526; 712; 796; 801 ⦖;
    802 :≡ (WordFromInt,[801],NONE);
    803 :≡ (Cons 3,[802],NONE);
    804 :≡ (Cons 0,[],NONE);
    805 :≡ (Const 116,[],NONE);
    806 :≡ (Cons 0,[805; 804],NONE);
    807 :≡ (Const 115,[],NONE);
    808 :≡ (Cons 0,[807; 806],NONE);
    809 :≡ (Const 111,[],NONE);
    810 :≡ (Cons 0,[809; 808],NONE);
    811 :≡ (Const 112,[],NONE);
    812 :≡ (Cons 0,[811; 810],NONE);
    813 :≡ (Const 97,[],NONE);
    814 :≡ (Cons 0,[813; 812],NONE);
    815 :≡ (Cons 2,[814],NONE);
    816 :≡ (Cons 1,[815],NONE);
    817 :≡ (Cons 0,[],NONE);
    818 :≡ (Const 118,[],NONE);
    819 :≡ (Cons 0,[818; 817],NONE);
    820 :≡ (Cons 2,[819],NONE);
    821 :≡ (Cons 2,[820; 816],NONE);
    822 :≡ (Const 159,[],NONE);
    823 :≡ (Const 268435457,[],NONE);
    824 :≡ (Mult,[823; 822],SOME ⦕ 466; 526; 712; 796; 803; 821; 822; 823 ⦖);
    825 :≡ (Const 268435297,[],NONE);
    826 :≡ (Add,[825; 824],SOME ⦕ 466; 526; 712; 796; 803; 821; 824; 825 ⦖);
    makespace 98 ⦕ 466; 526; 712; 796; 803; 821; 826 ⦖;
    827 :≡ (WordFromInt,[826],NONE);
    828 :≡ (Cons 3,[827],NONE);
    829 :≡ (Cons 3,[828; 821],NONE);
    830 :≡ (Cons 0,[],NONE);
    831 :≡ (Const 84,[],NONE);
    832 :≡ (Cons 0,[831; 830],NONE);
    833 :≡ (Cons 2,[832],NONE);
    834 :≡ (Cons 0,[833; 829],NONE);
    835 :≡ (Cons 0,[],NONE);
    836 :≡ (Const 118,[],NONE);
    837 :≡ (Cons 0,[836; 835],NONE);
    838 :≡ (Cons 2,[837],NONE);
    839 :≡ (Cons 3,[838; 834],NONE);
    840 :≡ (Cons 3,[839; 803],NONE);
    841 :≡ (Cons 4,[840; 796],NONE);
    842 :≡ (Cons 4,[841; 712],NONE);
    843 :≡ (Cons 0,[],NONE);
    844 :≡ (Const 116,[],NONE);
    845 :≡ (Cons 0,[844; 843],NONE);
    846 :≡ (Const 115,[],NONE);
    847 :≡ (Cons 0,[846; 845],NONE);
    848 :≡ (Const 111,[],NONE);
    849 :≡ (Cons 0,[848; 847],NONE);
    850 :≡ (Const 112,[],NONE);
    851 :≡ (Cons 0,[850; 849],NONE);
    852 :≡ (Const 107,[],NONE);
    853 :≡ (Cons 0,[852; 851],NONE);
    854 :≡ (Cons 2,[853],NONE);
    855 :≡ (Cons 0,[],NONE);
    856 :≡ (Const 116,[],NONE);
    857 :≡ (Cons 0,[856; 855],NONE);
    858 :≡ (Const 115,[],NONE);
    859 :≡ (Cons 0,[858; 857],NONE);
    860 :≡ (Const 111,[],NONE);
    861 :≡ (Cons 0,[860; 859],NONE);
    862 :≡ (Const 112,[],NONE);
    863 :≡ (Cons 0,[862; 861],NONE);
    864 :≡ (Const 107,[],NONE);
    865 :≡ (Cons 0,[864; 863],NONE);
    866 :≡ (Cons 2,[865],NONE);
    867 :≡ (Cons 3,[866; 854],NONE);
    868 :≡ (Cons 0,[],NONE);
    869 :≡ (Const 115,[],NONE);
    870 :≡ (Cons 0,[869; 868],NONE);
    871 :≡ (Const 112,[],NONE);
    872 :≡ (Cons 0,[871; 870],NONE);
    873 :≡ (Const 101,[],NONE);
    874 :≡ (Cons 0,[873; 872],NONE);
    875 :≡ (Cons 2,[874],NONE);
    876 :≡ (Cons 0,[],NONE);
    877 :≡ (Const 115,[],NONE);
    878 :≡ (Cons 0,[877; 876],NONE);
    879 :≡ (Const 112,[],NONE);
    880 :≡ (Cons 0,[879; 878],NONE);
    881 :≡ (Const 101,[],NONE);
    882 :≡ (Cons 0,[881; 880],NONE);
    883 :≡ (Cons 2,[882],NONE);
    884 :≡ (Cons 3,[883; 875],NONE);
    885 :≡ (Cons 3,[884; 867],NONE);
    886 :≡ (Const 1599,[],NONE);
    887 :≡ (Const 268435457,[],NONE);
    888 :≡ (Mult,[887; 886],SOME ⦕ 466; 526; 842; 885; 886; 887 ⦖);
    889 :≡ (Const 268433857,[],NONE);
    890 :≡ (Add,[889; 888],SOME ⦕ 466; 526; 842; 885; 888; 889 ⦖);
    makespace 35 ⦕ 466; 526; 842; 885; 890 ⦖;
    891 :≡ (WordFromInt,[890],NONE);
    892 :≡ (Cons 3,[891],NONE);
    893 :≡ (Cons 0,[],NONE);
    894 :≡ (Const 116,[],NONE);
    895 :≡ (Cons 0,[894; 893],NONE);
    896 :≡ (Const 115,[],NONE);
    897 :≡ (Cons 0,[896; 895],NONE);
    898 :≡ (Const 111,[],NONE);
    899 :≡ (Cons 0,[898; 897],NONE);
    900 :≡ (Const 112,[],NONE);
    901 :≡ (Cons 0,[900; 899],NONE);
    902 :≡ (Const 107,[],NONE);
    903 :≡ (Cons 0,[902; 901],NONE);
    904 :≡ (Cons 2,[903],NONE);
    905 :≡ (Cons 0,[904],NONE);
    906 :≡ (Cons 0,[],NONE);
    907 :≡ (Const 115,[],NONE);
    908 :≡ (Cons 0,[907; 906],NONE);
    909 :≡ (Const 112,[],NONE);
    910 :≡ (Cons 0,[909; 908],NONE);
    911 :≡ (Const 101,[],NONE);
    912 :≡ (Cons 0,[911; 910],NONE);
    913 :≡ (Cons 2,[912],NONE);
    914 :≡ (Const 31,[],NONE);
    915 :≡ (Const 268435457,[],NONE);
    916 :≡
    (Mult,[915; 914],SOME ⦕ 466; 526; 842; 885; 892; 905; 913; 914; 915 ⦖);
    917 :≡ (Const 268435425,[],NONE);
    918 :≡
    (Add,[917; 916],SOME ⦕ 466; 526; 842; 885; 892; 905; 913; 916; 917 ⦖);
    makespace 14 ⦕ 466; 526; 842; 885; 892; 905; 913; 918 ⦖;
    919 :≡ (WordFromInt,[918],NONE);
    920 :≡ (Cons 3,[919],NONE);
    921 :≡ (Cons 3,[920; 913],NONE);
    922 :≡ (Cons 3,[921; 905],NONE);
    923 :≡ (Cons 3,[922; 892],NONE);
    924 :≡ (Const 159999,[],NONE);
    925 :≡ (Const 268435457,[],NONE);
    926 :≡ (Mult,[925; 924],SOME ⦕ 466; 526; 842; 885; 923; 924; 925 ⦖);
    927 :≡ (Const 268275457,[],NONE);
    928 :≡ (Add,[927; 926],SOME ⦕ 466; 526; 842; 885; 923; 926; 927 ⦖);
    makespace 48 ⦕ 466; 526; 842; 885; 923; 928 ⦖;
    929 :≡ (WordFromInt,[928],NONE);
    930 :≡ (Cons 3,[929],NONE);
    931 :≡ (Cons 4,[930; 923],NONE);
    932 :≡ (Cons 4,[931; 885],NONE);
    933 :≡ (Cons 3,[932; 842],NONE);
    934 :≡ (Cons 3,[933; 526],NONE);
    935 :≡ (Cons 0,[934; 466],NONE);
    936 :≡ (Const 0,[],NONE);
    937 :≡ (WordFromInt,[936],NONE);
    938 :≡ (Cons 3,[937],NONE);
    939 :≡ (Cons 0,[],NONE);
    940 :≡ (Const 116,[],NONE);
    941 :≡ (Cons 0,[940; 939],NONE);
    942 :≡ (Const 115,[],NONE);
    943 :≡ (Cons 0,[942; 941],NONE);
    944 :≡ (Const 111,[],NONE);
    945 :≡ (Cons 0,[944; 943],NONE);
    946 :≡ (Const 112,[],NONE);
    947 :≡ (Cons 0,[946; 945],NONE);
    948 :≡ (Const 97,[],NONE);
    949 :≡ (Cons 0,[948; 947],NONE);
    950 :≡ (Cons 2,[949],NONE);
    951 :≡ (Cons 4,[950; 938],NONE);
    952 :≡ (Cons 1,[951; 935],NONE);
    953 :≡ (Const 1599,[],NONE);
    954 :≡ (Const 268435457,[],NONE);
    955 :≡ (Mult,[954; 953],SOME ⦕ 952; 953; 954 ⦖);
    956 :≡ (Const 268433857,[],NONE);
    957 :≡ (Add,[956; 955],SOME ⦕ 952; 955; 956 ⦖);
    makespace 5 ⦕ 952; 957 ⦖;
    958 :≡ (WordFromInt,[957],NONE);
    959 :≡ (Cons 3,[958],NONE);
    960 :≡ (Const 159999,[],NONE);
    961 :≡ (Const 268435457,[],NONE);
    962 :≡ (Mult,[961; 960],SOME ⦕ 952; 959; 960; 961 ⦖);
    963 :≡ (Const 268275457,[],NONE);
    964 :≡ (Add,[963; 962],SOME ⦕ 952; 959; 962; 963 ⦖);
    makespace 16 ⦕ 952; 959; 964 ⦖;
    965 :≡ (WordFromInt,[964],NONE);
    966 :≡ (Cons 3,[965],NONE);
    967 :≡ (Cons 0,[],NONE);
    968 :≡ (Const 115,[],NONE);
    969 :≡ (Cons 0,[968; 967],NONE);
    970 :≡ (Const 112,[],NONE);
    971 :≡ (Cons 0,[970; 969],NONE);
    972 :≡ (Const 101,[],NONE);
    973 :≡ (Cons 0,[972; 971],NONE);
    974 :≡ (Cons 2,[973],NONE);
    975 :≡ (Const 159,[],NONE);
    976 :≡ (Const 268435457,[],NONE);
    977 :≡ (Mult,[976; 975],SOME ⦕ 952; 959; 966; 974; 975; 976 ⦖);
    978 :≡ (Const 268435297,[],NONE);
    979 :≡ (Add,[978; 977],SOME ⦕ 952; 959; 966; 974; 977; 978 ⦖);
    makespace 8 ⦕ 952; 959; 966; 974; 979 ⦖;
    980 :≡ (WordFromInt,[979],NONE);
    981 :≡ (Cons 3,[980],NONE);
    982 :≡ (Cons 3,[981; 974],NONE);
    983 :≡ (Const 255,[],NONE);
    984 :≡ (Const 268435457,[],NONE);
    985 :≡ (Mult,[984; 983],SOME ⦕ 952; 959; 966; 982; 983; 984 ⦖);
    986 :≡ (Const 268434929,[],NONE);
    987 :≡ (Add,[986; 985],SOME ⦕ 952; 959; 966; 982; 985; 986 ⦖);
    988 :≡ (Const 268435457,[],NONE);
    989 :≡ (Mult,[988; 987],SOME ⦕ 952; 959; 966; 982; 987; 988 ⦖);
    990 :≡ (Const 272,[],NONE);
    991 :≡ (Add,[990; 989],SOME ⦕ 952; 959; 966; 982; 989; 990 ⦖);
    makespace 42 ⦕ 952; 959; 966; 982; 991 ⦖;
    992 :≡ (WordFromInt,[991],NONE);
    993 :≡ (Cons 3,[992],NONE);
    994 :≡ (Cons 3,[993; 982],NONE);
    995 :≡ (Cons 0,[],NONE);
    996 :≡ (Const 116,[],NONE);
    997 :≡ (Cons 0,[996; 995],NONE);
    998 :≡ (Const 115,[],NONE);
    999 :≡ (Cons 0,[998; 997],NONE);
    1000 :≡ (Const 111,[],NONE);
    1001 :≡ (Cons 0,[1000; 999],NONE);
    1002 :≡ (Const 112,[],NONE);
    1003 :≡ (Cons 0,[1002; 1001],NONE);
    1004 :≡ (Const 103,[],NONE);
    1005 :≡ (Cons 0,[1004; 1003],NONE);
    1006 :≡ (Const 121,[],NONE);
    1007 :≡ (Cons 0,[1006; 1005],NONE);
    1008 :≡ (Cons 2,[1007],NONE);
    1009 :≡ (Cons 4,[1008; 994],NONE);
    1010 :≡ (Cons 3,[1009; 966],NONE);
    1011 :≡ (Cons 3,[1010; 959],NONE);
    1012 :≡ (Cons 0,[],NONE);
    1013 :≡ (Const 65,[],NONE);
    1014 :≡ (Cons 0,[1013; 1012],NONE);
    1015 :≡ (Cons 2,[1014],NONE);
    1016 :≡ (Const 31,[],NONE);
    1017 :≡ (Const 268435457,[],NONE);
    1018 :≡ (Mult,[1017; 1016],SOME ⦕ 952; 1011; 1015; 1016; 1017 ⦖);
    1019 :≡ (Const 268435425,[],NONE);
    1020 :≡ (Add,[1019; 1018],SOME ⦕ 952; 1011; 1015; 1018; 1019 ⦖);
    makespace 33 ⦕ 952; 1011; 1015; 1020 ⦖;
    1021 :≡ (WordFromInt,[1020],NONE);
    1022 :≡ (Cons 3,[1021],NONE);
    1023 :≡ (Cons 3,[1022; 1015],NONE);
    1024 :≡ (Cons 0,[],NONE);
    1025 :≡ (Const 84,[],NONE);
    1026 :≡ (Cons 0,[1025; 1024],NONE);
    1027 :≡ (Cons 2,[1026],NONE);
    1028 :≡ (Cons 0,[],NONE);
    1029 :≡ (Const 116,[],NONE);
    1030 :≡ (Cons 0,[1029; 1028],NONE);
    1031 :≡ (Const 115,[],NONE);
    1032 :≡ (Cons 0,[1031; 1030],NONE);
    1033 :≡ (Const 111,[],NONE);
    1034 :≡ (Cons 0,[1033; 1032],NONE);
    1035 :≡ (Const 112,[],NONE);
    1036 :≡ (Cons 0,[1035; 1034],NONE);
    1037 :≡ (Const 97,[],NONE);
    1038 :≡ (Cons 0,[1037; 1036],NONE);
    1039 :≡ (Cons 2,[1038],NONE);
    1040 :≡ (Cons 3,[1039; 1027],NONE);
    1041 :≡ (Const 159,[],NONE);
    1042 :≡ (Const 268435457,[],NONE);
    1043 :≡ (Mult,[1042; 1041],SOME ⦕ 952; 1011; 1023; 1040; 1041; 1042 ⦖);
    1044 :≡ (Const 268435297,[],NONE);
    1045 :≡ (Add,[1044; 1043],SOME ⦕ 952; 1011; 1023; 1040; 1043; 1044 ⦖);
    makespace 41 ⦕ 952; 1011; 1023; 1040; 1045 ⦖;
    1046 :≡ (WordFromInt,[1045],NONE);
    1047 :≡ (Cons 3,[1046],NONE);
    1048 :≡ (Cons 0,[],NONE);
    1049 :≡ (Const 118,[],NONE);
    1050 :≡ (Cons 0,[1049; 1048],NONE);
    1051 :≡ (Cons 2,[1050],NONE);
    1052 :≡ (Cons 3,[1051; 1047],NONE);
    1053 :≡ (Cons 4,[1052; 1040],NONE);
    1054 :≡ (Cons 0,[],NONE);
    1055 :≡ (Const 84,[],NONE);
    1056 :≡ (Cons 0,[1055; 1054],NONE);
    1057 :≡ (Cons 2,[1056],NONE);
    1058 :≡ (Cons 0,[],NONE);
    1059 :≡ (Const 116,[],NONE);
    1060 :≡ (Cons 0,[1059; 1058],NONE);
    1061 :≡ (Const 115,[],NONE);
    1062 :≡ (Cons 0,[1061; 1060],NONE);
    1063 :≡ (Const 111,[],NONE);
    1064 :≡ (Cons 0,[1063; 1062],NONE);
    1065 :≡ (Const 112,[],NONE);
    1066 :≡ (Cons 0,[1065; 1064],NONE);
    1067 :≡ (Const 97,[],NONE);
    1068 :≡ (Cons 0,[1067; 1066],NONE);
    1069 :≡ (Cons 2,[1068],NONE);
    1070 :≡ (Cons 3,[1069; 1057],NONE);
    1071 :≡ (Const 159,[],NONE);
    1072 :≡ (Const 268435457,[],NONE);
    1073 :≡
    (Mult,[1072; 1071],SOME ⦕ 952; 1011; 1023; 1053; 1070; 1071; 1072 ⦖);
    1074 :≡ (Const 268435297,[],NONE);
    1075 :≡ (Add,[1074; 1073],SOME ⦕ 952; 1011; 1023; 1053; 1070; 1073; 1074 ⦖);
    makespace 19 ⦕ 952; 1011; 1023; 1053; 1070; 1075 ⦖;
    1076 :≡ (WordFromInt,[1075],NONE);
    1077 :≡ (Cons 3,[1076],NONE);
    1078 :≡ (Cons 0,[],NONE);
    1079 :≡ (Const 118,[],NONE);
    1080 :≡ (Cons 0,[1079; 1078],NONE);
    1081 :≡ (Cons 2,[1080],NONE);
    1082 :≡ (Cons 3,[1081; 1077],NONE);
    1083 :≡ (Cons 4,[1082; 1070],NONE);
    1084 :≡ (Cons 3,[1083; 1053],NONE);
    1085 :≡ (Const 255,[],NONE);
    1086 :≡ (Const 268435457,[],NONE);
    1087 :≡ (Mult,[1086; 1085],SOME ⦕ 952; 1011; 1023; 1084; 1085; 1086 ⦖);
    1088 :≡ (Const 268434929,[],NONE);
    1089 :≡ (Add,[1088; 1087],SOME ⦕ 952; 1011; 1023; 1084; 1087; 1088 ⦖);
    1090 :≡ (Const 268435457,[],NONE);
    1091 :≡ (Mult,[1090; 1089],SOME ⦕ 952; 1011; 1023; 1084; 1089; 1090 ⦖);
    1092 :≡ (Const 272,[],NONE);
    1093 :≡ (Add,[1092; 1091],SOME ⦕ 952; 1011; 1023; 1084; 1091; 1092 ⦖);
    makespace 8 ⦕ 952; 1011; 1023; 1084; 1093 ⦖;
    1094 :≡ (WordFromInt,[1093],NONE);
    1095 :≡ (Cons 3,[1094],NONE);
    1096 :≡ (Cons 3,[1095; 1084],NONE);
    1097 :≡ (Const 159,[],NONE);
    1098 :≡ (Const 268435457,[],NONE);
    1099 :≡ (Mult,[1098; 1097],SOME ⦕ 952; 1011; 1023; 1096; 1097; 1098 ⦖);
    1100 :≡ (Const 268435297,[],NONE);
    1101 :≡ (Add,[1100; 1099],SOME ⦕ 952; 1011; 1023; 1096; 1099; 1100 ⦖);
    makespace 28 ⦕ 952; 1011; 1023; 1096; 1101 ⦖;
    1102 :≡ (WordFromInt,[1101],NONE);
    1103 :≡ (Cons 3,[1102],NONE);
    1104 :≡ (Cons 0,[],NONE);
    1105 :≡ (Const 116,[],NONE);
    1106 :≡ (Cons 0,[1105; 1104],NONE);
    1107 :≡ (Const 115,[],NONE);
    1108 :≡ (Cons 0,[1107; 1106],NONE);
    1109 :≡ (Const 111,[],NONE);
    1110 :≡ (Cons 0,[1109; 1108],NONE);
    1111 :≡ (Const 112,[],NONE);
    1112 :≡ (Cons 0,[1111; 1110],NONE);
    1113 :≡ (Const 108,[],NONE);
    1114 :≡ (Cons 0,[1113; 1112],NONE);
    1115 :≡ (Const 118,[],NONE);
    1116 :≡ (Cons 0,[1115; 1114],NONE);
    1117 :≡ (Cons 2,[1116],NONE);
    1118 :≡ (Cons 3,[1117; 1103],NONE);
    1119 :≡ (Const 159,[],NONE);
    1120 :≡ (Const 268435457,[],NONE);
    1121 :≡
    (Mult,[1120; 1119],SOME ⦕ 952; 1011; 1023; 1096; 1118; 1119; 1120 ⦖);
    1122 :≡ (Const 268435297,[],NONE);
    1123 :≡ (Add,[1122; 1121],SOME ⦕ 952; 1011; 1023; 1096; 1118; 1121; 1122 ⦖);
    makespace 50 ⦕ 952; 1011; 1023; 1096; 1118; 1123 ⦖;
    1124 :≡ (WordFromInt,[1123],NONE);
    1125 :≡ (Cons 3,[1124],NONE);
    1126 :≡ (Cons 0,[],NONE);
    1127 :≡ (Const 116,[],NONE);
    1128 :≡ (Cons 0,[1127; 1126],NONE);
    1129 :≡ (Const 115,[],NONE);
    1130 :≡ (Cons 0,[1129; 1128],NONE);
    1131 :≡ (Const 111,[],NONE);
    1132 :≡ (Cons 0,[1131; 1130],NONE);
    1133 :≡ (Const 112,[],NONE);
    1134 :≡ (Cons 0,[1133; 1132],NONE);
    1135 :≡ (Const 108,[],NONE);
    1136 :≡ (Cons 0,[1135; 1134],NONE);
    1137 :≡ (Const 118,[],NONE);
    1138 :≡ (Cons 0,[1137; 1136],NONE);
    1139 :≡ (Cons 2,[1138],NONE);
    1140 :≡ (Cons 3,[1139; 1125],NONE);
    1141 :≡ (Cons 3,[1140; 1118],NONE);
    1142 :≡ (Cons 4,[1141; 1096],NONE);
    1143 :≡ (Cons 2,[1142; 1023],NONE);
    1144 :≡ (Cons 0,[],NONE);
    1145 :≡ (Const 84,[],NONE);
    1146 :≡ (Cons 0,[1145; 1144],NONE);
    1147 :≡ (Cons 2,[1146],NONE);
    1148 :≡ (Cons 0,[],NONE);
    1149 :≡ (Const 84,[],NONE);
    1150 :≡ (Cons 0,[1149; 1148],NONE);
    1151 :≡ (Cons 2,[1150],NONE);
    1152 :≡ (Cons 3,[1151; 1147],NONE);
    1153 :≡ (Const 31,[],NONE);
    1154 :≡ (Const 268435457,[],NONE);
    1155 :≡ (Mult,[1154; 1153],SOME ⦕ 952; 1011; 1143; 1152; 1153; 1154 ⦖);
    1156 :≡ (Const 268435425,[],NONE);
    1157 :≡ (Add,[1156; 1155],SOME ⦕ 952; 1011; 1143; 1152; 1155; 1156 ⦖);
    makespace 28 ⦕ 952; 1011; 1143; 1152; 1157 ⦖;
    1158 :≡ (WordFromInt,[1157],NONE);
    1159 :≡ (Cons 3,[1158],NONE);
    1160 :≡ (Cons 0,[],NONE);
    1161 :≡ (Const 116,[],NONE);
    1162 :≡ (Cons 0,[1161; 1160],NONE);
    1163 :≡ (Const 115,[],NONE);
    1164 :≡ (Cons 0,[1163; 1162],NONE);
    1165 :≡ (Const 111,[],NONE);
    1166 :≡ (Cons 0,[1165; 1164],NONE);
    1167 :≡ (Const 112,[],NONE);
    1168 :≡ (Cons 0,[1167; 1166],NONE);
    1169 :≡ (Const 97,[],NONE);
    1170 :≡ (Cons 0,[1169; 1168],NONE);
    1171 :≡ (Cons 2,[1170],NONE);
    1172 :≡ (Cons 2,[1171; 1159],NONE);
    1173 :≡ (Cons 3,[1172; 1152],NONE);
    1174 :≡ (Const 159,[],NONE);
    1175 :≡ (Const 268435457,[],NONE);
    1176 :≡ (Mult,[1175; 1174],SOME ⦕ 952; 1011; 1143; 1173; 1174; 1175 ⦖);
    1177 :≡ (Const 268435297,[],NONE);
    1178 :≡ (Add,[1177; 1176],SOME ⦕ 952; 1011; 1143; 1173; 1176; 1177 ⦖);
    makespace 92 ⦕ 952; 1011; 1143; 1173; 1178 ⦖;
    1179 :≡ (WordFromInt,[1178],NONE);
    1180 :≡ (Cons 3,[1179],NONE);
    1181 :≡ (Cons 0,[],NONE);
    1182 :≡ (Const 84,[],NONE);
    1183 :≡ (Cons 0,[1182; 1181],NONE);
    1184 :≡ (Cons 2,[1183],NONE);
    1185 :≡ (Cons 0,[],NONE);
    1186 :≡ (Const 118,[],NONE);
    1187 :≡ (Cons 0,[1186; 1185],NONE);
    1188 :≡ (Cons 2,[1187],NONE);
    1189 :≡ (Cons 3,[1188; 1184],NONE);
    1190 :≡ (Cons 3,[1189; 1180],NONE);
    1191 :≡ (Cons 4,[1190; 1173],NONE);
    1192 :≡ (Cons 4,[1191; 1143],NONE);
    1193 :≡ (Cons 0,[],NONE);
    1194 :≡ (Const 116,[],NONE);
    1195 :≡ (Cons 0,[1194; 1193],NONE);
    1196 :≡ (Const 115,[],NONE);
    1197 :≡ (Cons 0,[1196; 1195],NONE);
    1198 :≡ (Const 111,[],NONE);
    1199 :≡ (Cons 0,[1198; 1197],NONE);
    1200 :≡ (Const 112,[],NONE);
    1201 :≡ (Cons 0,[1200; 1199],NONE);
    1202 :≡ (Const 107,[],NONE);
    1203 :≡ (Cons 0,[1202; 1201],NONE);
    1204 :≡ (Cons 2,[1203],NONE);
    1205 :≡ (Cons 0,[],NONE);
    1206 :≡ (Const 116,[],NONE);
    1207 :≡ (Cons 0,[1206; 1205],NONE);
    1208 :≡ (Const 115,[],NONE);
    1209 :≡ (Cons 0,[1208; 1207],NONE);
    1210 :≡ (Const 111,[],NONE);
    1211 :≡ (Cons 0,[1210; 1209],NONE);
    1212 :≡ (Const 112,[],NONE);
    1213 :≡ (Cons 0,[1212; 1211],NONE);
    1214 :≡ (Const 107,[],NONE);
    1215 :≡ (Cons 0,[1214; 1213],NONE);
    1216 :≡ (Cons 2,[1215],NONE);
    1217 :≡ (Cons 3,[1216; 1204],NONE);
    1218 :≡ (Cons 0,[],NONE);
    1219 :≡ (Const 115,[],NONE);
    1220 :≡ (Cons 0,[1219; 1218],NONE);
    1221 :≡ (Const 112,[],NONE);
    1222 :≡ (Cons 0,[1221; 1220],NONE);
    1223 :≡ (Const 101,[],NONE);
    1224 :≡ (Cons 0,[1223; 1222],NONE);
    1225 :≡ (Cons 2,[1224],NONE);
    1226 :≡ (Cons 0,[],NONE);
    1227 :≡ (Const 115,[],NONE);
    1228 :≡ (Cons 0,[1227; 1226],NONE);
    1229 :≡ (Const 112,[],NONE);
    1230 :≡ (Cons 0,[1229; 1228],NONE);
    1231 :≡ (Const 101,[],NONE);
    1232 :≡ (Cons 0,[1231; 1230],NONE);
    1233 :≡ (Cons 2,[1232],NONE);
    1234 :≡ (Cons 3,[1233; 1225],NONE);
    1235 :≡ (Cons 3,[1234; 1217],NONE);
    1236 :≡ (Const 1599,[],NONE);
    1237 :≡ (Const 268435457,[],NONE);
    1238 :≡ (Mult,[1237; 1236],SOME ⦕ 952; 1011; 1192; 1235; 1236; 1237 ⦖);
    1239 :≡ (Const 268433857,[],NONE);
    1240 :≡ (Add,[1239; 1238],SOME ⦕ 952; 1011; 1192; 1235; 1238; 1239 ⦖);
    makespace 35 ⦕ 952; 1011; 1192; 1235; 1240 ⦖;
    1241 :≡ (WordFromInt,[1240],NONE);
    1242 :≡ (Cons 3,[1241],NONE);
    1243 :≡ (Cons 0,[],NONE);
    1244 :≡ (Const 116,[],NONE);
    1245 :≡ (Cons 0,[1244; 1243],NONE);
    1246 :≡ (Const 115,[],NONE);
    1247 :≡ (Cons 0,[1246; 1245],NONE);
    1248 :≡ (Const 111,[],NONE);
    1249 :≡ (Cons 0,[1248; 1247],NONE);
    1250 :≡ (Const 112,[],NONE);
    1251 :≡ (Cons 0,[1250; 1249],NONE);
    1252 :≡ (Const 107,[],NONE);
    1253 :≡ (Cons 0,[1252; 1251],NONE);
    1254 :≡ (Cons 2,[1253],NONE);
    1255 :≡ (Cons 0,[1254],NONE);
    1256 :≡ (Cons 0,[],NONE);
    1257 :≡ (Const 115,[],NONE);
    1258 :≡ (Cons 0,[1257; 1256],NONE);
    1259 :≡ (Const 112,[],NONE);
    1260 :≡ (Cons 0,[1259; 1258],NONE);
    1261 :≡ (Const 101,[],NONE);
    1262 :≡ (Cons 0,[1261; 1260],NONE);
    1263 :≡ (Cons 2,[1262],NONE);
    1264 :≡ (Const 31,[],NONE);
    1265 :≡ (Const 268435457,[],NONE);
    1266 :≡
    (Mult,[1265; 1264],
     SOME ⦕ 952; 1011; 1192; 1235; 1242; 1255; 1263; 1264; 1265 ⦖);
    1267 :≡ (Const 268435425,[],NONE);
    1268 :≡
    (Add,[1267; 1266],
     SOME ⦕ 952; 1011; 1192; 1235; 1242; 1255; 1263; 1266; 1267 ⦖);
    makespace 14 ⦕ 952; 1011; 1192; 1235; 1242; 1255; 1263; 1268 ⦖;
    1269 :≡ (WordFromInt,[1268],NONE);
    1270 :≡ (Cons 3,[1269],NONE);
    1271 :≡ (Cons 3,[1270; 1263],NONE);
    1272 :≡ (Cons 3,[1271; 1255],NONE);
    1273 :≡ (Cons 3,[1272; 1242],NONE);
    1274 :≡ (Const 159999,[],NONE);
    1275 :≡ (Const 268435457,[],NONE);
    1276 :≡
    (Mult,[1275; 1274],SOME ⦕ 952; 1011; 1192; 1235; 1273; 1274; 1275 ⦖);
    1277 :≡ (Const 268275457,[],NONE);
    1278 :≡ (Add,[1277; 1276],SOME ⦕ 952; 1011; 1192; 1235; 1273; 1276; 1277 ⦖);
    makespace 17 ⦕ 952; 1011; 1192; 1235; 1273; 1278 ⦖;
    1279 :≡ (WordFromInt,[1278],NONE);
    1280 :≡ (Cons 3,[1279],NONE);
    1281 :≡ (Cons 4,[1280; 1273],NONE);
    1282 :≡ (Cons 4,[1281; 1235],NONE);
    1283 :≡ (Cons 3,[1282; 1192],NONE);
    1284 :≡ (Cons 3,[1283; 1011],NONE);
    1285 :≡ (Const 1599,[],NONE);
    1286 :≡ (Const 268435457,[],NONE);
    1287 :≡ (Mult,[1286; 1285],SOME ⦕ 952; 1284; 1285; 1286 ⦖);
    1288 :≡ (Const 268433857,[],NONE);
    1289 :≡ (Add,[1288; 1287],SOME ⦕ 952; 1284; 1287; 1288 ⦖);
    makespace 5 ⦕ 952; 1284; 1289 ⦖;
    1290 :≡ (WordFromInt,[1289],NONE);
    1291 :≡ (Cons 3,[1290],NONE);
    1292 :≡ (Const 159999,[],NONE);
    1293 :≡ (Const 268435457,[],NONE);
    1294 :≡ (Mult,[1293; 1292],SOME ⦕ 952; 1284; 1291; 1292; 1293 ⦖);
    1295 :≡ (Const 268275457,[],NONE);
    1296 :≡ (Add,[1295; 1294],SOME ⦕ 952; 1284; 1291; 1294; 1295 ⦖);
    makespace 16 ⦕ 952; 1284; 1291; 1296 ⦖;
    1297 :≡ (WordFromInt,[1296],NONE);
    1298 :≡ (Cons 3,[1297],NONE);
    1299 :≡ (Cons 0,[],NONE);
    1300 :≡ (Const 115,[],NONE);
    1301 :≡ (Cons 0,[1300; 1299],NONE);
    1302 :≡ (Const 112,[],NONE);
    1303 :≡ (Cons 0,[1302; 1301],NONE);
    1304 :≡ (Const 101,[],NONE);
    1305 :≡ (Cons 0,[1304; 1303],NONE);
    1306 :≡ (Cons 2,[1305],NONE);
    1307 :≡ (Const 159,[],NONE);
    1308 :≡ (Const 268435457,[],NONE);
    1309 :≡
    (Mult,[1308; 1307],SOME ⦕ 952; 1284; 1291; 1298; 1306; 1307; 1308 ⦖);
    1310 :≡ (Const 268435297,[],NONE);
    1311 :≡ (Add,[1310; 1309],SOME ⦕ 952; 1284; 1291; 1298; 1306; 1309; 1310 ⦖);
    makespace 8 ⦕ 952; 1284; 1291; 1298; 1306; 1311 ⦖;
    1312 :≡ (WordFromInt,[1311],NONE);
    1313 :≡ (Cons 3,[1312],NONE);
    1314 :≡ (Cons 3,[1313; 1306],NONE);
    1315 :≡ (Const 255,[],NONE);
    1316 :≡ (Const 268435457,[],NONE);
    1317 :≡
    (Mult,[1316; 1315],SOME ⦕ 952; 1284; 1291; 1298; 1314; 1315; 1316 ⦖);
    1318 :≡ (Const 268434929,[],NONE);
    1319 :≡ (Add,[1318; 1317],SOME ⦕ 952; 1284; 1291; 1298; 1314; 1317; 1318 ⦖);
    1320 :≡ (Const 268435457,[],NONE);
    1321 :≡
    (Mult,[1320; 1319],SOME ⦕ 952; 1284; 1291; 1298; 1314; 1319; 1320 ⦖);
    1322 :≡ (Const 272,[],NONE);
    1323 :≡ (Add,[1322; 1321],SOME ⦕ 952; 1284; 1291; 1298; 1314; 1321; 1322 ⦖);
    makespace 44 ⦕ 952; 1284; 1291; 1298; 1314; 1323 ⦖;
    1324 :≡ (WordFromInt,[1323],NONE);
    1325 :≡ (Cons 3,[1324],NONE);
    1326 :≡ (Cons 3,[1325; 1314],NONE);
    1327 :≡ (Cons 0,[],NONE);
    1328 :≡ (Const 116,[],NONE);
    1329 :≡ (Cons 0,[1328; 1327],NONE);
    1330 :≡ (Const 115,[],NONE);
    1331 :≡ (Cons 0,[1330; 1329],NONE);
    1332 :≡ (Const 111,[],NONE);
    1333 :≡ (Cons 0,[1332; 1331],NONE);
    1334 :≡ (Const 112,[],NONE);
    1335 :≡ (Cons 0,[1334; 1333],NONE);
    1336 :≡ (Const 103,[],NONE);
    1337 :≡ (Cons 0,[1336; 1335],NONE);
    1338 :≡ (Const 120,[],NONE);
    1339 :≡ (Cons 0,[1338; 1337],NONE);
    1340 :≡ (Cons 2,[1339],NONE);
    1341 :≡ (Cons 0,[1340],NONE);
    1342 :≡ (Cons 4,[1341; 1326],NONE);
    1343 :≡ (Cons 3,[1342; 1298],NONE);
    1344 :≡ (Cons 3,[1343; 1291],NONE);
    1345 :≡ (Cons 0,[],NONE);
    1346 :≡ (Const 65,[],NONE);
    1347 :≡ (Cons 0,[1346; 1345],NONE);
    1348 :≡ (Cons 2,[1347],NONE);
    1349 :≡ (Const 31,[],NONE);
    1350 :≡ (Const 268435457,[],NONE);
    1351 :≡ (Mult,[1350; 1349],SOME ⦕ 952; 1284; 1344; 1348; 1349; 1350 ⦖);
    1352 :≡ (Const 268435425,[],NONE);
    1353 :≡ (Add,[1352; 1351],SOME ⦕ 952; 1284; 1344; 1348; 1351; 1352 ⦖);
    makespace 33 ⦕ 952; 1284; 1344; 1348; 1353 ⦖;
    1354 :≡ (WordFromInt,[1353],NONE);
    1355 :≡ (Cons 3,[1354],NONE);
    1356 :≡ (Cons 3,[1355; 1348],NONE);
    1357 :≡ (Cons 0,[],NONE);
    1358 :≡ (Const 84,[],NONE);
    1359 :≡ (Cons 0,[1358; 1357],NONE);
    1360 :≡ (Cons 2,[1359],NONE);
    1361 :≡ (Cons 0,[],NONE);
    1362 :≡ (Const 116,[],NONE);
    1363 :≡ (Cons 0,[1362; 1361],NONE);
    1364 :≡ (Const 115,[],NONE);
    1365 :≡ (Cons 0,[1364; 1363],NONE);
    1366 :≡ (Const 111,[],NONE);
    1367 :≡ (Cons 0,[1366; 1365],NONE);
    1368 :≡ (Const 112,[],NONE);
    1369 :≡ (Cons 0,[1368; 1367],NONE);
    1370 :≡ (Const 97,[],NONE);
    1371 :≡ (Cons 0,[1370; 1369],NONE);
    1372 :≡ (Cons 2,[1371],NONE);
    1373 :≡ (Cons 3,[1372; 1360],NONE);
    1374 :≡ (Const 159,[],NONE);
    1375 :≡ (Const 268435457,[],NONE);
    1376 :≡
    (Mult,[1375; 1374],SOME ⦕ 952; 1284; 1344; 1356; 1373; 1374; 1375 ⦖);
    1377 :≡ (Const 268435297,[],NONE);
    1378 :≡ (Add,[1377; 1376],SOME ⦕ 952; 1284; 1344; 1356; 1373; 1376; 1377 ⦖);
    makespace 41 ⦕ 952; 1284; 1344; 1356; 1373; 1378 ⦖;
    1379 :≡ (WordFromInt,[1378],NONE);
    1380 :≡ (Cons 3,[1379],NONE);
    1381 :≡ (Cons 0,[],NONE);
    1382 :≡ (Const 118,[],NONE);
    1383 :≡ (Cons 0,[1382; 1381],NONE);
    1384 :≡ (Cons 2,[1383],NONE);
    1385 :≡ (Cons 3,[1384; 1380],NONE);
    1386 :≡ (Cons 4,[1385; 1373],NONE);
    1387 :≡ (Cons 0,[],NONE);
    1388 :≡ (Const 84,[],NONE);
    1389 :≡ (Cons 0,[1388; 1387],NONE);
    1390 :≡ (Cons 2,[1389],NONE);
    1391 :≡ (Cons 0,[],NONE);
    1392 :≡ (Const 116,[],NONE);
    1393 :≡ (Cons 0,[1392; 1391],NONE);
    1394 :≡ (Const 115,[],NONE);
    1395 :≡ (Cons 0,[1394; 1393],NONE);
    1396 :≡ (Const 111,[],NONE);
    1397 :≡ (Cons 0,[1396; 1395],NONE);
    1398 :≡ (Const 112,[],NONE);
    1399 :≡ (Cons 0,[1398; 1397],NONE);
    1400 :≡ (Const 97,[],NONE);
    1401 :≡ (Cons 0,[1400; 1399],NONE);
    1402 :≡ (Cons 2,[1401],NONE);
    1403 :≡ (Cons 3,[1402; 1390],NONE);
    1404 :≡ (Const 159,[],NONE);
    1405 :≡ (Const 268435457,[],NONE);
    1406 :≡
    (Mult,[1405; 1404],SOME ⦕ 952; 1284; 1344; 1356; 1386; 1403; 1404; 1405 ⦖);
    1407 :≡ (Const 268435297,[],NONE);
    1408 :≡
    (Add,[1407; 1406],SOME ⦕ 952; 1284; 1344; 1356; 1386; 1403; 1406; 1407 ⦖);
    makespace 19 ⦕ 952; 1284; 1344; 1356; 1386; 1403; 1408 ⦖;
    1409 :≡ (WordFromInt,[1408],NONE);
    1410 :≡ (Cons 3,[1409],NONE);
    1411 :≡ (Cons 0,[],NONE);
    1412 :≡ (Const 118,[],NONE);
    1413 :≡ (Cons 0,[1412; 1411],NONE);
    1414 :≡ (Cons 2,[1413],NONE);
    1415 :≡ (Cons 3,[1414; 1410],NONE);
    1416 :≡ (Cons 4,[1415; 1403],NONE);
    1417 :≡ (Cons 3,[1416; 1386],NONE);
    1418 :≡ (Const 255,[],NONE);
    1419 :≡ (Const 268435457,[],NONE);
    1420 :≡
    (Mult,[1419; 1418],SOME ⦕ 952; 1284; 1344; 1356; 1417; 1418; 1419 ⦖);
    1421 :≡ (Const 268434929,[],NONE);
    1422 :≡ (Add,[1421; 1420],SOME ⦕ 952; 1284; 1344; 1356; 1417; 1420; 1421 ⦖);
    1423 :≡ (Const 268435457,[],NONE);
    1424 :≡
    (Mult,[1423; 1422],SOME ⦕ 952; 1284; 1344; 1356; 1417; 1422; 1423 ⦖);
    1425 :≡ (Const 272,[],NONE);
    1426 :≡ (Add,[1425; 1424],SOME ⦕ 952; 1284; 1344; 1356; 1417; 1424; 1425 ⦖);
    makespace 8 ⦕ 952; 1284; 1344; 1356; 1417; 1426 ⦖;
    1427 :≡ (WordFromInt,[1426],NONE);
    1428 :≡ (Cons 3,[1427],NONE);
    1429 :≡ (Cons 3,[1428; 1417],NONE);
    1430 :≡ (Const 159,[],NONE);
    1431 :≡ (Const 268435457,[],NONE);
    1432 :≡
    (Mult,[1431; 1430],SOME ⦕ 952; 1284; 1344; 1356; 1429; 1430; 1431 ⦖);
    1433 :≡ (Const 268435297,[],NONE);
    1434 :≡ (Add,[1433; 1432],SOME ⦕ 952; 1284; 1344; 1356; 1429; 1432; 1433 ⦖);
    makespace 28 ⦕ 952; 1284; 1344; 1356; 1429; 1434 ⦖;
    1435 :≡ (WordFromInt,[1434],NONE);
    1436 :≡ (Cons 3,[1435],NONE);
    1437 :≡ (Cons 0,[],NONE);
    1438 :≡ (Const 116,[],NONE);
    1439 :≡ (Cons 0,[1438; 1437],NONE);
    1440 :≡ (Const 115,[],NONE);
    1441 :≡ (Cons 0,[1440; 1439],NONE);
    1442 :≡ (Const 111,[],NONE);
    1443 :≡ (Cons 0,[1442; 1441],NONE);
    1444 :≡ (Const 112,[],NONE);
    1445 :≡ (Cons 0,[1444; 1443],NONE);
    1446 :≡ (Const 108,[],NONE);
    1447 :≡ (Cons 0,[1446; 1445],NONE);
    1448 :≡ (Const 118,[],NONE);
    1449 :≡ (Cons 0,[1448; 1447],NONE);
    1450 :≡ (Cons 2,[1449],NONE);
    1451 :≡ (Cons 3,[1450; 1436],NONE);
    1452 :≡ (Const 159,[],NONE);
    1453 :≡ (Const 268435457,[],NONE);
    1454 :≡
    (Mult,[1453; 1452],SOME ⦕ 952; 1284; 1344; 1356; 1429; 1451; 1452; 1453 ⦖);
    1455 :≡ (Const 268435297,[],NONE);
    1456 :≡
    (Add,[1455; 1454],SOME ⦕ 952; 1284; 1344; 1356; 1429; 1451; 1454; 1455 ⦖);
    makespace 50 ⦕ 952; 1284; 1344; 1356; 1429; 1451; 1456 ⦖;
    1457 :≡ (WordFromInt,[1456],NONE);
    1458 :≡ (Cons 3,[1457],NONE);
    1459 :≡ (Cons 0,[],NONE);
    1460 :≡ (Const 116,[],NONE);
    1461 :≡ (Cons 0,[1460; 1459],NONE);
    1462 :≡ (Const 115,[],NONE);
    1463 :≡ (Cons 0,[1462; 1461],NONE);
    1464 :≡ (Const 111,[],NONE);
    1465 :≡ (Cons 0,[1464; 1463],NONE);
    1466 :≡ (Const 112,[],NONE);
    1467 :≡ (Cons 0,[1466; 1465],NONE);
    1468 :≡ (Const 108,[],NONE);
    1469 :≡ (Cons 0,[1468; 1467],NONE);
    1470 :≡ (Const 118,[],NONE);
    1471 :≡ (Cons 0,[1470; 1469],NONE);
    1472 :≡ (Cons 2,[1471],NONE);
    1473 :≡ (Cons 3,[1472; 1458],NONE);
    1474 :≡ (Cons 3,[1473; 1451],NONE);
    1475 :≡ (Cons 4,[1474; 1429],NONE);
    1476 :≡ (Cons 2,[1475; 1356],NONE);
    1477 :≡ (Cons 0,[],NONE);
    1478 :≡ (Const 84,[],NONE);
    1479 :≡ (Cons 0,[1478; 1477],NONE);
    1480 :≡ (Cons 2,[1479],NONE);
    1481 :≡ (Cons 0,[],NONE);
    1482 :≡ (Const 84,[],NONE);
    1483 :≡ (Cons 0,[1482; 1481],NONE);
    1484 :≡ (Cons 2,[1483],NONE);
    1485 :≡ (Cons 3,[1484; 1480],NONE);
    1486 :≡ (Const 31,[],NONE);
    1487 :≡ (Const 268435457,[],NONE);
    1488 :≡
    (Mult,[1487; 1486],SOME ⦕ 952; 1284; 1344; 1476; 1485; 1486; 1487 ⦖);
    1489 :≡ (Const 268435425,[],NONE);
    1490 :≡ (Add,[1489; 1488],SOME ⦕ 952; 1284; 1344; 1476; 1485; 1488; 1489 ⦖);
    makespace 28 ⦕ 952; 1284; 1344; 1476; 1485; 1490 ⦖;
    1491 :≡ (WordFromInt,[1490],NONE);
    1492 :≡ (Cons 3,[1491],NONE);
    1493 :≡ (Cons 0,[],NONE);
    1494 :≡ (Const 116,[],NONE);
    1495 :≡ (Cons 0,[1494; 1493],NONE);
    1496 :≡ (Const 115,[],NONE);
    1497 :≡ (Cons 0,[1496; 1495],NONE);
    1498 :≡ (Const 111,[],NONE);
    1499 :≡ (Cons 0,[1498; 1497],NONE);
    1500 :≡ (Const 112,[],NONE);
    1501 :≡ (Cons 0,[1500; 1499],NONE);
    1502 :≡ (Const 97,[],NONE);
    1503 :≡ (Cons 0,[1502; 1501],NONE);
    1504 :≡ (Cons 2,[1503],NONE);
    1505 :≡ (Cons 2,[1504; 1492],NONE);
    1506 :≡ (Cons 3,[1505; 1485],NONE);
    1507 :≡ (Const 159,[],NONE);
    1508 :≡ (Const 268435457,[],NONE);
    1509 :≡
    (Mult,[1508; 1507],SOME ⦕ 952; 1284; 1344; 1476; 1506; 1507; 1508 ⦖);
    1510 :≡ (Const 268435297,[],NONE);
    1511 :≡ (Add,[1510; 1509],SOME ⦕ 952; 1284; 1344; 1476; 1506; 1509; 1510 ⦖);
    makespace 92 ⦕ 952; 1284; 1344; 1476; 1506; 1511 ⦖;
    1512 :≡ (WordFromInt,[1511],NONE);
    1513 :≡ (Cons 3,[1512],NONE);
    1514 :≡ (Cons 0,[],NONE);
    1515 :≡ (Const 84,[],NONE);
    1516 :≡ (Cons 0,[1515; 1514],NONE);
    1517 :≡ (Cons 2,[1516],NONE);
    1518 :≡ (Cons 0,[],NONE);
    1519 :≡ (Const 118,[],NONE);
    1520 :≡ (Cons 0,[1519; 1518],NONE);
    1521 :≡ (Cons 2,[1520],NONE);
    1522 :≡ (Cons 3,[1521; 1517],NONE);
    1523 :≡ (Cons 3,[1522; 1513],NONE);
    1524 :≡ (Cons 4,[1523; 1506],NONE);
    1525 :≡ (Cons 4,[1524; 1476],NONE);
    1526 :≡ (Cons 0,[],NONE);
    1527 :≡ (Const 116,[],NONE);
    1528 :≡ (Cons 0,[1527; 1526],NONE);
    1529 :≡ (Const 115,[],NONE);
    1530 :≡ (Cons 0,[1529; 1528],NONE);
    1531 :≡ (Const 111,[],NONE);
    1532 :≡ (Cons 0,[1531; 1530],NONE);
    1533 :≡ (Const 112,[],NONE);
    1534 :≡ (Cons 0,[1533; 1532],NONE);
    1535 :≡ (Const 107,[],NONE);
    1536 :≡ (Cons 0,[1535; 1534],NONE);
    1537 :≡ (Cons 2,[1536],NONE);
    1538 :≡ (Cons 0,[],NONE);
    1539 :≡ (Const 116,[],NONE);
    1540 :≡ (Cons 0,[1539; 1538],NONE);
    1541 :≡ (Const 115,[],NONE);
    1542 :≡ (Cons 0,[1541; 1540],NONE);
    1543 :≡ (Const 111,[],NONE);
    1544 :≡ (Cons 0,[1543; 1542],NONE);
    1545 :≡ (Const 112,[],NONE);
    1546 :≡ (Cons 0,[1545; 1544],NONE);
    1547 :≡ (Const 107,[],NONE);
    1548 :≡ (Cons 0,[1547; 1546],NONE);
    1549 :≡ (Cons 2,[1548],NONE);
    1550 :≡ (Cons 3,[1549; 1537],NONE);
    1551 :≡ (Cons 0,[],NONE);
    1552 :≡ (Const 115,[],NONE);
    1553 :≡ (Cons 0,[1552; 1551],NONE);
    1554 :≡ (Const 112,[],NONE);
    1555 :≡ (Cons 0,[1554; 1553],NONE);
    1556 :≡ (Const 101,[],NONE);
    1557 :≡ (Cons 0,[1556; 1555],NONE);
    1558 :≡ (Cons 2,[1557],NONE);
    1559 :≡ (Cons 0,[],NONE);
    1560 :≡ (Const 115,[],NONE);
    1561 :≡ (Cons 0,[1560; 1559],NONE);
    1562 :≡ (Const 112,[],NONE);
    1563 :≡ (Cons 0,[1562; 1561],NONE);
    1564 :≡ (Const 101,[],NONE);
    1565 :≡ (Cons 0,[1564; 1563],NONE);
    1566 :≡ (Cons 2,[1565],NONE);
    1567 :≡ (Cons 3,[1566; 1558],NONE);
    1568 :≡ (Cons 3,[1567; 1550],NONE);
    1569 :≡ (Const 1599,[],NONE);
    1570 :≡ (Const 268435457,[],NONE);
    1571 :≡
    (Mult,[1570; 1569],SOME ⦕ 952; 1284; 1344; 1525; 1568; 1569; 1570 ⦖);
    1572 :≡ (Const 268433857,[],NONE);
    1573 :≡ (Add,[1572; 1571],SOME ⦕ 952; 1284; 1344; 1525; 1568; 1571; 1572 ⦖);
    makespace 35 ⦕ 952; 1284; 1344; 1525; 1568; 1573 ⦖;
    1574 :≡ (WordFromInt,[1573],NONE);
    1575 :≡ (Cons 3,[1574],NONE);
    1576 :≡ (Cons 0,[],NONE);
    1577 :≡ (Const 116,[],NONE);
    1578 :≡ (Cons 0,[1577; 1576],NONE);
    1579 :≡ (Const 115,[],NONE);
    1580 :≡ (Cons 0,[1579; 1578],NONE);
    1581 :≡ (Const 111,[],NONE);
    1582 :≡ (Cons 0,[1581; 1580],NONE);
    1583 :≡ (Const 112,[],NONE);
    1584 :≡ (Cons 0,[1583; 1582],NONE);
    1585 :≡ (Const 107,[],NONE);
    1586 :≡ (Cons 0,[1585; 1584],NONE);
    1587 :≡ (Cons 2,[1586],NONE);
    1588 :≡ (Cons 0,[1587],NONE);
    1589 :≡ (Cons 0,[],NONE);
    1590 :≡ (Const 115,[],NONE);
    1591 :≡ (Cons 0,[1590; 1589],NONE);
    1592 :≡ (Const 112,[],NONE);
    1593 :≡ (Cons 0,[1592; 1591],NONE);
    1594 :≡ (Const 101,[],NONE);
    1595 :≡ (Cons 0,[1594; 1593],NONE);
    1596 :≡ (Cons 2,[1595],NONE);
    1597 :≡ (Const 31,[],NONE);
    1598 :≡ (Const 268435457,[],NONE);
    1599 :≡
    (Mult,[1598; 1597],
     SOME ⦕ 952; 1284; 1344; 1525; 1568; 1575; 1588; 1596; 1597; 1598 ⦖);
    1600 :≡ (Const 268435425,[],NONE);
    1601 :≡
    (Add,[1600; 1599],
     SOME ⦕ 952; 1284; 1344; 1525; 1568; 1575; 1588; 1596; 1599; 1600 ⦖);
    makespace 14 ⦕ 952; 1284; 1344; 1525; 1568; 1575; 1588; 1596; 1601 ⦖;
    1602 :≡ (WordFromInt,[1601],NONE);
    1603 :≡ (Cons 3,[1602],NONE);
    1604 :≡ (Cons 3,[1603; 1596],NONE);
    1605 :≡ (Cons 3,[1604; 1588],NONE);
    1606 :≡ (Cons 3,[1605; 1575],NONE);
    1607 :≡ (Const 159999,[],NONE);
    1608 :≡ (Const 268435457,[],NONE);
    1609 :≡
    (Mult,[1608; 1607],SOME ⦕ 952; 1284; 1344; 1525; 1568; 1606; 1607; 1608 ⦖);
    1610 :≡ (Const 268275457,[],NONE);
    1611 :≡
    (Add,[1610; 1609],SOME ⦕ 952; 1284; 1344; 1525; 1568; 1606; 1609; 1610 ⦖);
    makespace 51 ⦕ 952; 1284; 1344; 1525; 1568; 1606; 1611 ⦖;
    1612 :≡ (WordFromInt,[1611],NONE);
    1613 :≡ (Cons 3,[1612],NONE);
    1614 :≡ (Cons 4,[1613; 1606],NONE);
    1615 :≡ (Cons 4,[1614; 1568],NONE);
    1616 :≡ (Cons 3,[1615; 1525],NONE);
    1617 :≡ (Cons 3,[1616; 1344],NONE);
    1618 :≡ (Cons 0,[1617; 1284],NONE);
    1619 :≡ (Cons 0,[],NONE);
    1620 :≡ (Const 116,[],NONE);
    1621 :≡ (Cons 0,[1620; 1619],NONE);
    1622 :≡ (Const 115,[],NONE);
    1623 :≡ (Cons 0,[1622; 1621],NONE);
    1624 :≡ (Const 111,[],NONE);
    1625 :≡ (Cons 0,[1624; 1623],NONE);
    1626 :≡ (Const 112,[],NONE);
    1627 :≡ (Cons 0,[1626; 1625],NONE);
    1628 :≡ (Const 97,[],NONE);
    1629 :≡ (Cons 0,[1628; 1627],NONE);
    1630 :≡ (Cons 2,[1629],NONE);
    1631 :≡ (Const 0,[],NONE);
    1632 :≡ (WordFromInt,[1631],NONE);
    1633 :≡ (Cons 3,[1632],NONE);
    1634 :≡ (Cons 3,[1633; 1630],NONE);
    1635 :≡ (Cons 1,[1634; 1618],NONE);
    1636 :≡ (Cons 0,[1635; 952],NONE);
    return 1636
  od

bvi_aux_1 [] =
  do
    0 :≡ (Const 1599,[],NONE);
    1 :≡ (Const 268435457,[],NONE);
    2 :≡ (Mult,[1; 0],SOME ⦕ 0; 1 ⦖);
    3 :≡ (Const 268433857,[],NONE);
    4 :≡ (Add,[3; 2],SOME ⦕ 2; 3 ⦖);
    makespace 5 ⦕ 4 ⦖;
    5 :≡ (WordFromInt,[4],NONE);
    6 :≡ (Cons 3,[5],NONE);
    7 :≡ (Const 159999,[],NONE);
    8 :≡ (Const 268435457,[],NONE);
    9 :≡ (Mult,[8; 7],SOME ⦕ 6; 7; 8 ⦖);
    10 :≡ (Const 268275457,[],NONE);
    11 :≡ (Add,[10; 9],SOME ⦕ 6; 9; 10 ⦖);
    makespace 16 ⦕ 6; 11 ⦖;
    12 :≡ (WordFromInt,[11],NONE);
    13 :≡ (Cons 3,[12],NONE);
    14 :≡ (Cons 0,[],NONE);
    15 :≡ (Const 115,[],NONE);
    16 :≡ (Cons 0,[15; 14],NONE);
    17 :≡ (Const 112,[],NONE);
    18 :≡ (Cons 0,[17; 16],NONE);
    19 :≡ (Const 101,[],NONE);
    20 :≡ (Cons 0,[19; 18],NONE);
    21 :≡ (Cons 2,[20],NONE);
    22 :≡ (Const 159,[],NONE);
    23 :≡ (Const 268435457,[],NONE);
    24 :≡ (Mult,[23; 22],SOME ⦕ 6; 13; 21; 22; 23 ⦖);
    25 :≡ (Const 268435297,[],NONE);
    26 :≡ (Add,[25; 24],SOME ⦕ 6; 13; 21; 24; 25 ⦖);
    makespace 8 ⦕ 6; 13; 21; 26 ⦖;
    27 :≡ (WordFromInt,[26],NONE);
    28 :≡ (Cons 3,[27],NONE);
    29 :≡ (Cons 3,[28; 21],NONE);
    30 :≡ (Const 255,[],NONE);
    31 :≡ (Const 268435457,[],NONE);
    32 :≡ (Mult,[31; 30],SOME ⦕ 6; 13; 29; 30; 31 ⦖);
    33 :≡ (Const 268434929,[],NONE);
    34 :≡ (Add,[33; 32],SOME ⦕ 6; 13; 29; 32; 33 ⦖);
    35 :≡ (Const 268435457,[],NONE);
    36 :≡ (Mult,[35; 34],SOME ⦕ 6; 13; 29; 34; 35 ⦖);
    37 :≡ (Const 272,[],NONE);
    38 :≡ (Add,[37; 36],SOME ⦕ 6; 13; 29; 36; 37 ⦖);
    makespace 42 ⦕ 6; 13; 29; 38 ⦖;
    39 :≡ (WordFromInt,[38],NONE);
    40 :≡ (Cons 3,[39],NONE);
    41 :≡ (Cons 3,[40; 29],NONE);
    42 :≡ (Cons 0,[],NONE);
    43 :≡ (Const 116,[],NONE);
    44 :≡ (Cons 0,[43; 42],NONE);
    45 :≡ (Const 115,[],NONE);
    46 :≡ (Cons 0,[45; 44],NONE);
    47 :≡ (Const 111,[],NONE);
    48 :≡ (Cons 0,[47; 46],NONE);
    49 :≡ (Const 112,[],NONE);
    50 :≡ (Cons 0,[49; 48],NONE);
    51 :≡ (Const 103,[],NONE);
    52 :≡ (Cons 0,[51; 50],NONE);
    53 :≡ (Const 121,[],NONE);
    54 :≡ (Cons 0,[53; 52],NONE);
    55 :≡ (Cons 2,[54],NONE);
    56 :≡ (Cons 4,[55; 41],NONE);
    57 :≡ (Cons 3,[56; 13],NONE);
    58 :≡ (Cons 3,[57; 6],NONE);
    59 :≡ (Cons 0,[],NONE);
    60 :≡ (Const 66,[],NONE);
    61 :≡ (Cons 0,[60; 59],NONE);
    62 :≡ (Cons 2,[61],NONE);
    63 :≡ (Const 31,[],NONE);
    64 :≡ (Const 268435457,[],NONE);
    65 :≡ (Mult,[64; 63],SOME ⦕ 58; 62; 63; 64 ⦖);
    66 :≡ (Const 268435425,[],NONE);
    67 :≡ (Add,[66; 65],SOME ⦕ 58; 62; 65; 66 ⦖);
    makespace 28 ⦕ 58; 62; 67 ⦖;
    68 :≡ (WordFromInt,[67],NONE);
    69 :≡ (Cons 3,[68],NONE);
    70 :≡ (Cons 3,[69; 62],NONE);
    71 :≡ (Cons 0,[],NONE);
    72 :≡ (Const 116,[],NONE);
    73 :≡ (Cons 0,[72; 71],NONE);
    74 :≡ (Const 115,[],NONE);
    75 :≡ (Cons 0,[74; 73],NONE);
    76 :≡ (Const 111,[],NONE);
    77 :≡ (Cons 0,[76; 75],NONE);
    78 :≡ (Const 112,[],NONE);
    79 :≡ (Cons 0,[78; 77],NONE);
    80 :≡ (Const 104,[],NONE);
    81 :≡ (Cons 0,[80; 79],NONE);
    82 :≡ (Const 118,[],NONE);
    83 :≡ (Cons 0,[82; 81],NONE);
    84 :≡ (Cons 2,[83],NONE);
    85 :≡ (Const 159,[],NONE);
    86 :≡ (Const 268435457,[],NONE);
    87 :≡ (Mult,[86; 85],SOME ⦕ 58; 70; 84; 85; 86 ⦖);
    88 :≡ (Const 268435297,[],NONE);
    89 :≡ (Add,[88; 87],SOME ⦕ 58; 70; 84; 87; 88 ⦖);
    makespace 28 ⦕ 58; 70; 84; 89 ⦖;
    90 :≡ (WordFromInt,[89],NONE);
    91 :≡ (Cons 3,[90],NONE);
    92 :≡ (Cons 3,[91; 84],NONE);
    93 :≡ (Cons 0,[],NONE);
    94 :≡ (Const 116,[],NONE);
    95 :≡ (Cons 0,[94; 93],NONE);
    96 :≡ (Const 115,[],NONE);
    97 :≡ (Cons 0,[96; 95],NONE);
    98 :≡ (Const 111,[],NONE);
    99 :≡ (Cons 0,[98; 97],NONE);
    100 :≡ (Const 112,[],NONE);
    101 :≡ (Cons 0,[100; 99],NONE);
    102 :≡ (Const 104,[],NONE);
    103 :≡ (Cons 0,[102; 101],NONE);
    104 :≡ (Const 118,[],NONE);
    105 :≡ (Cons 0,[104; 103],NONE);
    106 :≡ (Cons 2,[105],NONE);
    107 :≡ (Const 159,[],NONE);
    108 :≡ (Const 268435457,[],NONE);
    109 :≡ (Mult,[108; 107],SOME ⦕ 58; 70; 92; 106; 107; 108 ⦖);
    110 :≡ (Const 268435297,[],NONE);
    111 :≡ (Add,[110; 109],SOME ⦕ 58; 70; 92; 106; 109; 110 ⦖);
    makespace 11 ⦕ 58; 70; 92; 106; 111 ⦖;
    112 :≡ (WordFromInt,[111],NONE);
    113 :≡ (Cons 3,[112],NONE);
    114 :≡ (Cons 3,[113; 106],NONE);
    115 :≡ (Cons 3,[114; 92],NONE);
    116 :≡ (Const 255,[],NONE);
    117 :≡ (Const 268435457,[],NONE);
    118 :≡ (Mult,[117; 116],SOME ⦕ 58; 70; 115; 116; 117 ⦖);
    119 :≡ (Const 268434929,[],NONE);
    120 :≡ (Add,[119; 118],SOME ⦕ 58; 70; 115; 118; 119 ⦖);
    121 :≡ (Const 268435457,[],NONE);
    122 :≡ (Mult,[121; 120],SOME ⦕ 58; 70; 115; 120; 121 ⦖);
    123 :≡ (Const 272,[],NONE);
    124 :≡ (Add,[123; 122],SOME ⦕ 58; 70; 115; 122; 123 ⦖);
    makespace 35 ⦕ 58; 70; 115; 124 ⦖;
    125 :≡ (WordFromInt,[124],NONE);
    126 :≡ (Cons 3,[125],NONE);
    127 :≡ (Cons 3,[126; 115],NONE);
    128 :≡ (Cons 0,[],NONE);
    129 :≡ (Const 116,[],NONE);
    130 :≡ (Cons 0,[129; 128],NONE);
    131 :≡ (Const 115,[],NONE);
    132 :≡ (Cons 0,[131; 130],NONE);
    133 :≡ (Const 111,[],NONE);
    134 :≡ (Cons 0,[133; 132],NONE);
    135 :≡ (Const 112,[],NONE);
    136 :≡ (Cons 0,[135; 134],NONE);
    137 :≡ (Const 97,[],NONE);
    138 :≡ (Cons 0,[137; 136],NONE);
    139 :≡ (Cons 2,[138],NONE);
    140 :≡ (Cons 1,[139],NONE);
    141 :≡ (Cons 0,[],NONE);
    142 :≡ (Const 118,[],NONE);
    143 :≡ (Cons 0,[142; 141],NONE);
    144 :≡ (Cons 2,[143],NONE);
    145 :≡ (Cons 2,[144; 140],NONE);
    146 :≡ (Const 159,[],NONE);
    147 :≡ (Const 268435457,[],NONE);
    148 :≡ (Mult,[147; 146],SOME ⦕ 58; 70; 127; 145; 146; 147 ⦖);
    149 :≡ (Const 268435297,[],NONE);
    150 :≡ (Add,[149; 148],SOME ⦕ 58; 70; 127; 145; 148; 149 ⦖);
    makespace 36 ⦕ 58; 70; 127; 145; 150 ⦖;
    151 :≡ (WordFromInt,[150],NONE);
    152 :≡ (Cons 3,[151],NONE);
    153 :≡ (Cons 3,[152; 145],NONE);
    154 :≡ (Cons 0,[],NONE);
    155 :≡ (Const 84,[],NONE);
    156 :≡ (Cons 0,[155; 154],NONE);
    157 :≡ (Cons 2,[156],NONE);
    158 :≡ (Cons 0,[157; 153],NONE);
    159 :≡ (Cons 0,[],NONE);
    160 :≡ (Const 116,[],NONE);
    161 :≡ (Cons 0,[160; 159],NONE);
    162 :≡ (Const 115,[],NONE);
    163 :≡ (Cons 0,[162; 161],NONE);
    164 :≡ (Const 111,[],NONE);
    165 :≡ (Cons 0,[164; 163],NONE);
    166 :≡ (Const 112,[],NONE);
    167 :≡ (Cons 0,[166; 165],NONE);
    168 :≡ (Const 97,[],NONE);
    169 :≡ (Cons 0,[168; 167],NONE);
    170 :≡ (Cons 2,[169],NONE);
    171 :≡ (Cons 3,[170; 158],NONE);
    172 :≡ (Const 159,[],NONE);
    173 :≡ (Const 268435457,[],NONE);
    174 :≡ (Mult,[173; 172],SOME ⦕ 58; 70; 127; 171; 172; 173 ⦖);
    175 :≡ (Const 268435297,[],NONE);
    176 :≡ (Add,[175; 174],SOME ⦕ 58; 70; 127; 171; 174; 175 ⦖);
    makespace 43 ⦕ 58; 70; 127; 171; 176 ⦖;
    177 :≡ (WordFromInt,[176],NONE);
    178 :≡ (Cons 3,[177],NONE);
    179 :≡ (Cons 0,[],NONE);
    180 :≡ (Const 118,[],NONE);
    181 :≡ (Cons 0,[180; 179],NONE);
    182 :≡ (Cons 2,[181],NONE);
    183 :≡ (Cons 3,[182; 178],NONE);
    184 :≡ (Cons 4,[183; 171],NONE);
    185 :≡ (Cons 0,[],NONE);
    186 :≡ (Const 116,[],NONE);
    187 :≡ (Cons 0,[186; 185],NONE);
    188 :≡ (Const 115,[],NONE);
    189 :≡ (Cons 0,[188; 187],NONE);
    190 :≡ (Const 111,[],NONE);
    191 :≡ (Cons 0,[190; 189],NONE);
    192 :≡ (Const 112,[],NONE);
    193 :≡ (Cons 0,[192; 191],NONE);
    194 :≡ (Const 97,[],NONE);
    195 :≡ (Cons 0,[194; 193],NONE);
    196 :≡ (Cons 2,[195],NONE);
    197 :≡ (Cons 1,[196],NONE);
    198 :≡ (Cons 0,[],NONE);
    199 :≡ (Const 118,[],NONE);
    200 :≡ (Cons 0,[199; 198],NONE);
    201 :≡ (Cons 2,[200],NONE);
    202 :≡ (Cons 2,[201; 197],NONE);
    203 :≡ (Const 159,[],NONE);
    204 :≡ (Const 268435457,[],NONE);
    205 :≡ (Mult,[204; 203],SOME ⦕ 58; 70; 127; 184; 202; 203; 204 ⦖);
    206 :≡ (Const 268435297,[],NONE);
    207 :≡ (Add,[206; 205],SOME ⦕ 58; 70; 127; 184; 202; 205; 206 ⦖);
    makespace 36 ⦕ 58; 70; 127; 184; 202; 207 ⦖;
    208 :≡ (WordFromInt,[207],NONE);
    209 :≡ (Cons 3,[208],NONE);
    210 :≡ (Cons 3,[209; 202],NONE);
    211 :≡ (Cons 0,[],NONE);
    212 :≡ (Const 84,[],NONE);
    213 :≡ (Cons 0,[212; 211],NONE);
    214 :≡ (Cons 2,[213],NONE);
    215 :≡ (Cons 0,[214; 210],NONE);
    216 :≡ (Cons 0,[],NONE);
    217 :≡ (Const 116,[],NONE);
    218 :≡ (Cons 0,[217; 216],NONE);
    219 :≡ (Const 115,[],NONE);
    220 :≡ (Cons 0,[219; 218],NONE);
    221 :≡ (Const 111,[],NONE);
    222 :≡ (Cons 0,[221; 220],NONE);
    223 :≡ (Const 112,[],NONE);
    224 :≡ (Cons 0,[223; 222],NONE);
    225 :≡ (Const 97,[],NONE);
    226 :≡ (Cons 0,[225; 224],NONE);
    227 :≡ (Cons 2,[226],NONE);
    228 :≡ (Cons 3,[227; 215],NONE);
    229 :≡ (Const 159,[],NONE);
    230 :≡ (Const 268435457,[],NONE);
    231 :≡ (Mult,[230; 229],SOME ⦕ 58; 70; 127; 184; 228; 229; 230 ⦖);
    232 :≡ (Const 268435297,[],NONE);
    233 :≡ (Add,[232; 231],SOME ⦕ 58; 70; 127; 184; 228; 231; 232 ⦖);
    makespace 52 ⦕ 58; 70; 127; 184; 228; 233 ⦖;
    234 :≡ (WordFromInt,[233],NONE);
    235 :≡ (Cons 3,[234],NONE);
    236 :≡ (Cons 0,[],NONE);
    237 :≡ (Const 118,[],NONE);
    238 :≡ (Cons 0,[237; 236],NONE);
    239 :≡ (Cons 2,[238],NONE);
    240 :≡ (Cons 3,[239; 235],NONE);
    241 :≡ (Cons 4,[240; 228],NONE);
    242 :≡ (Cons 3,[241; 184],NONE);
    243 :≡ (Cons 4,[242; 127],NONE);
    244 :≡ (Cons 2,[243; 70],NONE);
    245 :≡ (Cons 0,[],NONE);
    246 :≡ (Const 116,[],NONE);
    247 :≡ (Cons 0,[246; 245],NONE);
    248 :≡ (Const 115,[],NONE);
    249 :≡ (Cons 0,[248; 247],NONE);
    250 :≡ (Const 111,[],NONE);
    251 :≡ (Cons 0,[250; 249],NONE);
    252 :≡ (Const 112,[],NONE);
    253 :≡ (Cons 0,[252; 251],NONE);
    254 :≡ (Const 97,[],NONE);
    255 :≡ (Cons 0,[254; 253],NONE);
    256 :≡ (Cons 2,[255],NONE);
    257 :≡ (Cons 1,[256],NONE);
    258 :≡ (Cons 0,[],NONE);
    259 :≡ (Const 118,[],NONE);
    260 :≡ (Cons 0,[259; 258],NONE);
    261 :≡ (Cons 2,[260],NONE);
    262 :≡ (Cons 2,[261; 257],NONE);
    263 :≡ (Const 159,[],NONE);
    264 :≡ (Const 268435457,[],NONE);
    265 :≡ (Mult,[264; 263],SOME ⦕ 58; 244; 262; 263; 264 ⦖);
    266 :≡ (Const 268435297,[],NONE);
    267 :≡ (Add,[266; 265],SOME ⦕ 58; 244; 262; 265; 266 ⦖);
    makespace 43 ⦕ 58; 244; 262; 267 ⦖;
    268 :≡ (WordFromInt,[267],NONE);
    269 :≡ (Cons 3,[268],NONE);
    270 :≡ (Cons 3,[269; 262],NONE);
    271 :≡ (Cons 0,[],NONE);
    272 :≡ (Const 84,[],NONE);
    273 :≡ (Cons 0,[272; 271],NONE);
    274 :≡ (Cons 2,[273],NONE);
    275 :≡ (Cons 0,[274; 270],NONE);
    276 :≡ (Cons 0,[],NONE);
    277 :≡ (Const 116,[],NONE);
    278 :≡ (Cons 0,[277; 276],NONE);
    279 :≡ (Const 115,[],NONE);
    280 :≡ (Cons 0,[279; 278],NONE);
    281 :≡ (Const 111,[],NONE);
    282 :≡ (Cons 0,[281; 280],NONE);
    283 :≡ (Const 112,[],NONE);
    284 :≡ (Cons 0,[283; 282],NONE);
    285 :≡ (Const 97,[],NONE);
    286 :≡ (Cons 0,[285; 284],NONE);
    287 :≡ (Cons 2,[286],NONE);
    288 :≡ (Cons 1,[287],NONE);
    289 :≡ (Cons 0,[],NONE);
    290 :≡ (Const 118,[],NONE);
    291 :≡ (Cons 0,[290; 289],NONE);
    292 :≡ (Cons 2,[291],NONE);
    293 :≡ (Cons 2,[292; 288],NONE);
    294 :≡ (Const 159,[],NONE);
    295 :≡ (Const 268435457,[],NONE);
    296 :≡ (Mult,[295; 294],SOME ⦕ 58; 244; 275; 293; 294; 295 ⦖);
    297 :≡ (Const 268435297,[],NONE);
    298 :≡ (Add,[297; 296],SOME ⦕ 58; 244; 275; 293; 296; 297 ⦖);
    makespace 19 ⦕ 58; 244; 275; 293; 298 ⦖;
    299 :≡ (WordFromInt,[298],NONE);
    300 :≡ (Cons 3,[299],NONE);
    301 :≡ (Cons 3,[300; 293],NONE);
    302 :≡ (Cons 0,[],NONE);
    303 :≡ (Const 84,[],NONE);
    304 :≡ (Cons 0,[303; 302],NONE);
    305 :≡ (Cons 2,[304],NONE);
    306 :≡ (Cons 0,[305; 301],NONE);
    307 :≡ (Cons 3,[306; 275],NONE);
    308 :≡ (Const 31,[],NONE);
    309 :≡ (Const 268435457,[],NONE);
    310 :≡ (Mult,[309; 308],SOME ⦕ 58; 244; 307; 308; 309 ⦖);
    311 :≡ (Const 268435425,[],NONE);
    312 :≡ (Add,[311; 310],SOME ⦕ 58; 244; 307; 310; 311 ⦖);
    makespace 55 ⦕ 58; 244; 307; 312 ⦖;
    313 :≡ (WordFromInt,[312],NONE);
    314 :≡ (Cons 3,[313],NONE);
    315 :≡ (Cons 0,[],NONE);
    316 :≡ (Const 116,[],NONE);
    317 :≡ (Cons 0,[316; 315],NONE);
    318 :≡ (Const 115,[],NONE);
    319 :≡ (Cons 0,[318; 317],NONE);
    320 :≡ (Const 111,[],NONE);
    321 :≡ (Cons 0,[320; 319],NONE);
    322 :≡ (Const 112,[],NONE);
    323 :≡ (Cons 0,[322; 321],NONE);
    324 :≡ (Const 97,[],NONE);
    325 :≡ (Cons 0,[324; 323],NONE);
    326 :≡ (Cons 2,[325],NONE);
    327 :≡ (Cons 2,[326; 314],NONE);
    328 :≡ (Cons 3,[327; 307],NONE);
    329 :≡ (Cons 0,[],NONE);
    330 :≡ (Const 116,[],NONE);
    331 :≡ (Cons 0,[330; 329],NONE);
    332 :≡ (Const 115,[],NONE);
    333 :≡ (Cons 0,[332; 331],NONE);
    334 :≡ (Const 111,[],NONE);
    335 :≡ (Cons 0,[334; 333],NONE);
    336 :≡ (Const 112,[],NONE);
    337 :≡ (Cons 0,[336; 335],NONE);
    338 :≡ (Const 97,[],NONE);
    339 :≡ (Cons 0,[338; 337],NONE);
    340 :≡ (Cons 2,[339],NONE);
    341 :≡ (Cons 1,[340],NONE);
    342 :≡ (Cons 0,[],NONE);
    343 :≡ (Const 118,[],NONE);
    344 :≡ (Cons 0,[343; 342],NONE);
    345 :≡ (Cons 2,[344],NONE);
    346 :≡ (Cons 2,[345; 341],NONE);
    347 :≡ (Const 159,[],NONE);
    348 :≡ (Const 268435457,[],NONE);
    349 :≡ (Mult,[348; 347],SOME ⦕ 58; 244; 328; 346; 347; 348 ⦖);
    350 :≡ (Const 268435297,[],NONE);
    351 :≡ (Add,[350; 349],SOME ⦕ 58; 244; 328; 346; 349; 350 ⦖);
    makespace 16 ⦕ 58; 244; 328; 346; 351 ⦖;
    352 :≡ (WordFromInt,[351],NONE);
    353 :≡ (Cons 3,[352],NONE);
    354 :≡ (Cons 3,[353; 346],NONE);
    355 :≡ (Cons 0,[],NONE);
    356 :≡ (Const 84,[],NONE);
    357 :≡ (Cons 0,[356; 355],NONE);
    358 :≡ (Cons 2,[357],NONE);
    359 :≡ (Cons 0,[358; 354],NONE);
    360 :≡ (Const 159,[],NONE);
    361 :≡ (Const 268435457,[],NONE);
    362 :≡ (Mult,[361; 360],SOME ⦕ 58; 244; 328; 359; 360; 361 ⦖);
    363 :≡ (Const 268435297,[],NONE);
    364 :≡ (Add,[363; 362],SOME ⦕ 58; 244; 328; 359; 362; 363 ⦖);
    makespace 87 ⦕ 58; 244; 328; 359; 364 ⦖;
    365 :≡ (WordFromInt,[364],NONE);
    366 :≡ (Cons 3,[365],NONE);
    367 :≡ (Cons 0,[],NONE);
    368 :≡ (Const 118,[],NONE);
    369 :≡ (Cons 0,[368; 367],NONE);
    370 :≡ (Cons 2,[369],NONE);
    371 :≡ (Cons 3,[370; 366],NONE);
    372 :≡ (Cons 3,[371; 359],NONE);
    373 :≡ (Cons 4,[372; 328],NONE);
    374 :≡ (Cons 4,[373; 244],NONE);
    375 :≡ (Cons 0,[],NONE);
    376 :≡ (Const 116,[],NONE);
    377 :≡ (Cons 0,[376; 375],NONE);
    378 :≡ (Const 115,[],NONE);
    379 :≡ (Cons 0,[378; 377],NONE);
    380 :≡ (Const 111,[],NONE);
    381 :≡ (Cons 0,[380; 379],NONE);
    382 :≡ (Const 112,[],NONE);
    383 :≡ (Cons 0,[382; 381],NONE);
    384 :≡ (Const 107,[],NONE);
    385 :≡ (Cons 0,[384; 383],NONE);
    386 :≡ (Cons 2,[385],NONE);
    387 :≡ (Cons 0,[],NONE);
    388 :≡ (Const 116,[],NONE);
    389 :≡ (Cons 0,[388; 387],NONE);
    390 :≡ (Const 115,[],NONE);
    391 :≡ (Cons 0,[390; 389],NONE);
    392 :≡ (Const 111,[],NONE);
    393 :≡ (Cons 0,[392; 391],NONE);
    394 :≡ (Const 112,[],NONE);
    395 :≡ (Cons 0,[394; 393],NONE);
    396 :≡ (Const 107,[],NONE);
    397 :≡ (Cons 0,[396; 395],NONE);
    398 :≡ (Cons 2,[397],NONE);
    399 :≡ (Cons 3,[398; 386],NONE);
    400 :≡ (Cons 0,[],NONE);
    401 :≡ (Const 115,[],NONE);
    402 :≡ (Cons 0,[401; 400],NONE);
    403 :≡ (Const 112,[],NONE);
    404 :≡ (Cons 0,[403; 402],NONE);
    405 :≡ (Const 101,[],NONE);
    406 :≡ (Cons 0,[405; 404],NONE);
    407 :≡ (Cons 2,[406],NONE);
    408 :≡ (Cons 0,[],NONE);
    409 :≡ (Const 115,[],NONE);
    410 :≡ (Cons 0,[409; 408],NONE);
    411 :≡ (Const 112,[],NONE);
    412 :≡ (Cons 0,[411; 410],NONE);
    413 :≡ (Const 101,[],NONE);
    414 :≡ (Cons 0,[413; 412],NONE);
    415 :≡ (Cons 2,[414],NONE);
    416 :≡ (Cons 3,[415; 407],NONE);
    417 :≡ (Cons 3,[416; 399],NONE);
    418 :≡ (Const 1599,[],NONE);
    419 :≡ (Const 268435457,[],NONE);
    420 :≡ (Mult,[419; 418],SOME ⦕ 58; 374; 417; 418; 419 ⦖);
    421 :≡ (Const 268433857,[],NONE);
    422 :≡ (Add,[421; 420],SOME ⦕ 58; 374; 417; 420; 421 ⦖);
    makespace 35 ⦕ 58; 374; 417; 422 ⦖;
    423 :≡ (WordFromInt,[422],NONE);
    424 :≡ (Cons 3,[423],NONE);
    425 :≡ (Cons 0,[],NONE);
    426 :≡ (Const 116,[],NONE);
    427 :≡ (Cons 0,[426; 425],NONE);
    428 :≡ (Const 115,[],NONE);
    429 :≡ (Cons 0,[428; 427],NONE);
    430 :≡ (Const 111,[],NONE);
    431 :≡ (Cons 0,[430; 429],NONE);
    432 :≡ (Const 112,[],NONE);
    433 :≡ (Cons 0,[432; 431],NONE);
    434 :≡ (Const 107,[],NONE);
    435 :≡ (Cons 0,[434; 433],NONE);
    436 :≡ (Cons 2,[435],NONE);
    437 :≡ (Cons 0,[436],NONE);
    438 :≡ (Cons 0,[],NONE);
    439 :≡ (Const 115,[],NONE);
    440 :≡ (Cons 0,[439; 438],NONE);
    441 :≡ (Const 112,[],NONE);
    442 :≡ (Cons 0,[441; 440],NONE);
    443 :≡ (Const 101,[],NONE);
    444 :≡ (Cons 0,[443; 442],NONE);
    445 :≡ (Cons 2,[444],NONE);
    446 :≡ (Const 31,[],NONE);
    447 :≡ (Const 268435457,[],NONE);
    448 :≡ (Mult,[447; 446],SOME ⦕ 58; 374; 417; 424; 437; 445; 446; 447 ⦖);
    449 :≡ (Const 268435425,[],NONE);
    450 :≡ (Add,[449; 448],SOME ⦕ 58; 374; 417; 424; 437; 445; 448; 449 ⦖);
    makespace 14 ⦕ 58; 374; 417; 424; 437; 445; 450 ⦖;
    451 :≡ (WordFromInt,[450],NONE);
    452 :≡ (Cons 3,[451],NONE);
    453 :≡ (Cons 3,[452; 445],NONE);
    454 :≡ (Cons 3,[453; 437],NONE);
    455 :≡ (Cons 3,[454; 424],NONE);
    456 :≡ (Const 1599,[],NONE);
    457 :≡ (Const 268435457,[],NONE);
    458 :≡ (Mult,[457; 456],SOME ⦕ 58; 374; 417; 455; 456; 457 ⦖);
    459 :≡ (Const 268433857,[],NONE);
    460 :≡ (Add,[459; 458],SOME ⦕ 58; 374; 417; 455; 458; 459 ⦖);
    makespace 17 ⦕ 58; 374; 417; 455; 460 ⦖;
    461 :≡ (WordFromInt,[460],NONE);
    462 :≡ (Cons 3,[461],NONE);
    463 :≡ (Cons 4,[462; 455],NONE);
    464 :≡ (Cons 4,[463; 417],NONE);
    465 :≡ (Cons 3,[464; 374],NONE);
    466 :≡ (Cons 3,[465; 58],NONE);
    467 :≡ (Const 1599,[],NONE);
    468 :≡ (Const 268435457,[],NONE);
    469 :≡ (Mult,[468; 467],SOME ⦕ 466; 467; 468 ⦖);
    470 :≡ (Const 268433857,[],NONE);
    471 :≡ (Add,[470; 469],SOME ⦕ 466; 469; 470 ⦖);
    makespace 5 ⦕ 466; 471 ⦖;
    472 :≡ (WordFromInt,[471],NONE);
    473 :≡ (Cons 3,[472],NONE);
    474 :≡ (Const 159999,[],NONE);
    475 :≡ (Const 268435457,[],NONE);
    476 :≡ (Mult,[475; 474],SOME ⦕ 466; 473; 474; 475 ⦖);
    477 :≡ (Const 268275457,[],NONE);
    478 :≡ (Add,[477; 476],SOME ⦕ 466; 473; 476; 477 ⦖);
    makespace 16 ⦕ 466; 473; 478 ⦖;
    479 :≡ (WordFromInt,[478],NONE);
    480 :≡ (Cons 3,[479],NONE);
    481 :≡ (Cons 0,[],NONE);
    482 :≡ (Const 115,[],NONE);
    483 :≡ (Cons 0,[482; 481],NONE);
    484 :≡ (Const 112,[],NONE);
    485 :≡ (Cons 0,[484; 483],NONE);
    486 :≡ (Const 101,[],NONE);
    487 :≡ (Cons 0,[486; 485],NONE);
    488 :≡ (Cons 2,[487],NONE);
    489 :≡ (Const 159,[],NONE);
    490 :≡ (Const 268435457,[],NONE);
    491 :≡ (Mult,[490; 489],SOME ⦕ 466; 473; 480; 488; 489; 490 ⦖);
    492 :≡ (Const 268435297,[],NONE);
    493 :≡ (Add,[492; 491],SOME ⦕ 466; 473; 480; 488; 491; 492 ⦖);
    makespace 8 ⦕ 466; 473; 480; 488; 493 ⦖;
    494 :≡ (WordFromInt,[493],NONE);
    495 :≡ (Cons 3,[494],NONE);
    496 :≡ (Cons 3,[495; 488],NONE);
    497 :≡ (Const 255,[],NONE);
    498 :≡ (Const 268435457,[],NONE);
    499 :≡ (Mult,[498; 497],SOME ⦕ 466; 473; 480; 496; 497; 498 ⦖);
    500 :≡ (Const 268434929,[],NONE);
    501 :≡ (Add,[500; 499],SOME ⦕ 466; 473; 480; 496; 499; 500 ⦖);
    502 :≡ (Const 268435457,[],NONE);
    503 :≡ (Mult,[502; 501],SOME ⦕ 466; 473; 480; 496; 501; 502 ⦖);
    504 :≡ (Const 272,[],NONE);
    505 :≡ (Add,[504; 503],SOME ⦕ 466; 473; 480; 496; 503; 504 ⦖);
    makespace 44 ⦕ 466; 473; 480; 496; 505 ⦖;
    506 :≡ (WordFromInt,[505],NONE);
    507 :≡ (Cons 3,[506],NONE);
    508 :≡ (Cons 3,[507; 496],NONE);
    509 :≡ (Cons 0,[],NONE);
    510 :≡ (Const 116,[],NONE);
    511 :≡ (Cons 0,[510; 509],NONE);
    512 :≡ (Const 115,[],NONE);
    513 :≡ (Cons 0,[512; 511],NONE);
    514 :≡ (Const 111,[],NONE);
    515 :≡ (Cons 0,[514; 513],NONE);
    516 :≡ (Const 112,[],NONE);
    517 :≡ (Cons 0,[516; 515],NONE);
    518 :≡ (Const 103,[],NONE);
    519 :≡ (Cons 0,[518; 517],NONE);
    520 :≡ (Const 120,[],NONE);
    521 :≡ (Cons 0,[520; 519],NONE);
    522 :≡ (Cons 2,[521],NONE);
    523 :≡ (Cons 0,[522],NONE);
    524 :≡ (Cons 4,[523; 508],NONE);
    525 :≡ (Cons 3,[524; 480],NONE);
    526 :≡ (Cons 3,[525; 473],NONE);
    527 :≡ (Cons 0,[],NONE);
    528 :≡ (Const 66,[],NONE);
    529 :≡ (Cons 0,[528; 527],NONE);
    530 :≡ (Cons 2,[529],NONE);
    531 :≡ (Const 31,[],NONE);
    532 :≡ (Const 268435457,[],NONE);
    533 :≡ (Mult,[532; 531],SOME ⦕ 466; 526; 530; 531; 532 ⦖);
    534 :≡ (Const 268435425,[],NONE);
    535 :≡ (Add,[534; 533],SOME ⦕ 466; 526; 530; 533; 534 ⦖);
    makespace 28 ⦕ 466; 526; 530; 535 ⦖;
    536 :≡ (WordFromInt,[535],NONE);
    537 :≡ (Cons 3,[536],NONE);
    538 :≡ (Cons 3,[537; 530],NONE);
    539 :≡ (Cons 0,[],NONE);
    540 :≡ (Const 116,[],NONE);
    541 :≡ (Cons 0,[540; 539],NONE);
    542 :≡ (Const 115,[],NONE);
    543 :≡ (Cons 0,[542; 541],NONE);
    544 :≡ (Const 111,[],NONE);
    545 :≡ (Cons 0,[544; 543],NONE);
    546 :≡ (Const 112,[],NONE);
    547 :≡ (Cons 0,[546; 545],NONE);
    548 :≡ (Const 104,[],NONE);
    549 :≡ (Cons 0,[548; 547],NONE);
    550 :≡ (Const 118,[],NONE);
    551 :≡ (Cons 0,[550; 549],NONE);
    552 :≡ (Cons 2,[551],NONE);
    553 :≡ (Const 159,[],NONE);
    554 :≡ (Const 268435457,[],NONE);
    555 :≡ (Mult,[554; 553],SOME ⦕ 466; 526; 538; 552; 553; 554 ⦖);
    556 :≡ (Const 268435297,[],NONE);
    557 :≡ (Add,[556; 555],SOME ⦕ 466; 526; 538; 552; 555; 556 ⦖);
    makespace 28 ⦕ 466; 526; 538; 552; 557 ⦖;
    558 :≡ (WordFromInt,[557],NONE);
    559 :≡ (Cons 3,[558],NONE);
    560 :≡ (Cons 3,[559; 552],NONE);
    561 :≡ (Cons 0,[],NONE);
    562 :≡ (Const 116,[],NONE);
    563 :≡ (Cons 0,[562; 561],NONE);
    564 :≡ (Const 115,[],NONE);
    565 :≡ (Cons 0,[564; 563],NONE);
    566 :≡ (Const 111,[],NONE);
    567 :≡ (Cons 0,[566; 565],NONE);
    568 :≡ (Const 112,[],NONE);
    569 :≡ (Cons 0,[568; 567],NONE);
    570 :≡ (Const 104,[],NONE);
    571 :≡ (Cons 0,[570; 569],NONE);
    572 :≡ (Const 118,[],NONE);
    573 :≡ (Cons 0,[572; 571],NONE);
    574 :≡ (Cons 2,[573],NONE);
    575 :≡ (Const 159,[],NONE);
    576 :≡ (Const 268435457,[],NONE);
    577 :≡ (Mult,[576; 575],SOME ⦕ 466; 526; 538; 560; 574; 575; 576 ⦖);
    578 :≡ (Const 268435297,[],NONE);
    579 :≡ (Add,[578; 577],SOME ⦕ 466; 526; 538; 560; 574; 577; 578 ⦖);
    makespace 11 ⦕ 466; 526; 538; 560; 574; 579 ⦖;
    580 :≡ (WordFromInt,[579],NONE);
    581 :≡ (Cons 3,[580],NONE);
    582 :≡ (Cons 3,[581; 574],NONE);
    583 :≡ (Cons 3,[582; 560],NONE);
    584 :≡ (Const 255,[],NONE);
    585 :≡ (Const 268435457,[],NONE);
    586 :≡ (Mult,[585; 584],SOME ⦕ 466; 526; 538; 583; 584; 585 ⦖);
    587 :≡ (Const 268434929,[],NONE);
    588 :≡ (Add,[587; 586],SOME ⦕ 466; 526; 538; 583; 586; 587 ⦖);
    589 :≡ (Const 268435457,[],NONE);
    590 :≡ (Mult,[589; 588],SOME ⦕ 466; 526; 538; 583; 588; 589 ⦖);
    591 :≡ (Const 272,[],NONE);
    592 :≡ (Add,[591; 590],SOME ⦕ 466; 526; 538; 583; 590; 591 ⦖);
    makespace 35 ⦕ 466; 526; 538; 583; 592 ⦖;
    593 :≡ (WordFromInt,[592],NONE);
    594 :≡ (Cons 3,[593],NONE);
    595 :≡ (Cons 3,[594; 583],NONE);
    596 :≡ (Cons 0,[],NONE);
    597 :≡ (Const 116,[],NONE);
    598 :≡ (Cons 0,[597; 596],NONE);
    599 :≡ (Const 115,[],NONE);
    600 :≡ (Cons 0,[599; 598],NONE);
    601 :≡ (Const 111,[],NONE);
    602 :≡ (Cons 0,[601; 600],NONE);
    603 :≡ (Const 112,[],NONE);
    604 :≡ (Cons 0,[603; 602],NONE);
    605 :≡ (Const 97,[],NONE);
    606 :≡ (Cons 0,[605; 604],NONE);
    607 :≡ (Cons 2,[606],NONE);
    608 :≡ (Cons 1,[607],NONE);
    609 :≡ (Cons 0,[],NONE);
    610 :≡ (Const 118,[],NONE);
    611 :≡ (Cons 0,[610; 609],NONE);
    612 :≡ (Cons 2,[611],NONE);
    613 :≡ (Cons 2,[612; 608],NONE);
    614 :≡ (Const 159,[],NONE);
    615 :≡ (Const 268435457,[],NONE);
    616 :≡ (Mult,[615; 614],SOME ⦕ 466; 526; 538; 595; 613; 614; 615 ⦖);
    617 :≡ (Const 268435297,[],NONE);
    618 :≡ (Add,[617; 616],SOME ⦕ 466; 526; 538; 595; 613; 616; 617 ⦖);
    makespace 36 ⦕ 466; 526; 538; 595; 613; 618 ⦖;
    619 :≡ (WordFromInt,[618],NONE);
    620 :≡ (Cons 3,[619],NONE);
    621 :≡ (Cons 3,[620; 613],NONE);
    622 :≡ (Cons 0,[],NONE);
    623 :≡ (Const 84,[],NONE);
    624 :≡ (Cons 0,[623; 622],NONE);
    625 :≡ (Cons 2,[624],NONE);
    626 :≡ (Cons 0,[625; 621],NONE);
    627 :≡ (Cons 0,[],NONE);
    628 :≡ (Const 116,[],NONE);
    629 :≡ (Cons 0,[628; 627],NONE);
    630 :≡ (Const 115,[],NONE);
    631 :≡ (Cons 0,[630; 629],NONE);
    632 :≡ (Const 111,[],NONE);
    633 :≡ (Cons 0,[632; 631],NONE);
    634 :≡ (Const 112,[],NONE);
    635 :≡ (Cons 0,[634; 633],NONE);
    636 :≡ (Const 97,[],NONE);
    637 :≡ (Cons 0,[636; 635],NONE);
    638 :≡ (Cons 2,[637],NONE);
    639 :≡ (Cons 3,[638; 626],NONE);
    640 :≡ (Const 159,[],NONE);
    641 :≡ (Const 268435457,[],NONE);
    642 :≡ (Mult,[641; 640],SOME ⦕ 466; 526; 538; 595; 639; 640; 641 ⦖);
    643 :≡ (Const 268435297,[],NONE);
    644 :≡ (Add,[643; 642],SOME ⦕ 466; 526; 538; 595; 639; 642; 643 ⦖);
    makespace 43 ⦕ 466; 526; 538; 595; 639; 644 ⦖;
    645 :≡ (WordFromInt,[644],NONE);
    646 :≡ (Cons 3,[645],NONE);
    647 :≡ (Cons 0,[],NONE);
    648 :≡ (Const 118,[],NONE);
    649 :≡ (Cons 0,[648; 647],NONE);
    650 :≡ (Cons 2,[649],NONE);
    651 :≡ (Cons 3,[650; 646],NONE);
    652 :≡ (Cons 4,[651; 639],NONE);
    653 :≡ (Cons 0,[],NONE);
    654 :≡ (Const 116,[],NONE);
    655 :≡ (Cons 0,[654; 653],NONE);
    656 :≡ (Const 115,[],NONE);
    657 :≡ (Cons 0,[656; 655],NONE);
    658 :≡ (Const 111,[],NONE);
    659 :≡ (Cons 0,[658; 657],NONE);
    660 :≡ (Const 112,[],NONE);
    661 :≡ (Cons 0,[660; 659],NONE);
    662 :≡ (Const 97,[],NONE);
    663 :≡ (Cons 0,[662; 661],NONE);
    664 :≡ (Cons 2,[663],NONE);
    665 :≡ (Cons 1,[664],NONE);
    666 :≡ (Cons 0,[],NONE);
    667 :≡ (Const 118,[],NONE);
    668 :≡ (Cons 0,[667; 666],NONE);
    669 :≡ (Cons 2,[668],NONE);
    670 :≡ (Cons 2,[669; 665],NONE);
    671 :≡ (Const 159,[],NONE);
    672 :≡ (Const 268435457,[],NONE);
    673 :≡ (Mult,[672; 671],SOME ⦕ 466; 526; 538; 595; 652; 670; 671; 672 ⦖);
    674 :≡ (Const 268435297,[],NONE);
    675 :≡ (Add,[674; 673],SOME ⦕ 466; 526; 538; 595; 652; 670; 673; 674 ⦖);
    makespace 36 ⦕ 466; 526; 538; 595; 652; 670; 675 ⦖;
    676 :≡ (WordFromInt,[675],NONE);
    677 :≡ (Cons 3,[676],NONE);
    678 :≡ (Cons 3,[677; 670],NONE);
    679 :≡ (Cons 0,[],NONE);
    680 :≡ (Const 84,[],NONE);
    681 :≡ (Cons 0,[680; 679],NONE);
    682 :≡ (Cons 2,[681],NONE);
    683 :≡ (Cons 0,[682; 678],NONE);
    684 :≡ (Cons 0,[],NONE);
    685 :≡ (Const 116,[],NONE);
    686 :≡ (Cons 0,[685; 684],NONE);
    687 :≡ (Const 115,[],NONE);
    688 :≡ (Cons 0,[687; 686],NONE);
    689 :≡ (Const 111,[],NONE);
    690 :≡ (Cons 0,[689; 688],NONE);
    691 :≡ (Const 112,[],NONE);
    692 :≡ (Cons 0,[691; 690],NONE);
    693 :≡ (Const 97,[],NONE);
    694 :≡ (Cons 0,[693; 692],NONE);
    695 :≡ (Cons 2,[694],NONE);
    696 :≡ (Cons 3,[695; 683],NONE);
    697 :≡ (Const 159,[],NONE);
    698 :≡ (Const 268435457,[],NONE);
    699 :≡ (Mult,[698; 697],SOME ⦕ 466; 526; 538; 595; 652; 696; 697; 698 ⦖);
    700 :≡ (Const 268435297,[],NONE);
    701 :≡ (Add,[700; 699],SOME ⦕ 466; 526; 538; 595; 652; 696; 699; 700 ⦖);
    makespace 52 ⦕ 466; 526; 538; 595; 652; 696; 701 ⦖;
    702 :≡ (WordFromInt,[701],NONE);
    703 :≡ (Cons 3,[702],NONE);
    704 :≡ (Cons 0,[],NONE);
    705 :≡ (Const 118,[],NONE);
    706 :≡ (Cons 0,[705; 704],NONE);
    707 :≡ (Cons 2,[706],NONE);
    708 :≡ (Cons 3,[707; 703],NONE);
    709 :≡ (Cons 4,[708; 696],NONE);
    710 :≡ (Cons 3,[709; 652],NONE);
    711 :≡ (Cons 4,[710; 595],NONE);
    712 :≡ (Cons 2,[711; 538],NONE);
    713 :≡ (Cons 0,[],NONE);
    714 :≡ (Const 116,[],NONE);
    715 :≡ (Cons 0,[714; 713],NONE);
    716 :≡ (Const 115,[],NONE);
    717 :≡ (Cons 0,[716; 715],NONE);
    718 :≡ (Const 111,[],NONE);
    719 :≡ (Cons 0,[718; 717],NONE);
    720 :≡ (Const 112,[],NONE);
    721 :≡ (Cons 0,[720; 719],NONE);
    722 :≡ (Const 97,[],NONE);
    723 :≡ (Cons 0,[722; 721],NONE);
    724 :≡ (Cons 2,[723],NONE);
    725 :≡ (Cons 1,[724],NONE);
    726 :≡ (Cons 0,[],NONE);
    727 :≡ (Const 118,[],NONE);
    728 :≡ (Cons 0,[727; 726],NONE);
    729 :≡ (Cons 2,[728],NONE);
    730 :≡ (Cons 2,[729; 725],NONE);
    731 :≡ (Const 159,[],NONE);
    732 :≡ (Const 268435457,[],NONE);
    733 :≡ (Mult,[732; 731],SOME ⦕ 466; 526; 712; 730; 731; 732 ⦖);
    734 :≡ (Const 268435297,[],NONE);
    735 :≡ (Add,[734; 733],SOME ⦕ 466; 526; 712; 730; 733; 734 ⦖);
    makespace 43 ⦕ 466; 526; 712; 730; 735 ⦖;
    736 :≡ (WordFromInt,[735],NONE);
    737 :≡ (Cons 3,[736],NONE);
    738 :≡ (Cons 3,[737; 730],NONE);
    739 :≡ (Cons 0,[],NONE);
    740 :≡ (Const 84,[],NONE);
    741 :≡ (Cons 0,[740; 739],NONE);
    742 :≡ (Cons 2,[741],NONE);
    743 :≡ (Cons 0,[742; 738],NONE);
    744 :≡ (Cons 0,[],NONE);
    745 :≡ (Const 116,[],NONE);
    746 :≡ (Cons 0,[745; 744],NONE);
    747 :≡ (Const 115,[],NONE);
    748 :≡ (Cons 0,[747; 746],NONE);
    749 :≡ (Const 111,[],NONE);
    750 :≡ (Cons 0,[749; 748],NONE);
    751 :≡ (Const 112,[],NONE);
    752 :≡ (Cons 0,[751; 750],NONE);
    753 :≡ (Const 97,[],NONE);
    754 :≡ (Cons 0,[753; 752],NONE);
    755 :≡ (Cons 2,[754],NONE);
    756 :≡ (Cons 1,[755],NONE);
    757 :≡ (Cons 0,[],NONE);
    758 :≡ (Const 118,[],NONE);
    759 :≡ (Cons 0,[758; 757],NONE);
    760 :≡ (Cons 2,[759],NONE);
    761 :≡ (Cons 2,[760; 756],NONE);
    762 :≡ (Const 159,[],NONE);
    763 :≡ (Const 268435457,[],NONE);
    764 :≡ (Mult,[763; 762],SOME ⦕ 466; 526; 712; 743; 761; 762; 763 ⦖);
    765 :≡ (Const 268435297,[],NONE);
    766 :≡ (Add,[765; 764],SOME ⦕ 466; 526; 712; 743; 761; 764; 765 ⦖);
    makespace 19 ⦕ 466; 526; 712; 743; 761; 766 ⦖;
    767 :≡ (WordFromInt,[766],NONE);
    768 :≡ (Cons 3,[767],NONE);
    769 :≡ (Cons 3,[768; 761],NONE);
    770 :≡ (Cons 0,[],NONE);
    771 :≡ (Const 84,[],NONE);
    772 :≡ (Cons 0,[771; 770],NONE);
    773 :≡ (Cons 2,[772],NONE);
    774 :≡ (Cons 0,[773; 769],NONE);
    775 :≡ (Cons 3,[774; 743],NONE);
    776 :≡ (Const 31,[],NONE);
    777 :≡ (Const 268435457,[],NONE);
    778 :≡ (Mult,[777; 776],SOME ⦕ 466; 526; 712; 775; 776; 777 ⦖);
    779 :≡ (Const 268435425,[],NONE);
    780 :≡ (Add,[779; 778],SOME ⦕ 466; 526; 712; 775; 778; 779 ⦖);
    makespace 55 ⦕ 466; 526; 712; 775; 780 ⦖;
    781 :≡ (WordFromInt,[780],NONE);
    782 :≡ (Cons 3,[781],NONE);
    783 :≡ (Cons 0,[],NONE);
    784 :≡ (Const 116,[],NONE);
    785 :≡ (Cons 0,[784; 783],NONE);
    786 :≡ (Const 115,[],NONE);
    787 :≡ (Cons 0,[786; 785],NONE);
    788 :≡ (Const 111,[],NONE);
    789 :≡ (Cons 0,[788; 787],NONE);
    790 :≡ (Const 112,[],NONE);
    791 :≡ (Cons 0,[790; 789],NONE);
    792 :≡ (Const 97,[],NONE);
    793 :≡ (Cons 0,[792; 791],NONE);
    794 :≡ (Cons 2,[793],NONE);
    795 :≡ (Cons 2,[794; 782],NONE);
    796 :≡ (Cons 3,[795; 775],NONE);
    797 :≡ (Cons 0,[],NONE);
    798 :≡ (Const 116,[],NONE);
    799 :≡ (Cons 0,[798; 797],NONE);
    800 :≡ (Const 115,[],NONE);
    801 :≡ (Cons 0,[800; 799],NONE);
    802 :≡ (Const 111,[],NONE);
    803 :≡ (Cons 0,[802; 801],NONE);
    804 :≡ (Const 112,[],NONE);
    805 :≡ (Cons 0,[804; 803],NONE);
    806 :≡ (Const 97,[],NONE);
    807 :≡ (Cons 0,[806; 805],NONE);
    808 :≡ (Cons 2,[807],NONE);
    809 :≡ (Cons 1,[808],NONE);
    810 :≡ (Cons 0,[],NONE);
    811 :≡ (Const 118,[],NONE);
    812 :≡ (Cons 0,[811; 810],NONE);
    813 :≡ (Cons 2,[812],NONE);
    814 :≡ (Cons 2,[813; 809],NONE);
    815 :≡ (Const 159,[],NONE);
    816 :≡ (Const 268435457,[],NONE);
    817 :≡ (Mult,[816; 815],SOME ⦕ 466; 526; 712; 796; 814; 815; 816 ⦖);
    818 :≡ (Const 268435297,[],NONE);
    819 :≡ (Add,[818; 817],SOME ⦕ 466; 526; 712; 796; 814; 817; 818 ⦖);
    makespace 16 ⦕ 466; 526; 712; 796; 814; 819 ⦖;
    820 :≡ (WordFromInt,[819],NONE);
    821 :≡ (Cons 3,[820],NONE);
    822 :≡ (Cons 3,[821; 814],NONE);
    823 :≡ (Cons 0,[],NONE);
    824 :≡ (Const 84,[],NONE);
    825 :≡ (Cons 0,[824; 823],NONE);
    826 :≡ (Cons 2,[825],NONE);
    827 :≡ (Cons 0,[826; 822],NONE);
    828 :≡ (Const 159,[],NONE);
    829 :≡ (Const 268435457,[],NONE);
    830 :≡ (Mult,[829; 828],SOME ⦕ 466; 526; 712; 796; 827; 828; 829 ⦖);
    831 :≡ (Const 268435297,[],NONE);
    832 :≡ (Add,[831; 830],SOME ⦕ 466; 526; 712; 796; 827; 830; 831 ⦖);
    makespace 87 ⦕ 466; 526; 712; 796; 827; 832 ⦖;
    833 :≡ (WordFromInt,[832],NONE);
    834 :≡ (Cons 3,[833],NONE);
    835 :≡ (Cons 0,[],NONE);
    836 :≡ (Const 118,[],NONE);
    837 :≡ (Cons 0,[836; 835],NONE);
    838 :≡ (Cons 2,[837],NONE);
    839 :≡ (Cons 3,[838; 834],NONE);
    840 :≡ (Cons 3,[839; 827],NONE);
    841 :≡ (Cons 4,[840; 796],NONE);
    842 :≡ (Cons 4,[841; 712],NONE);
    843 :≡ (Cons 0,[],NONE);
    844 :≡ (Const 116,[],NONE);
    845 :≡ (Cons 0,[844; 843],NONE);
    846 :≡ (Const 115,[],NONE);
    847 :≡ (Cons 0,[846; 845],NONE);
    848 :≡ (Const 111,[],NONE);
    849 :≡ (Cons 0,[848; 847],NONE);
    850 :≡ (Const 112,[],NONE);
    851 :≡ (Cons 0,[850; 849],NONE);
    852 :≡ (Const 107,[],NONE);
    853 :≡ (Cons 0,[852; 851],NONE);
    854 :≡ (Cons 2,[853],NONE);
    855 :≡ (Cons 0,[],NONE);
    856 :≡ (Const 116,[],NONE);
    857 :≡ (Cons 0,[856; 855],NONE);
    858 :≡ (Const 115,[],NONE);
    859 :≡ (Cons 0,[858; 857],NONE);
    860 :≡ (Const 111,[],NONE);
    861 :≡ (Cons 0,[860; 859],NONE);
    862 :≡ (Const 112,[],NONE);
    863 :≡ (Cons 0,[862; 861],NONE);
    864 :≡ (Const 107,[],NONE);
    865 :≡ (Cons 0,[864; 863],NONE);
    866 :≡ (Cons 2,[865],NONE);
    867 :≡ (Cons 3,[866; 854],NONE);
    868 :≡ (Cons 0,[],NONE);
    869 :≡ (Const 115,[],NONE);
    870 :≡ (Cons 0,[869; 868],NONE);
    871 :≡ (Const 112,[],NONE);
    872 :≡ (Cons 0,[871; 870],NONE);
    873 :≡ (Const 101,[],NONE);
    874 :≡ (Cons 0,[873; 872],NONE);
    875 :≡ (Cons 2,[874],NONE);
    876 :≡ (Cons 0,[],NONE);
    877 :≡ (Const 115,[],NONE);
    878 :≡ (Cons 0,[877; 876],NONE);
    879 :≡ (Const 112,[],NONE);
    880 :≡ (Cons 0,[879; 878],NONE);
    881 :≡ (Const 101,[],NONE);
    882 :≡ (Cons 0,[881; 880],NONE);
    883 :≡ (Cons 2,[882],NONE);
    884 :≡ (Cons 3,[883; 875],NONE);
    885 :≡ (Cons 3,[884; 867],NONE);
    886 :≡ (Const 1599,[],NONE);
    887 :≡ (Const 268435457,[],NONE);
    888 :≡ (Mult,[887; 886],SOME ⦕ 466; 526; 842; 885; 886; 887 ⦖);
    889 :≡ (Const 268433857,[],NONE);
    890 :≡ (Add,[889; 888],SOME ⦕ 466; 526; 842; 885; 888; 889 ⦖);
    makespace 35 ⦕ 466; 526; 842; 885; 890 ⦖;
    891 :≡ (WordFromInt,[890],NONE);
    892 :≡ (Cons 3,[891],NONE);
    893 :≡ (Cons 0,[],NONE);
    894 :≡ (Const 116,[],NONE);
    895 :≡ (Cons 0,[894; 893],NONE);
    896 :≡ (Const 115,[],NONE);
    897 :≡ (Cons 0,[896; 895],NONE);
    898 :≡ (Const 111,[],NONE);
    899 :≡ (Cons 0,[898; 897],NONE);
    900 :≡ (Const 112,[],NONE);
    901 :≡ (Cons 0,[900; 899],NONE);
    902 :≡ (Const 107,[],NONE);
    903 :≡ (Cons 0,[902; 901],NONE);
    904 :≡ (Cons 2,[903],NONE);
    905 :≡ (Cons 0,[904],NONE);
    906 :≡ (Cons 0,[],NONE);
    907 :≡ (Const 115,[],NONE);
    908 :≡ (Cons 0,[907; 906],NONE);
    909 :≡ (Const 112,[],NONE);
    910 :≡ (Cons 0,[909; 908],NONE);
    911 :≡ (Const 101,[],NONE);
    912 :≡ (Cons 0,[911; 910],NONE);
    913 :≡ (Cons 2,[912],NONE);
    914 :≡ (Const 31,[],NONE);
    915 :≡ (Const 268435457,[],NONE);
    916 :≡
    (Mult,[915; 914],SOME ⦕ 466; 526; 842; 885; 892; 905; 913; 914; 915 ⦖);
    917 :≡ (Const 268435425,[],NONE);
    918 :≡
    (Add,[917; 916],SOME ⦕ 466; 526; 842; 885; 892; 905; 913; 916; 917 ⦖);
    makespace 14 ⦕ 466; 526; 842; 885; 892; 905; 913; 918 ⦖;
    919 :≡ (WordFromInt,[918],NONE);
    920 :≡ (Cons 3,[919],NONE);
    921 :≡ (Cons 3,[920; 913],NONE);
    922 :≡ (Cons 3,[921; 905],NONE);
    923 :≡ (Cons 3,[922; 892],NONE);
    924 :≡ (Const 159999,[],NONE);
    925 :≡ (Const 268435457,[],NONE);
    926 :≡ (Mult,[925; 924],SOME ⦕ 466; 526; 842; 885; 923; 924; 925 ⦖);
    927 :≡ (Const 268275457,[],NONE);
    928 :≡ (Add,[927; 926],SOME ⦕ 466; 526; 842; 885; 923; 926; 927 ⦖);
    makespace 48 ⦕ 466; 526; 842; 885; 923; 928 ⦖;
    929 :≡ (WordFromInt,[928],NONE);
    930 :≡ (Cons 3,[929],NONE);
    931 :≡ (Cons 4,[930; 923],NONE);
    932 :≡ (Cons 4,[931; 885],NONE);
    933 :≡ (Cons 3,[932; 842],NONE);
    934 :≡ (Cons 3,[933; 526],NONE);
    935 :≡ (Cons 0,[934; 466],NONE);
    936 :≡ (Const 0,[],NONE);
    937 :≡ (WordFromInt,[936],NONE);
    938 :≡ (Cons 3,[937],NONE);
    939 :≡ (Cons 0,[],NONE);
    940 :≡ (Const 116,[],NONE);
    941 :≡ (Cons 0,[940; 939],NONE);
    942 :≡ (Const 115,[],NONE);
    943 :≡ (Cons 0,[942; 941],NONE);
    944 :≡ (Const 111,[],NONE);
    945 :≡ (Cons 0,[944; 943],NONE);
    946 :≡ (Const 112,[],NONE);
    947 :≡ (Cons 0,[946; 945],NONE);
    948 :≡ (Const 97,[],NONE);
    949 :≡ (Cons 0,[948; 947],NONE);
    950 :≡ (Cons 2,[949],NONE);
    951 :≡ (Cons 4,[950; 938],NONE);
    952 :≡ (Cons 1,[951; 935],NONE);
    953 :≡ (Const 1599,[],NONE);
    954 :≡ (Const 268435457,[],NONE);
    955 :≡ (Mult,[954; 953],SOME ⦕ 952; 953; 954 ⦖);
    956 :≡ (Const 268433857,[],NONE);
    957 :≡ (Add,[956; 955],SOME ⦕ 952; 955; 956 ⦖);
    makespace 5 ⦕ 952; 957 ⦖;
    958 :≡ (WordFromInt,[957],NONE);
    959 :≡ (Cons 3,[958],NONE);
    960 :≡ (Const 159999,[],NONE);
    961 :≡ (Const 268435457,[],NONE);
    962 :≡ (Mult,[961; 960],SOME ⦕ 952; 959; 960; 961 ⦖);
    963 :≡ (Const 268275457,[],NONE);
    964 :≡ (Add,[963; 962],SOME ⦕ 952; 959; 962; 963 ⦖);
    makespace 16 ⦕ 952; 959; 964 ⦖;
    965 :≡ (WordFromInt,[964],NONE);
    966 :≡ (Cons 3,[965],NONE);
    967 :≡ (Cons 0,[],NONE);
    968 :≡ (Const 115,[],NONE);
    969 :≡ (Cons 0,[968; 967],NONE);
    970 :≡ (Const 112,[],NONE);
    971 :≡ (Cons 0,[970; 969],NONE);
    972 :≡ (Const 101,[],NONE);
    973 :≡ (Cons 0,[972; 971],NONE);
    974 :≡ (Cons 2,[973],NONE);
    975 :≡ (Const 159,[],NONE);
    976 :≡ (Const 268435457,[],NONE);
    977 :≡ (Mult,[976; 975],SOME ⦕ 952; 959; 966; 974; 975; 976 ⦖);
    978 :≡ (Const 268435297,[],NONE);
    979 :≡ (Add,[978; 977],SOME ⦕ 952; 959; 966; 974; 977; 978 ⦖);
    makespace 8 ⦕ 952; 959; 966; 974; 979 ⦖;
    980 :≡ (WordFromInt,[979],NONE);
    981 :≡ (Cons 3,[980],NONE);
    982 :≡ (Cons 3,[981; 974],NONE);
    983 :≡ (Const 255,[],NONE);
    984 :≡ (Const 268435457,[],NONE);
    985 :≡ (Mult,[984; 983],SOME ⦕ 952; 959; 966; 982; 983; 984 ⦖);
    986 :≡ (Const 268434929,[],NONE);
    987 :≡ (Add,[986; 985],SOME ⦕ 952; 959; 966; 982; 985; 986 ⦖);
    988 :≡ (Const 268435457,[],NONE);
    989 :≡ (Mult,[988; 987],SOME ⦕ 952; 959; 966; 982; 987; 988 ⦖);
    990 :≡ (Const 272,[],NONE);
    991 :≡ (Add,[990; 989],SOME ⦕ 952; 959; 966; 982; 989; 990 ⦖);
    makespace 42 ⦕ 952; 959; 966; 982; 991 ⦖;
    992 :≡ (WordFromInt,[991],NONE);
    993 :≡ (Cons 3,[992],NONE);
    994 :≡ (Cons 3,[993; 982],NONE);
    995 :≡ (Cons 0,[],NONE);
    996 :≡ (Const 116,[],NONE);
    997 :≡ (Cons 0,[996; 995],NONE);
    998 :≡ (Const 115,[],NONE);
    999 :≡ (Cons 0,[998; 997],NONE);
    1000 :≡ (Const 111,[],NONE);
    1001 :≡ (Cons 0,[1000; 999],NONE);
    1002 :≡ (Const 112,[],NONE);
    1003 :≡ (Cons 0,[1002; 1001],NONE);
    1004 :≡ (Const 103,[],NONE);
    1005 :≡ (Cons 0,[1004; 1003],NONE);
    1006 :≡ (Const 121,[],NONE);
    1007 :≡ (Cons 0,[1006; 1005],NONE);
    1008 :≡ (Cons 2,[1007],NONE);
    1009 :≡ (Cons 4,[1008; 994],NONE);
    1010 :≡ (Cons 3,[1009; 966],NONE);
    1011 :≡ (Cons 3,[1010; 959],NONE);
    1012 :≡ (Cons 0,[],NONE);
    1013 :≡ (Const 66,[],NONE);
    1014 :≡ (Cons 0,[1013; 1012],NONE);
    1015 :≡ (Cons 2,[1014],NONE);
    1016 :≡ (Const 31,[],NONE);
    1017 :≡ (Const 268435457,[],NONE);
    1018 :≡ (Mult,[1017; 1016],SOME ⦕ 952; 1011; 1015; 1016; 1017 ⦖);
    1019 :≡ (Const 268435425,[],NONE);
    1020 :≡ (Add,[1019; 1018],SOME ⦕ 952; 1011; 1015; 1018; 1019 ⦖);
    makespace 28 ⦕ 952; 1011; 1015; 1020 ⦖;
    1021 :≡ (WordFromInt,[1020],NONE);
    1022 :≡ (Cons 3,[1021],NONE);
    1023 :≡ (Cons 3,[1022; 1015],NONE);
    1024 :≡ (Cons 0,[],NONE);
    1025 :≡ (Const 116,[],NONE);
    1026 :≡ (Cons 0,[1025; 1024],NONE);
    1027 :≡ (Const 115,[],NONE);
    1028 :≡ (Cons 0,[1027; 1026],NONE);
    1029 :≡ (Const 111,[],NONE);
    1030 :≡ (Cons 0,[1029; 1028],NONE);
    1031 :≡ (Const 112,[],NONE);
    1032 :≡ (Cons 0,[1031; 1030],NONE);
    1033 :≡ (Const 104,[],NONE);
    1034 :≡ (Cons 0,[1033; 1032],NONE);
    1035 :≡ (Const 118,[],NONE);
    1036 :≡ (Cons 0,[1035; 1034],NONE);
    1037 :≡ (Cons 2,[1036],NONE);
    1038 :≡ (Const 159,[],NONE);
    1039 :≡ (Const 268435457,[],NONE);
    1040 :≡ (Mult,[1039; 1038],SOME ⦕ 952; 1011; 1023; 1037; 1038; 1039 ⦖);
    1041 :≡ (Const 268435297,[],NONE);
    1042 :≡ (Add,[1041; 1040],SOME ⦕ 952; 1011; 1023; 1037; 1040; 1041 ⦖);
    makespace 28 ⦕ 952; 1011; 1023; 1037; 1042 ⦖;
    1043 :≡ (WordFromInt,[1042],NONE);
    1044 :≡ (Cons 3,[1043],NONE);
    1045 :≡ (Cons 3,[1044; 1037],NONE);
    1046 :≡ (Cons 0,[],NONE);
    1047 :≡ (Const 116,[],NONE);
    1048 :≡ (Cons 0,[1047; 1046],NONE);
    1049 :≡ (Const 115,[],NONE);
    1050 :≡ (Cons 0,[1049; 1048],NONE);
    1051 :≡ (Const 111,[],NONE);
    1052 :≡ (Cons 0,[1051; 1050],NONE);
    1053 :≡ (Const 112,[],NONE);
    1054 :≡ (Cons 0,[1053; 1052],NONE);
    1055 :≡ (Const 104,[],NONE);
    1056 :≡ (Cons 0,[1055; 1054],NONE);
    1057 :≡ (Const 118,[],NONE);
    1058 :≡ (Cons 0,[1057; 1056],NONE);
    1059 :≡ (Cons 2,[1058],NONE);
    1060 :≡ (Const 159,[],NONE);
    1061 :≡ (Const 268435457,[],NONE);
    1062 :≡
    (Mult,[1061; 1060],SOME ⦕ 952; 1011; 1023; 1045; 1059; 1060; 1061 ⦖);
    1063 :≡ (Const 268435297,[],NONE);
    1064 :≡ (Add,[1063; 1062],SOME ⦕ 952; 1011; 1023; 1045; 1059; 1062; 1063 ⦖);
    makespace 11 ⦕ 952; 1011; 1023; 1045; 1059; 1064 ⦖;
    1065 :≡ (WordFromInt,[1064],NONE);
    1066 :≡ (Cons 3,[1065],NONE);
    1067 :≡ (Cons 3,[1066; 1059],NONE);
    1068 :≡ (Cons 3,[1067; 1045],NONE);
    1069 :≡ (Const 255,[],NONE);
    1070 :≡ (Const 268435457,[],NONE);
    1071 :≡ (Mult,[1070; 1069],SOME ⦕ 952; 1011; 1023; 1068; 1069; 1070 ⦖);
    1072 :≡ (Const 268434929,[],NONE);
    1073 :≡ (Add,[1072; 1071],SOME ⦕ 952; 1011; 1023; 1068; 1071; 1072 ⦖);
    1074 :≡ (Const 268435457,[],NONE);
    1075 :≡ (Mult,[1074; 1073],SOME ⦕ 952; 1011; 1023; 1068; 1073; 1074 ⦖);
    1076 :≡ (Const 272,[],NONE);
    1077 :≡ (Add,[1076; 1075],SOME ⦕ 952; 1011; 1023; 1068; 1075; 1076 ⦖);
    makespace 33 ⦕ 952; 1011; 1023; 1068; 1077 ⦖;
    1078 :≡ (WordFromInt,[1077],NONE);
    1079 :≡ (Cons 3,[1078],NONE);
    1080 :≡ (Cons 3,[1079; 1068],NONE);
    1081 :≡ (Cons 0,[],NONE);
    1082 :≡ (Const 84,[],NONE);
    1083 :≡ (Cons 0,[1082; 1081],NONE);
    1084 :≡ (Cons 2,[1083],NONE);
    1085 :≡ (Cons 0,[],NONE);
    1086 :≡ (Const 116,[],NONE);
    1087 :≡ (Cons 0,[1086; 1085],NONE);
    1088 :≡ (Const 115,[],NONE);
    1089 :≡ (Cons 0,[1088; 1087],NONE);
    1090 :≡ (Const 111,[],NONE);
    1091 :≡ (Cons 0,[1090; 1089],NONE);
    1092 :≡ (Const 112,[],NONE);
    1093 :≡ (Cons 0,[1092; 1091],NONE);
    1094 :≡ (Const 97,[],NONE);
    1095 :≡ (Cons 0,[1094; 1093],NONE);
    1096 :≡ (Cons 2,[1095],NONE);
    1097 :≡ (Cons 3,[1096; 1084],NONE);
    1098 :≡ (Const 159,[],NONE);
    1099 :≡ (Const 268435457,[],NONE);
    1100 :≡
    (Mult,[1099; 1098],SOME ⦕ 952; 1011; 1023; 1080; 1097; 1098; 1099 ⦖);
    1101 :≡ (Const 268435297,[],NONE);
    1102 :≡ (Add,[1101; 1100],SOME ⦕ 952; 1011; 1023; 1080; 1097; 1100; 1101 ⦖);
    makespace 41 ⦕ 952; 1011; 1023; 1080; 1097; 1102 ⦖;
    1103 :≡ (WordFromInt,[1102],NONE);
    1104 :≡ (Cons 3,[1103],NONE);
    1105 :≡ (Cons 0,[],NONE);
    1106 :≡ (Const 118,[],NONE);
    1107 :≡ (Cons 0,[1106; 1105],NONE);
    1108 :≡ (Cons 2,[1107],NONE);
    1109 :≡ (Cons 3,[1108; 1104],NONE);
    1110 :≡ (Cons 4,[1109; 1097],NONE);
    1111 :≡ (Cons 0,[],NONE);
    1112 :≡ (Const 84,[],NONE);
    1113 :≡ (Cons 0,[1112; 1111],NONE);
    1114 :≡ (Cons 2,[1113],NONE);
    1115 :≡ (Cons 0,[],NONE);
    1116 :≡ (Const 116,[],NONE);
    1117 :≡ (Cons 0,[1116; 1115],NONE);
    1118 :≡ (Const 115,[],NONE);
    1119 :≡ (Cons 0,[1118; 1117],NONE);
    1120 :≡ (Const 111,[],NONE);
    1121 :≡ (Cons 0,[1120; 1119],NONE);
    1122 :≡ (Const 112,[],NONE);
    1123 :≡ (Cons 0,[1122; 1121],NONE);
    1124 :≡ (Const 97,[],NONE);
    1125 :≡ (Cons 0,[1124; 1123],NONE);
    1126 :≡ (Cons 2,[1125],NONE);
    1127 :≡ (Cons 3,[1126; 1114],NONE);
    1128 :≡ (Const 159,[],NONE);
    1129 :≡ (Const 268435457,[],NONE);
    1130 :≡
    (Mult,[1129; 1128],SOME ⦕ 952; 1011; 1023; 1080; 1110; 1127; 1128; 1129 ⦖);
    1131 :≡ (Const 268435297,[],NONE);
    1132 :≡
    (Add,[1131; 1130],SOME ⦕ 952; 1011; 1023; 1080; 1110; 1127; 1130; 1131 ⦖);
    makespace 38 ⦕ 952; 1011; 1023; 1080; 1110; 1127; 1132 ⦖;
    1133 :≡ (WordFromInt,[1132],NONE);
    1134 :≡ (Cons 3,[1133],NONE);
    1135 :≡ (Cons 0,[],NONE);
    1136 :≡ (Const 118,[],NONE);
    1137 :≡ (Cons 0,[1136; 1135],NONE);
    1138 :≡ (Cons 2,[1137],NONE);
    1139 :≡ (Cons 3,[1138; 1134],NONE);
    1140 :≡ (Cons 4,[1139; 1127],NONE);
    1141 :≡ (Cons 3,[1140; 1110],NONE);
    1142 :≡ (Cons 4,[1141; 1080],NONE);
    1143 :≡ (Cons 2,[1142; 1023],NONE);
    1144 :≡ (Cons 0,[],NONE);
    1145 :≡ (Const 84,[],NONE);
    1146 :≡ (Cons 0,[1145; 1144],NONE);
    1147 :≡ (Cons 2,[1146],NONE);
    1148 :≡ (Cons 0,[],NONE);
    1149 :≡ (Const 84,[],NONE);
    1150 :≡ (Cons 0,[1149; 1148],NONE);
    1151 :≡ (Cons 2,[1150],NONE);
    1152 :≡ (Cons 3,[1151; 1147],NONE);
    1153 :≡ (Const 31,[],NONE);
    1154 :≡ (Const 268435457,[],NONE);
    1155 :≡ (Mult,[1154; 1153],SOME ⦕ 952; 1011; 1143; 1152; 1153; 1154 ⦖);
    1156 :≡ (Const 268435425,[],NONE);
    1157 :≡ (Add,[1156; 1155],SOME ⦕ 952; 1011; 1143; 1152; 1155; 1156 ⦖);
    makespace 28 ⦕ 952; 1011; 1143; 1152; 1157 ⦖;
    1158 :≡ (WordFromInt,[1157],NONE);
    1159 :≡ (Cons 3,[1158],NONE);
    1160 :≡ (Cons 0,[],NONE);
    1161 :≡ (Const 116,[],NONE);
    1162 :≡ (Cons 0,[1161; 1160],NONE);
    1163 :≡ (Const 115,[],NONE);
    1164 :≡ (Cons 0,[1163; 1162],NONE);
    1165 :≡ (Const 111,[],NONE);
    1166 :≡ (Cons 0,[1165; 1164],NONE);
    1167 :≡ (Const 112,[],NONE);
    1168 :≡ (Cons 0,[1167; 1166],NONE);
    1169 :≡ (Const 97,[],NONE);
    1170 :≡ (Cons 0,[1169; 1168],NONE);
    1171 :≡ (Cons 2,[1170],NONE);
    1172 :≡ (Cons 2,[1171; 1159],NONE);
    1173 :≡ (Cons 3,[1172; 1152],NONE);
    1174 :≡ (Const 159,[],NONE);
    1175 :≡ (Const 268435457,[],NONE);
    1176 :≡ (Mult,[1175; 1174],SOME ⦕ 952; 1011; 1143; 1173; 1174; 1175 ⦖);
    1177 :≡ (Const 268435297,[],NONE);
    1178 :≡ (Add,[1177; 1176],SOME ⦕ 952; 1011; 1143; 1173; 1176; 1177 ⦖);
    makespace 92 ⦕ 952; 1011; 1143; 1173; 1178 ⦖;
    1179 :≡ (WordFromInt,[1178],NONE);
    1180 :≡ (Cons 3,[1179],NONE);
    1181 :≡ (Cons 0,[],NONE);
    1182 :≡ (Const 84,[],NONE);
    1183 :≡ (Cons 0,[1182; 1181],NONE);
    1184 :≡ (Cons 2,[1183],NONE);
    1185 :≡ (Cons 0,[],NONE);
    1186 :≡ (Const 118,[],NONE);
    1187 :≡ (Cons 0,[1186; 1185],NONE);
    1188 :≡ (Cons 2,[1187],NONE);
    1189 :≡ (Cons 3,[1188; 1184],NONE);
    1190 :≡ (Cons 3,[1189; 1180],NONE);
    1191 :≡ (Cons 4,[1190; 1173],NONE);
    1192 :≡ (Cons 4,[1191; 1143],NONE);
    1193 :≡ (Cons 0,[],NONE);
    1194 :≡ (Const 116,[],NONE);
    1195 :≡ (Cons 0,[1194; 1193],NONE);
    1196 :≡ (Const 115,[],NONE);
    1197 :≡ (Cons 0,[1196; 1195],NONE);
    1198 :≡ (Const 111,[],NONE);
    1199 :≡ (Cons 0,[1198; 1197],NONE);
    1200 :≡ (Const 112,[],NONE);
    1201 :≡ (Cons 0,[1200; 1199],NONE);
    1202 :≡ (Const 107,[],NONE);
    1203 :≡ (Cons 0,[1202; 1201],NONE);
    1204 :≡ (Cons 2,[1203],NONE);
    1205 :≡ (Cons 0,[],NONE);
    1206 :≡ (Const 116,[],NONE);
    1207 :≡ (Cons 0,[1206; 1205],NONE);
    1208 :≡ (Const 115,[],NONE);
    1209 :≡ (Cons 0,[1208; 1207],NONE);
    1210 :≡ (Const 111,[],NONE);
    1211 :≡ (Cons 0,[1210; 1209],NONE);
    1212 :≡ (Const 112,[],NONE);
    1213 :≡ (Cons 0,[1212; 1211],NONE);
    1214 :≡ (Const 107,[],NONE);
    1215 :≡ (Cons 0,[1214; 1213],NONE);
    1216 :≡ (Cons 2,[1215],NONE);
    1217 :≡ (Cons 3,[1216; 1204],NONE);
    1218 :≡ (Cons 0,[],NONE);
    1219 :≡ (Const 115,[],NONE);
    1220 :≡ (Cons 0,[1219; 1218],NONE);
    1221 :≡ (Const 112,[],NONE);
    1222 :≡ (Cons 0,[1221; 1220],NONE);
    1223 :≡ (Const 101,[],NONE);
    1224 :≡ (Cons 0,[1223; 1222],NONE);
    1225 :≡ (Cons 2,[1224],NONE);
    1226 :≡ (Cons 0,[],NONE);
    1227 :≡ (Const 115,[],NONE);
    1228 :≡ (Cons 0,[1227; 1226],NONE);
    1229 :≡ (Const 112,[],NONE);
    1230 :≡ (Cons 0,[1229; 1228],NONE);
    1231 :≡ (Const 101,[],NONE);
    1232 :≡ (Cons 0,[1231; 1230],NONE);
    1233 :≡ (Cons 2,[1232],NONE);
    1234 :≡ (Cons 3,[1233; 1225],NONE);
    1235 :≡ (Cons 3,[1234; 1217],NONE);
    1236 :≡ (Const 1599,[],NONE);
    1237 :≡ (Const 268435457,[],NONE);
    1238 :≡ (Mult,[1237; 1236],SOME ⦕ 952; 1011; 1192; 1235; 1236; 1237 ⦖);
    1239 :≡ (Const 268433857,[],NONE);
    1240 :≡ (Add,[1239; 1238],SOME ⦕ 952; 1011; 1192; 1235; 1238; 1239 ⦖);
    makespace 35 ⦕ 952; 1011; 1192; 1235; 1240 ⦖;
    1241 :≡ (WordFromInt,[1240],NONE);
    1242 :≡ (Cons 3,[1241],NONE);
    1243 :≡ (Cons 0,[],NONE);
    1244 :≡ (Const 116,[],NONE);
    1245 :≡ (Cons 0,[1244; 1243],NONE);
    1246 :≡ (Const 115,[],NONE);
    1247 :≡ (Cons 0,[1246; 1245],NONE);
    1248 :≡ (Const 111,[],NONE);
    1249 :≡ (Cons 0,[1248; 1247],NONE);
    1250 :≡ (Const 112,[],NONE);
    1251 :≡ (Cons 0,[1250; 1249],NONE);
    1252 :≡ (Const 107,[],NONE);
    1253 :≡ (Cons 0,[1252; 1251],NONE);
    1254 :≡ (Cons 2,[1253],NONE);
    1255 :≡ (Cons 0,[1254],NONE);
    1256 :≡ (Cons 0,[],NONE);
    1257 :≡ (Const 115,[],NONE);
    1258 :≡ (Cons 0,[1257; 1256],NONE);
    1259 :≡ (Const 112,[],NONE);
    1260 :≡ (Cons 0,[1259; 1258],NONE);
    1261 :≡ (Const 101,[],NONE);
    1262 :≡ (Cons 0,[1261; 1260],NONE);
    1263 :≡ (Cons 2,[1262],NONE);
    1264 :≡ (Const 31,[],NONE);
    1265 :≡ (Const 268435457,[],NONE);
    1266 :≡
    (Mult,[1265; 1264],
     SOME ⦕ 952; 1011; 1192; 1235; 1242; 1255; 1263; 1264; 1265 ⦖);
    1267 :≡ (Const 268435425,[],NONE);
    1268 :≡
    (Add,[1267; 1266],
     SOME ⦕ 952; 1011; 1192; 1235; 1242; 1255; 1263; 1266; 1267 ⦖);
    makespace 14 ⦕ 952; 1011; 1192; 1235; 1242; 1255; 1263; 1268 ⦖;
    1269 :≡ (WordFromInt,[1268],NONE);
    1270 :≡ (Cons 3,[1269],NONE);
    1271 :≡ (Cons 3,[1270; 1263],NONE);
    1272 :≡ (Cons 3,[1271; 1255],NONE);
    1273 :≡ (Cons 3,[1272; 1242],NONE);
    1274 :≡ (Const 159999,[],NONE);
    1275 :≡ (Const 268435457,[],NONE);
    1276 :≡
    (Mult,[1275; 1274],SOME ⦕ 952; 1011; 1192; 1235; 1273; 1274; 1275 ⦖);
    1277 :≡ (Const 268275457,[],NONE);
    1278 :≡ (Add,[1277; 1276],SOME ⦕ 952; 1011; 1192; 1235; 1273; 1276; 1277 ⦖);
    makespace 17 ⦕ 952; 1011; 1192; 1235; 1273; 1278 ⦖;
    1279 :≡ (WordFromInt,[1278],NONE);
    1280 :≡ (Cons 3,[1279],NONE);
    1281 :≡ (Cons 4,[1280; 1273],NONE);
    1282 :≡ (Cons 4,[1281; 1235],NONE);
    1283 :≡ (Cons 3,[1282; 1192],NONE);
    1284 :≡ (Cons 3,[1283; 1011],NONE);
    1285 :≡ (Const 1599,[],NONE);
    1286 :≡ (Const 268435457,[],NONE);
    1287 :≡ (Mult,[1286; 1285],SOME ⦕ 952; 1284; 1285; 1286 ⦖);
    1288 :≡ (Const 268433857,[],NONE);
    1289 :≡ (Add,[1288; 1287],SOME ⦕ 952; 1284; 1287; 1288 ⦖);
    makespace 5 ⦕ 952; 1284; 1289 ⦖;
    1290 :≡ (WordFromInt,[1289],NONE);
    1291 :≡ (Cons 3,[1290],NONE);
    1292 :≡ (Const 159999,[],NONE);
    1293 :≡ (Const 268435457,[],NONE);
    1294 :≡ (Mult,[1293; 1292],SOME ⦕ 952; 1284; 1291; 1292; 1293 ⦖);
    1295 :≡ (Const 268275457,[],NONE);
    1296 :≡ (Add,[1295; 1294],SOME ⦕ 952; 1284; 1291; 1294; 1295 ⦖);
    makespace 16 ⦕ 952; 1284; 1291; 1296 ⦖;
    1297 :≡ (WordFromInt,[1296],NONE);
    1298 :≡ (Cons 3,[1297],NONE);
    1299 :≡ (Cons 0,[],NONE);
    1300 :≡ (Const 115,[],NONE);
    1301 :≡ (Cons 0,[1300; 1299],NONE);
    1302 :≡ (Const 112,[],NONE);
    1303 :≡ (Cons 0,[1302; 1301],NONE);
    1304 :≡ (Const 101,[],NONE);
    1305 :≡ (Cons 0,[1304; 1303],NONE);
    1306 :≡ (Cons 2,[1305],NONE);
    1307 :≡ (Const 159,[],NONE);
    1308 :≡ (Const 268435457,[],NONE);
    1309 :≡
    (Mult,[1308; 1307],SOME ⦕ 952; 1284; 1291; 1298; 1306; 1307; 1308 ⦖);
    1310 :≡ (Const 268435297,[],NONE);
    1311 :≡ (Add,[1310; 1309],SOME ⦕ 952; 1284; 1291; 1298; 1306; 1309; 1310 ⦖);
    makespace 8 ⦕ 952; 1284; 1291; 1298; 1306; 1311 ⦖;
    1312 :≡ (WordFromInt,[1311],NONE);
    1313 :≡ (Cons 3,[1312],NONE);
    1314 :≡ (Cons 3,[1313; 1306],NONE);
    1315 :≡ (Const 255,[],NONE);
    1316 :≡ (Const 268435457,[],NONE);
    1317 :≡
    (Mult,[1316; 1315],SOME ⦕ 952; 1284; 1291; 1298; 1314; 1315; 1316 ⦖);
    1318 :≡ (Const 268434929,[],NONE);
    1319 :≡ (Add,[1318; 1317],SOME ⦕ 952; 1284; 1291; 1298; 1314; 1317; 1318 ⦖);
    1320 :≡ (Const 268435457,[],NONE);
    1321 :≡
    (Mult,[1320; 1319],SOME ⦕ 952; 1284; 1291; 1298; 1314; 1319; 1320 ⦖);
    1322 :≡ (Const 272,[],NONE);
    1323 :≡ (Add,[1322; 1321],SOME ⦕ 952; 1284; 1291; 1298; 1314; 1321; 1322 ⦖);
    makespace 44 ⦕ 952; 1284; 1291; 1298; 1314; 1323 ⦖;
    1324 :≡ (WordFromInt,[1323],NONE);
    1325 :≡ (Cons 3,[1324],NONE);
    1326 :≡ (Cons 3,[1325; 1314],NONE);
    1327 :≡ (Cons 0,[],NONE);
    1328 :≡ (Const 116,[],NONE);
    1329 :≡ (Cons 0,[1328; 1327],NONE);
    1330 :≡ (Const 115,[],NONE);
    1331 :≡ (Cons 0,[1330; 1329],NONE);
    1332 :≡ (Const 111,[],NONE);
    1333 :≡ (Cons 0,[1332; 1331],NONE);
    1334 :≡ (Const 112,[],NONE);
    1335 :≡ (Cons 0,[1334; 1333],NONE);
    1336 :≡ (Const 103,[],NONE);
    1337 :≡ (Cons 0,[1336; 1335],NONE);
    1338 :≡ (Const 120,[],NONE);
    1339 :≡ (Cons 0,[1338; 1337],NONE);
    1340 :≡ (Cons 2,[1339],NONE);
    1341 :≡ (Cons 0,[1340],NONE);
    1342 :≡ (Cons 4,[1341; 1326],NONE);
    1343 :≡ (Cons 3,[1342; 1298],NONE);
    1344 :≡ (Cons 3,[1343; 1291],NONE);
    1345 :≡ (Cons 0,[],NONE);
    1346 :≡ (Const 66,[],NONE);
    1347 :≡ (Cons 0,[1346; 1345],NONE);
    1348 :≡ (Cons 2,[1347],NONE);
    1349 :≡ (Const 31,[],NONE);
    1350 :≡ (Const 268435457,[],NONE);
    1351 :≡ (Mult,[1350; 1349],SOME ⦕ 952; 1284; 1344; 1348; 1349; 1350 ⦖);
    1352 :≡ (Const 268435425,[],NONE);
    1353 :≡ (Add,[1352; 1351],SOME ⦕ 952; 1284; 1344; 1348; 1351; 1352 ⦖);
    makespace 28 ⦕ 952; 1284; 1344; 1348; 1353 ⦖;
    1354 :≡ (WordFromInt,[1353],NONE);
    1355 :≡ (Cons 3,[1354],NONE);
    1356 :≡ (Cons 3,[1355; 1348],NONE);
    1357 :≡ (Cons 0,[],NONE);
    1358 :≡ (Const 116,[],NONE);
    1359 :≡ (Cons 0,[1358; 1357],NONE);
    1360 :≡ (Const 115,[],NONE);
    1361 :≡ (Cons 0,[1360; 1359],NONE);
    1362 :≡ (Const 111,[],NONE);
    1363 :≡ (Cons 0,[1362; 1361],NONE);
    1364 :≡ (Const 112,[],NONE);
    1365 :≡ (Cons 0,[1364; 1363],NONE);
    1366 :≡ (Const 104,[],NONE);
    1367 :≡ (Cons 0,[1366; 1365],NONE);
    1368 :≡ (Const 118,[],NONE);
    1369 :≡ (Cons 0,[1368; 1367],NONE);
    1370 :≡ (Cons 2,[1369],NONE);
    1371 :≡ (Const 159,[],NONE);
    1372 :≡ (Const 268435457,[],NONE);
    1373 :≡
    (Mult,[1372; 1371],SOME ⦕ 952; 1284; 1344; 1356; 1370; 1371; 1372 ⦖);
    1374 :≡ (Const 268435297,[],NONE);
    1375 :≡ (Add,[1374; 1373],SOME ⦕ 952; 1284; 1344; 1356; 1370; 1373; 1374 ⦖);
    makespace 28 ⦕ 952; 1284; 1344; 1356; 1370; 1375 ⦖;
    1376 :≡ (WordFromInt,[1375],NONE);
    1377 :≡ (Cons 3,[1376],NONE);
    1378 :≡ (Cons 3,[1377; 1370],NONE);
    1379 :≡ (Cons 0,[],NONE);
    1380 :≡ (Const 116,[],NONE);
    1381 :≡ (Cons 0,[1380; 1379],NONE);
    1382 :≡ (Const 115,[],NONE);
    1383 :≡ (Cons 0,[1382; 1381],NONE);
    1384 :≡ (Const 111,[],NONE);
    1385 :≡ (Cons 0,[1384; 1383],NONE);
    1386 :≡ (Const 112,[],NONE);
    1387 :≡ (Cons 0,[1386; 1385],NONE);
    1388 :≡ (Const 104,[],NONE);
    1389 :≡ (Cons 0,[1388; 1387],NONE);
    1390 :≡ (Const 118,[],NONE);
    1391 :≡ (Cons 0,[1390; 1389],NONE);
    1392 :≡ (Cons 2,[1391],NONE);
    1393 :≡ (Const 159,[],NONE);
    1394 :≡ (Const 268435457,[],NONE);
    1395 :≡
    (Mult,[1394; 1393],SOME ⦕ 952; 1284; 1344; 1356; 1378; 1392; 1393; 1394 ⦖);
    1396 :≡ (Const 268435297,[],NONE);
    1397 :≡
    (Add,[1396; 1395],SOME ⦕ 952; 1284; 1344; 1356; 1378; 1392; 1395; 1396 ⦖);
    makespace 11 ⦕ 952; 1284; 1344; 1356; 1378; 1392; 1397 ⦖;
    1398 :≡ (WordFromInt,[1397],NONE);
    1399 :≡ (Cons 3,[1398],NONE);
    1400 :≡ (Cons 3,[1399; 1392],NONE);
    1401 :≡ (Cons 3,[1400; 1378],NONE);
    1402 :≡ (Const 255,[],NONE);
    1403 :≡ (Const 268435457,[],NONE);
    1404 :≡
    (Mult,[1403; 1402],SOME ⦕ 952; 1284; 1344; 1356; 1401; 1402; 1403 ⦖);
    1405 :≡ (Const 268434929,[],NONE);
    1406 :≡ (Add,[1405; 1404],SOME ⦕ 952; 1284; 1344; 1356; 1401; 1404; 1405 ⦖);
    1407 :≡ (Const 268435457,[],NONE);
    1408 :≡
    (Mult,[1407; 1406],SOME ⦕ 952; 1284; 1344; 1356; 1401; 1406; 1407 ⦖);
    1409 :≡ (Const 272,[],NONE);
    1410 :≡ (Add,[1409; 1408],SOME ⦕ 952; 1284; 1344; 1356; 1401; 1408; 1409 ⦖);
    makespace 33 ⦕ 952; 1284; 1344; 1356; 1401; 1410 ⦖;
    1411 :≡ (WordFromInt,[1410],NONE);
    1412 :≡ (Cons 3,[1411],NONE);
    1413 :≡ (Cons 3,[1412; 1401],NONE);
    1414 :≡ (Cons 0,[],NONE);
    1415 :≡ (Const 84,[],NONE);
    1416 :≡ (Cons 0,[1415; 1414],NONE);
    1417 :≡ (Cons 2,[1416],NONE);
    1418 :≡ (Cons 0,[],NONE);
    1419 :≡ (Const 116,[],NONE);
    1420 :≡ (Cons 0,[1419; 1418],NONE);
    1421 :≡ (Const 115,[],NONE);
    1422 :≡ (Cons 0,[1421; 1420],NONE);
    1423 :≡ (Const 111,[],NONE);
    1424 :≡ (Cons 0,[1423; 1422],NONE);
    1425 :≡ (Const 112,[],NONE);
    1426 :≡ (Cons 0,[1425; 1424],NONE);
    1427 :≡ (Const 97,[],NONE);
    1428 :≡ (Cons 0,[1427; 1426],NONE);
    1429 :≡ (Cons 2,[1428],NONE);
    1430 :≡ (Cons 3,[1429; 1417],NONE);
    1431 :≡ (Const 159,[],NONE);
    1432 :≡ (Const 268435457,[],NONE);
    1433 :≡
    (Mult,[1432; 1431],SOME ⦕ 952; 1284; 1344; 1356; 1413; 1430; 1431; 1432 ⦖);
    1434 :≡ (Const 268435297,[],NONE);
    1435 :≡
    (Add,[1434; 1433],SOME ⦕ 952; 1284; 1344; 1356; 1413; 1430; 1433; 1434 ⦖);
    makespace 41 ⦕ 952; 1284; 1344; 1356; 1413; 1430; 1435 ⦖;
    1436 :≡ (WordFromInt,[1435],NONE);
    1437 :≡ (Cons 3,[1436],NONE);
    1438 :≡ (Cons 0,[],NONE);
    1439 :≡ (Const 118,[],NONE);
    1440 :≡ (Cons 0,[1439; 1438],NONE);
    1441 :≡ (Cons 2,[1440],NONE);
    1442 :≡ (Cons 3,[1441; 1437],NONE);
    1443 :≡ (Cons 4,[1442; 1430],NONE);
    1444 :≡ (Cons 0,[],NONE);
    1445 :≡ (Const 84,[],NONE);
    1446 :≡ (Cons 0,[1445; 1444],NONE);
    1447 :≡ (Cons 2,[1446],NONE);
    1448 :≡ (Cons 0,[],NONE);
    1449 :≡ (Const 116,[],NONE);
    1450 :≡ (Cons 0,[1449; 1448],NONE);
    1451 :≡ (Const 115,[],NONE);
    1452 :≡ (Cons 0,[1451; 1450],NONE);
    1453 :≡ (Const 111,[],NONE);
    1454 :≡ (Cons 0,[1453; 1452],NONE);
    1455 :≡ (Const 112,[],NONE);
    1456 :≡ (Cons 0,[1455; 1454],NONE);
    1457 :≡ (Const 97,[],NONE);
    1458 :≡ (Cons 0,[1457; 1456],NONE);
    1459 :≡ (Cons 2,[1458],NONE);
    1460 :≡ (Cons 3,[1459; 1447],NONE);
    1461 :≡ (Const 159,[],NONE);
    1462 :≡ (Const 268435457,[],NONE);
    1463 :≡
    (Mult,[1462; 1461],
     SOME ⦕ 952; 1284; 1344; 1356; 1413; 1443; 1460; 1461; 1462 ⦖);
    1464 :≡ (Const 268435297,[],NONE);
    1465 :≡
    (Add,[1464; 1463],
     SOME ⦕ 952; 1284; 1344; 1356; 1413; 1443; 1460; 1463; 1464 ⦖);
    makespace 38 ⦕ 952; 1284; 1344; 1356; 1413; 1443; 1460; 1465 ⦖;
    1466 :≡ (WordFromInt,[1465],NONE);
    1467 :≡ (Cons 3,[1466],NONE);
    1468 :≡ (Cons 0,[],NONE);
    1469 :≡ (Const 118,[],NONE);
    1470 :≡ (Cons 0,[1469; 1468],NONE);
    1471 :≡ (Cons 2,[1470],NONE);
    1472 :≡ (Cons 3,[1471; 1467],NONE);
    1473 :≡ (Cons 4,[1472; 1460],NONE);
    1474 :≡ (Cons 3,[1473; 1443],NONE);
    1475 :≡ (Cons 4,[1474; 1413],NONE);
    1476 :≡ (Cons 2,[1475; 1356],NONE);
    1477 :≡ (Cons 0,[],NONE);
    1478 :≡ (Const 84,[],NONE);
    1479 :≡ (Cons 0,[1478; 1477],NONE);
    1480 :≡ (Cons 2,[1479],NONE);
    1481 :≡ (Cons 0,[],NONE);
    1482 :≡ (Const 84,[],NONE);
    1483 :≡ (Cons 0,[1482; 1481],NONE);
    1484 :≡ (Cons 2,[1483],NONE);
    1485 :≡ (Cons 3,[1484; 1480],NONE);
    1486 :≡ (Const 31,[],NONE);
    1487 :≡ (Const 268435457,[],NONE);
    1488 :≡
    (Mult,[1487; 1486],SOME ⦕ 952; 1284; 1344; 1476; 1485; 1486; 1487 ⦖);
    1489 :≡ (Const 268435425,[],NONE);
    1490 :≡ (Add,[1489; 1488],SOME ⦕ 952; 1284; 1344; 1476; 1485; 1488; 1489 ⦖);
    makespace 28 ⦕ 952; 1284; 1344; 1476; 1485; 1490 ⦖;
    1491 :≡ (WordFromInt,[1490],NONE);
    1492 :≡ (Cons 3,[1491],NONE);
    1493 :≡ (Cons 0,[],NONE);
    1494 :≡ (Const 116,[],NONE);
    1495 :≡ (Cons 0,[1494; 1493],NONE);
    1496 :≡ (Const 115,[],NONE);
    1497 :≡ (Cons 0,[1496; 1495],NONE);
    1498 :≡ (Const 111,[],NONE);
    1499 :≡ (Cons 0,[1498; 1497],NONE);
    1500 :≡ (Const 112,[],NONE);
    1501 :≡ (Cons 0,[1500; 1499],NONE);
    1502 :≡ (Const 97,[],NONE);
    1503 :≡ (Cons 0,[1502; 1501],NONE);
    1504 :≡ (Cons 2,[1503],NONE);
    1505 :≡ (Cons 2,[1504; 1492],NONE);
    1506 :≡ (Cons 3,[1505; 1485],NONE);
    1507 :≡ (Const 159,[],NONE);
    1508 :≡ (Const 268435457,[],NONE);
    1509 :≡
    (Mult,[1508; 1507],SOME ⦕ 952; 1284; 1344; 1476; 1506; 1507; 1508 ⦖);
    1510 :≡ (Const 268435297,[],NONE);
    1511 :≡ (Add,[1510; 1509],SOME ⦕ 952; 1284; 1344; 1476; 1506; 1509; 1510 ⦖);
    makespace 92 ⦕ 952; 1284; 1344; 1476; 1506; 1511 ⦖;
    1512 :≡ (WordFromInt,[1511],NONE);
    1513 :≡ (Cons 3,[1512],NONE);
    1514 :≡ (Cons 0,[],NONE);
    1515 :≡ (Const 84,[],NONE);
    1516 :≡ (Cons 0,[1515; 1514],NONE);
    1517 :≡ (Cons 2,[1516],NONE);
    1518 :≡ (Cons 0,[],NONE);
    1519 :≡ (Const 118,[],NONE);
    1520 :≡ (Cons 0,[1519; 1518],NONE);
    1521 :≡ (Cons 2,[1520],NONE);
    1522 :≡ (Cons 3,[1521; 1517],NONE);
    1523 :≡ (Cons 3,[1522; 1513],NONE);
    1524 :≡ (Cons 4,[1523; 1506],NONE);
    1525 :≡ (Cons 4,[1524; 1476],NONE);
    1526 :≡ (Cons 0,[],NONE);
    1527 :≡ (Const 116,[],NONE);
    1528 :≡ (Cons 0,[1527; 1526],NONE);
    1529 :≡ (Const 115,[],NONE);
    1530 :≡ (Cons 0,[1529; 1528],NONE);
    1531 :≡ (Const 111,[],NONE);
    1532 :≡ (Cons 0,[1531; 1530],NONE);
    1533 :≡ (Const 112,[],NONE);
    1534 :≡ (Cons 0,[1533; 1532],NONE);
    1535 :≡ (Const 107,[],NONE);
    1536 :≡ (Cons 0,[1535; 1534],NONE);
    1537 :≡ (Cons 2,[1536],NONE);
    1538 :≡ (Cons 0,[],NONE);
    1539 :≡ (Const 116,[],NONE);
    1540 :≡ (Cons 0,[1539; 1538],NONE);
    1541 :≡ (Const 115,[],NONE);
    1542 :≡ (Cons 0,[1541; 1540],NONE);
    1543 :≡ (Const 111,[],NONE);
    1544 :≡ (Cons 0,[1543; 1542],NONE);
    1545 :≡ (Const 112,[],NONE);
    1546 :≡ (Cons 0,[1545; 1544],NONE);
    1547 :≡ (Const 107,[],NONE);
    1548 :≡ (Cons 0,[1547; 1546],NONE);
    1549 :≡ (Cons 2,[1548],NONE);
    1550 :≡ (Cons 3,[1549; 1537],NONE);
    1551 :≡ (Cons 0,[],NONE);
    1552 :≡ (Const 115,[],NONE);
    1553 :≡ (Cons 0,[1552; 1551],NONE);
    1554 :≡ (Const 112,[],NONE);
    1555 :≡ (Cons 0,[1554; 1553],NONE);
    1556 :≡ (Const 101,[],NONE);
    1557 :≡ (Cons 0,[1556; 1555],NONE);
    1558 :≡ (Cons 2,[1557],NONE);
    1559 :≡ (Cons 0,[],NONE);
    1560 :≡ (Const 115,[],NONE);
    1561 :≡ (Cons 0,[1560; 1559],NONE);
    1562 :≡ (Const 112,[],NONE);
    1563 :≡ (Cons 0,[1562; 1561],NONE);
    1564 :≡ (Const 101,[],NONE);
    1565 :≡ (Cons 0,[1564; 1563],NONE);
    1566 :≡ (Cons 2,[1565],NONE);
    1567 :≡ (Cons 3,[1566; 1558],NONE);
    1568 :≡ (Cons 3,[1567; 1550],NONE);
    1569 :≡ (Const 1599,[],NONE);
    1570 :≡ (Const 268435457,[],NONE);
    1571 :≡
    (Mult,[1570; 1569],SOME ⦕ 952; 1284; 1344; 1525; 1568; 1569; 1570 ⦖);
    1572 :≡ (Const 268433857,[],NONE);
    1573 :≡ (Add,[1572; 1571],SOME ⦕ 952; 1284; 1344; 1525; 1568; 1571; 1572 ⦖);
    makespace 35 ⦕ 952; 1284; 1344; 1525; 1568; 1573 ⦖;
    1574 :≡ (WordFromInt,[1573],NONE);
    1575 :≡ (Cons 3,[1574],NONE);
    1576 :≡ (Cons 0,[],NONE);
    1577 :≡ (Const 116,[],NONE);
    1578 :≡ (Cons 0,[1577; 1576],NONE);
    1579 :≡ (Const 115,[],NONE);
    1580 :≡ (Cons 0,[1579; 1578],NONE);
    1581 :≡ (Const 111,[],NONE);
    1582 :≡ (Cons 0,[1581; 1580],NONE);
    1583 :≡ (Const 112,[],NONE);
    1584 :≡ (Cons 0,[1583; 1582],NONE);
    1585 :≡ (Const 107,[],NONE);
    1586 :≡ (Cons 0,[1585; 1584],NONE);
    1587 :≡ (Cons 2,[1586],NONE);
    1588 :≡ (Cons 0,[1587],NONE);
    1589 :≡ (Cons 0,[],NONE);
    1590 :≡ (Const 115,[],NONE);
    1591 :≡ (Cons 0,[1590; 1589],NONE);
    1592 :≡ (Const 112,[],NONE);
    1593 :≡ (Cons 0,[1592; 1591],NONE);
    1594 :≡ (Const 101,[],NONE);
    1595 :≡ (Cons 0,[1594; 1593],NONE);
    1596 :≡ (Cons 2,[1595],NONE);
    1597 :≡ (Const 31,[],NONE);
    1598 :≡ (Const 268435457,[],NONE);
    1599 :≡
    (Mult,[1598; 1597],
     SOME ⦕ 952; 1284; 1344; 1525; 1568; 1575; 1588; 1596; 1597; 1598 ⦖);
    1600 :≡ (Const 268435425,[],NONE);
    1601 :≡
    (Add,[1600; 1599],
     SOME ⦕ 952; 1284; 1344; 1525; 1568; 1575; 1588; 1596; 1599; 1600 ⦖);
    makespace 14 ⦕ 952; 1284; 1344; 1525; 1568; 1575; 1588; 1596; 1601 ⦖;
    1602 :≡ (WordFromInt,[1601],NONE);
    1603 :≡ (Cons 3,[1602],NONE);
    1604 :≡ (Cons 3,[1603; 1596],NONE);
    1605 :≡ (Cons 3,[1604; 1588],NONE);
    1606 :≡ (Cons 3,[1605; 1575],NONE);
    1607 :≡ (Const 159999,[],NONE);
    1608 :≡ (Const 268435457,[],NONE);
    1609 :≡
    (Mult,[1608; 1607],SOME ⦕ 952; 1284; 1344; 1525; 1568; 1606; 1607; 1608 ⦖);
    1610 :≡ (Const 268275457,[],NONE);
    1611 :≡
    (Add,[1610; 1609],SOME ⦕ 952; 1284; 1344; 1525; 1568; 1606; 1609; 1610 ⦖);
    makespace 51 ⦕ 952; 1284; 1344; 1525; 1568; 1606; 1611 ⦖;
    1612 :≡ (WordFromInt,[1611],NONE);
    1613 :≡ (Cons 3,[1612],NONE);
    1614 :≡ (Cons 4,[1613; 1606],NONE);
    1615 :≡ (Cons 4,[1614; 1568],NONE);
    1616 :≡ (Cons 3,[1615; 1525],NONE);
    1617 :≡ (Cons 3,[1616; 1344],NONE);
    1618 :≡ (Cons 0,[1617; 1284],NONE);
    1619 :≡ (Cons 0,[],NONE);
    1620 :≡ (Const 116,[],NONE);
    1621 :≡ (Cons 0,[1620; 1619],NONE);
    1622 :≡ (Const 115,[],NONE);
    1623 :≡ (Cons 0,[1622; 1621],NONE);
    1624 :≡ (Const 111,[],NONE);
    1625 :≡ (Cons 0,[1624; 1623],NONE);
    1626 :≡ (Const 112,[],NONE);
    1627 :≡ (Cons 0,[1626; 1625],NONE);
    1628 :≡ (Const 97,[],NONE);
    1629 :≡ (Cons 0,[1628; 1627],NONE);
    1630 :≡ (Cons 2,[1629],NONE);
    1631 :≡ (Const 0,[],NONE);
    1632 :≡ (WordFromInt,[1631],NONE);
    1633 :≡ (Cons 3,[1632],NONE);
    1634 :≡ (Cons 3,[1633; 1630],NONE);
    1635 :≡ (Cons 1,[1634; 1618],NONE);
    1636 :≡ (Cons 0,[1635; 952],NONE);
    return 1636
  od

bvi_aux_2 [] =
  do
    makespace 85 LN;
    0 :≡ (Cons 0,[],NONE);
    1 :≡ (Const 118,[],NONE);
    2 :≡ (Cons 0,[1; 0],NONE);
    3 :≡ (Cons 2,[2],NONE);
    4 :≡ (Cons 0,[],NONE);
    5 :≡ (Const 116,[],NONE);
    6 :≡ (Cons 0,[5; 4],NONE);
    7 :≡ (Const 115,[],NONE);
    8 :≡ (Cons 0,[7; 6],NONE);
    9 :≡ (Const 111,[],NONE);
    10 :≡ (Cons 0,[9; 8],NONE);
    11 :≡ (Const 112,[],NONE);
    12 :≡ (Cons 0,[11; 10],NONE);
    13 :≡ (Const 118,[],NONE);
    14 :≡ (Cons 0,[13; 12],NONE);
    15 :≡ (Cons 2,[14],NONE);
    16 :≡ (Cons 2,[15; 3],NONE);
    17 :≡ (Const 0,[],NONE);
    18 :≡ (WordFromInt,[17],NONE);
    19 :≡ (Cons 3,[18],NONE);
    20 :≡ (Cons 0,[],NONE);
    21 :≡ (Const 116,[],NONE);
    22 :≡ (Cons 0,[21; 20],NONE);
    23 :≡ (Const 115,[],NONE);
    24 :≡ (Cons 0,[23; 22],NONE);
    25 :≡ (Const 111,[],NONE);
    26 :≡ (Cons 0,[25; 24],NONE);
    27 :≡ (Const 112,[],NONE);
    28 :≡ (Cons 0,[27; 26],NONE);
    29 :≡ (Const 116,[],NONE);
    30 :≡ (Cons 0,[29; 28],NONE);
    31 :≡ (Cons 2,[30],NONE);
    32 :≡ (Cons 2,[31; 19],NONE);
    33 :≡ (Cons 1,[32; 16],NONE);
    34 :≡ (Cons 0,[],NONE);
    35 :≡ (Const 84,[],NONE);
    36 :≡ (Cons 0,[35; 34],NONE);
    37 :≡ (Cons 2,[36],NONE);
    38 :≡ (Const 0,[],NONE);
    39 :≡ (WordFromInt,[38],NONE);
    40 :≡ (Cons 3,[39],NONE);
    41 :≡ (Cons 3,[40; 37],NONE);
    42 :≡ (Cons 0,[],NONE);
    43 :≡ (Const 118,[],NONE);
    44 :≡ (Cons 0,[43; 42],NONE);
    45 :≡ (Cons 2,[44],NONE);
    46 :≡ (Const 0,[],NONE);
    47 :≡ (WordFromInt,[46],NONE);
    48 :≡ (Cons 3,[47],NONE);
    49 :≡ (Cons 3,[48; 45],NONE);
    50 :≡ (Cons 1,[49; 41],NONE);
    51 :≡ (Cons 1,[50; 33],NONE);
    52 :≡ (Const 1599,[],NONE);
    53 :≡ (Const 268435457,[],NONE);
    54 :≡ (Mult,[53; 52],SOME ⦕ 51; 52; 53 ⦖);
    55 :≡ (Const 268433857,[],NONE);
    56 :≡ (Add,[55; 54],SOME ⦕ 51; 54; 55 ⦖);
    makespace 5 ⦕ 51; 56 ⦖;
    57 :≡ (WordFromInt,[56],NONE);
    58 :≡ (Cons 3,[57],NONE);
    59 :≡ (Const 159999,[],NONE);
    60 :≡ (Const 268435457,[],NONE);
    61 :≡ (Mult,[60; 59],SOME ⦕ 51; 58; 59; 60 ⦖);
    62 :≡ (Const 268275457,[],NONE);
    63 :≡ (Add,[62; 61],SOME ⦕ 51; 58; 61; 62 ⦖);
    makespace 16 ⦕ 51; 58; 63 ⦖;
    64 :≡ (WordFromInt,[63],NONE);
    65 :≡ (Cons 3,[64],NONE);
    66 :≡ (Cons 0,[],NONE);
    67 :≡ (Const 115,[],NONE);
    68 :≡ (Cons 0,[67; 66],NONE);
    69 :≡ (Const 112,[],NONE);
    70 :≡ (Cons 0,[69; 68],NONE);
    71 :≡ (Const 101,[],NONE);
    72 :≡ (Cons 0,[71; 70],NONE);
    73 :≡ (Cons 2,[72],NONE);
    74 :≡ (Const 159,[],NONE);
    75 :≡ (Const 268435457,[],NONE);
    76 :≡ (Mult,[75; 74],SOME ⦕ 51; 58; 65; 73; 74; 75 ⦖);
    77 :≡ (Const 268435297,[],NONE);
    78 :≡ (Add,[77; 76],SOME ⦕ 51; 58; 65; 73; 76; 77 ⦖);
    makespace 8 ⦕ 51; 58; 65; 73; 78 ⦖;
    79 :≡ (WordFromInt,[78],NONE);
    80 :≡ (Cons 3,[79],NONE);
    81 :≡ (Cons 3,[80; 73],NONE);
    82 :≡ (Const 255,[],NONE);
    83 :≡ (Const 268435457,[],NONE);
    84 :≡ (Mult,[83; 82],SOME ⦕ 51; 58; 65; 81; 82; 83 ⦖);
    85 :≡ (Const 268434929,[],NONE);
    86 :≡ (Add,[85; 84],SOME ⦕ 51; 58; 65; 81; 84; 85 ⦖);
    87 :≡ (Const 268435457,[],NONE);
    88 :≡ (Mult,[87; 86],SOME ⦕ 51; 58; 65; 81; 86; 87 ⦖);
    89 :≡ (Const 272,[],NONE);
    90 :≡ (Add,[89; 88],SOME ⦕ 51; 58; 65; 81; 88; 89 ⦖);
    makespace 42 ⦕ 51; 58; 65; 81; 90 ⦖;
    91 :≡ (WordFromInt,[90],NONE);
    92 :≡ (Cons 3,[91],NONE);
    93 :≡ (Cons 3,[92; 81],NONE);
    94 :≡ (Cons 0,[],NONE);
    95 :≡ (Const 116,[],NONE);
    96 :≡ (Cons 0,[95; 94],NONE);
    97 :≡ (Const 115,[],NONE);
    98 :≡ (Cons 0,[97; 96],NONE);
    99 :≡ (Const 111,[],NONE);
    100 :≡ (Cons 0,[99; 98],NONE);
    101 :≡ (Const 112,[],NONE);
    102 :≡ (Cons 0,[101; 100],NONE);
    103 :≡ (Const 103,[],NONE);
    104 :≡ (Cons 0,[103; 102],NONE);
    105 :≡ (Const 121,[],NONE);
    106 :≡ (Cons 0,[105; 104],NONE);
    107 :≡ (Cons 2,[106],NONE);
    108 :≡ (Cons 4,[107; 93],NONE);
    109 :≡ (Cons 3,[108; 65],NONE);
    110 :≡ (Cons 3,[109; 58],NONE);
    111 :≡ (Cons 0,[],NONE);
    112 :≡ (Const 65,[],NONE);
    113 :≡ (Cons 0,[112; 111],NONE);
    114 :≡ (Cons 2,[113],NONE);
    115 :≡ (Const 31,[],NONE);
    116 :≡ (Const 268435457,[],NONE);
    117 :≡ (Mult,[116; 115],SOME ⦕ 51; 110; 114; 115; 116 ⦖);
    118 :≡ (Const 268435425,[],NONE);
    119 :≡ (Add,[118; 117],SOME ⦕ 51; 110; 114; 117; 118 ⦖);
    makespace 35 ⦕ 51; 110; 114; 119 ⦖;
    120 :≡ (WordFromInt,[119],NONE);
    121 :≡ (Cons 3,[120],NONE);
    122 :≡ (Cons 3,[121; 114],NONE);
    123 :≡ (Cons 0,[],NONE);
    124 :≡ (Const 116,[],NONE);
    125 :≡ (Cons 0,[124; 123],NONE);
    126 :≡ (Const 115,[],NONE);
    127 :≡ (Cons 0,[126; 125],NONE);
    128 :≡ (Const 111,[],NONE);
    129 :≡ (Cons 0,[128; 127],NONE);
    130 :≡ (Const 112,[],NONE);
    131 :≡ (Cons 0,[130; 129],NONE);
    132 :≡ (Const 97,[],NONE);
    133 :≡ (Cons 0,[132; 131],NONE);
    134 :≡ (Cons 2,[133],NONE);
    135 :≡ (Cons 1,[134],NONE);
    136 :≡ (Cons 0,[],NONE);
    137 :≡ (Const 118,[],NONE);
    138 :≡ (Cons 0,[137; 136],NONE);
    139 :≡ (Cons 2,[138],NONE);
    140 :≡ (Cons 2,[139; 135],NONE);
    141 :≡ (Const 159,[],NONE);
    142 :≡ (Const 268435457,[],NONE);
    143 :≡ (Mult,[142; 141],SOME ⦕ 51; 110; 122; 140; 141; 142 ⦖);
    144 :≡ (Const 268435297,[],NONE);
    145 :≡ (Add,[144; 143],SOME ⦕ 51; 110; 122; 140; 143; 144 ⦖);
    makespace 41 ⦕ 51; 110; 122; 140; 145 ⦖;
    146 :≡ (WordFromInt,[145],NONE);
    147 :≡ (Cons 3,[146],NONE);
    148 :≡ (Cons 3,[147; 140],NONE);
    149 :≡ (Cons 0,[],NONE);
    150 :≡ (Const 84,[],NONE);
    151 :≡ (Cons 0,[150; 149],NONE);
    152 :≡ (Cons 2,[151],NONE);
    153 :≡ (Cons 0,[152; 148],NONE);
    154 :≡ (Cons 0,[],NONE);
    155 :≡ (Const 116,[],NONE);
    156 :≡ (Cons 0,[155; 154],NONE);
    157 :≡ (Const 115,[],NONE);
    158 :≡ (Cons 0,[157; 156],NONE);
    159 :≡ (Const 111,[],NONE);
    160 :≡ (Cons 0,[159; 158],NONE);
    161 :≡ (Const 112,[],NONE);
    162 :≡ (Cons 0,[161; 160],NONE);
    163 :≡ (Const 97,[],NONE);
    164 :≡ (Cons 0,[163; 162],NONE);
    165 :≡ (Cons 2,[164],NONE);
    166 :≡ (Cons 3,[165; 153],NONE);
    167 :≡ (Cons 0,[],NONE);
    168 :≡ (Const 118,[],NONE);
    169 :≡ (Cons 0,[168; 167],NONE);
    170 :≡ (Cons 2,[169],NONE);
    171 :≡ (Const 159,[],NONE);
    172 :≡ (Const 268435457,[],NONE);
    173 :≡ (Mult,[172; 171],SOME ⦕ 51; 110; 122; 166; 170; 171; 172 ⦖);
    174 :≡ (Const 268435297,[],NONE);
    175 :≡ (Add,[174; 173],SOME ⦕ 51; 110; 122; 166; 170; 173; 174 ⦖);
    makespace 38 ⦕ 51; 110; 122; 166; 170; 175 ⦖;
    176 :≡ (WordFromInt,[175],NONE);
    177 :≡ (Cons 3,[176],NONE);
    178 :≡ (Cons 3,[177; 170],NONE);
    179 :≡ (Cons 4,[178; 166],NONE);
    180 :≡ (Cons 0,[],NONE);
    181 :≡ (Const 116,[],NONE);
    182 :≡ (Cons 0,[181; 180],NONE);
    183 :≡ (Const 115,[],NONE);
    184 :≡ (Cons 0,[183; 182],NONE);
    185 :≡ (Const 111,[],NONE);
    186 :≡ (Cons 0,[185; 184],NONE);
    187 :≡ (Const 112,[],NONE);
    188 :≡ (Cons 0,[187; 186],NONE);
    189 :≡ (Const 97,[],NONE);
    190 :≡ (Cons 0,[189; 188],NONE);
    191 :≡ (Cons 2,[190],NONE);
    192 :≡ (Cons 1,[191],NONE);
    193 :≡ (Cons 0,[],NONE);
    194 :≡ (Const 118,[],NONE);
    195 :≡ (Cons 0,[194; 193],NONE);
    196 :≡ (Cons 2,[195],NONE);
    197 :≡ (Cons 2,[196; 192],NONE);
    198 :≡ (Const 159,[],NONE);
    199 :≡ (Const 268435457,[],NONE);
    200 :≡ (Mult,[199; 198],SOME ⦕ 51; 110; 122; 179; 197; 198; 199 ⦖);
    201 :≡ (Const 268435297,[],NONE);
    202 :≡ (Add,[201; 200],SOME ⦕ 51; 110; 122; 179; 197; 200; 201 ⦖);
    makespace 41 ⦕ 51; 110; 122; 179; 197; 202 ⦖;
    203 :≡ (WordFromInt,[202],NONE);
    204 :≡ (Cons 3,[203],NONE);
    205 :≡ (Cons 3,[204; 197],NONE);
    206 :≡ (Cons 0,[],NONE);
    207 :≡ (Const 84,[],NONE);
    208 :≡ (Cons 0,[207; 206],NONE);
    209 :≡ (Cons 2,[208],NONE);
    210 :≡ (Cons 0,[209; 205],NONE);
    211 :≡ (Cons 0,[],NONE);
    212 :≡ (Const 116,[],NONE);
    213 :≡ (Cons 0,[212; 211],NONE);
    214 :≡ (Const 115,[],NONE);
    215 :≡ (Cons 0,[214; 213],NONE);
    216 :≡ (Const 111,[],NONE);
    217 :≡ (Cons 0,[216; 215],NONE);
    218 :≡ (Const 112,[],NONE);
    219 :≡ (Cons 0,[218; 217],NONE);
    220 :≡ (Const 97,[],NONE);
    221 :≡ (Cons 0,[220; 219],NONE);
    222 :≡ (Cons 2,[221],NONE);
    223 :≡ (Cons 3,[222; 210],NONE);
    224 :≡ (Cons 0,[],NONE);
    225 :≡ (Const 118,[],NONE);
    226 :≡ (Cons 0,[225; 224],NONE);
    227 :≡ (Cons 2,[226],NONE);
    228 :≡ (Const 159,[],NONE);
    229 :≡ (Const 268435457,[],NONE);
    230 :≡ (Mult,[229; 228],SOME ⦕ 51; 110; 122; 179; 223; 227; 228; 229 ⦖);
    231 :≡ (Const 268435297,[],NONE);
    232 :≡ (Add,[231; 230],SOME ⦕ 51; 110; 122; 179; 223; 227; 230; 231 ⦖);
    makespace 14 ⦕ 51; 110; 122; 179; 223; 227; 232 ⦖;
    233 :≡ (WordFromInt,[232],NONE);
    234 :≡ (Cons 3,[233],NONE);
    235 :≡ (Cons 3,[234; 227],NONE);
    236 :≡ (Cons 4,[235; 223],NONE);
    237 :≡ (Cons 3,[236; 179],NONE);
    238 :≡ (Const 255,[],NONE);
    239 :≡ (Const 268435457,[],NONE);
    240 :≡ (Mult,[239; 238],SOME ⦕ 51; 110; 122; 237; 238; 239 ⦖);
    241 :≡ (Const 268434929,[],NONE);
    242 :≡ (Add,[241; 240],SOME ⦕ 51; 110; 122; 237; 240; 241 ⦖);
    243 :≡ (Const 268435457,[],NONE);
    244 :≡ (Mult,[243; 242],SOME ⦕ 51; 110; 122; 237; 242; 243 ⦖);
    245 :≡ (Const 272,[],NONE);
    246 :≡ (Add,[245; 244],SOME ⦕ 51; 110; 122; 237; 244; 245 ⦖);
    makespace 8 ⦕ 51; 110; 122; 237; 246 ⦖;
    247 :≡ (WordFromInt,[246],NONE);
    248 :≡ (Cons 3,[247],NONE);
    249 :≡ (Cons 3,[248; 237],NONE);
    250 :≡ (Const 159,[],NONE);
    251 :≡ (Const 268435457,[],NONE);
    252 :≡ (Mult,[251; 250],SOME ⦕ 51; 110; 122; 249; 250; 251 ⦖);
    253 :≡ (Const 268435297,[],NONE);
    254 :≡ (Add,[253; 252],SOME ⦕ 51; 110; 122; 249; 252; 253 ⦖);
    makespace 28 ⦕ 51; 110; 122; 249; 254 ⦖;
    255 :≡ (WordFromInt,[254],NONE);
    256 :≡ (Cons 3,[255],NONE);
    257 :≡ (Cons 0,[],NONE);
    258 :≡ (Const 116,[],NONE);
    259 :≡ (Cons 0,[258; 257],NONE);
    260 :≡ (Const 115,[],NONE);
    261 :≡ (Cons 0,[260; 259],NONE);
    262 :≡ (Const 111,[],NONE);
    263 :≡ (Cons 0,[262; 261],NONE);
    264 :≡ (Const 112,[],NONE);
    265 :≡ (Cons 0,[264; 263],NONE);
    266 :≡ (Const 108,[],NONE);
    267 :≡ (Cons 0,[266; 265],NONE);
    268 :≡ (Const 118,[],NONE);
    269 :≡ (Cons 0,[268; 267],NONE);
    270 :≡ (Cons 2,[269],NONE);
    271 :≡ (Cons 3,[270; 256],NONE);
    272 :≡ (Const 159,[],NONE);
    273 :≡ (Const 268435457,[],NONE);
    274 :≡ (Mult,[273; 272],SOME ⦕ 51; 110; 122; 249; 271; 272; 273 ⦖);
    275 :≡ (Const 268435297,[],NONE);
    276 :≡ (Add,[275; 274],SOME ⦕ 51; 110; 122; 249; 271; 274; 275 ⦖);
    makespace 64 ⦕ 51; 110; 122; 249; 271; 276 ⦖;
    277 :≡ (WordFromInt,[276],NONE);
    278 :≡ (Cons 3,[277],NONE);
    279 :≡ (Cons 0,[],NONE);
    280 :≡ (Const 116,[],NONE);
    281 :≡ (Cons 0,[280; 279],NONE);
    282 :≡ (Const 115,[],NONE);
    283 :≡ (Cons 0,[282; 281],NONE);
    284 :≡ (Const 111,[],NONE);
    285 :≡ (Cons 0,[284; 283],NONE);
    286 :≡ (Const 112,[],NONE);
    287 :≡ (Cons 0,[286; 285],NONE);
    288 :≡ (Const 108,[],NONE);
    289 :≡ (Cons 0,[288; 287],NONE);
    290 :≡ (Const 118,[],NONE);
    291 :≡ (Cons 0,[290; 289],NONE);
    292 :≡ (Cons 2,[291],NONE);
    293 :≡ (Cons 3,[292; 278],NONE);
    294 :≡ (Cons 3,[293; 271],NONE);
    295 :≡ (Cons 4,[294; 249],NONE);
    296 :≡ (Cons 2,[295; 122],NONE);
    297 :≡ (Cons 0,[],NONE);
    298 :≡ (Const 116,[],NONE);
    299 :≡ (Cons 0,[298; 297],NONE);
    300 :≡ (Const 115,[],NONE);
    301 :≡ (Cons 0,[300; 299],NONE);
    302 :≡ (Const 111,[],NONE);
    303 :≡ (Cons 0,[302; 301],NONE);
    304 :≡ (Const 112,[],NONE);
    305 :≡ (Cons 0,[304; 303],NONE);
    306 :≡ (Const 97,[],NONE);
    307 :≡ (Cons 0,[306; 305],NONE);
    308 :≡ (Cons 2,[307],NONE);
    309 :≡ (Cons 1,[308],NONE);
    310 :≡ (Cons 0,[],NONE);
    311 :≡ (Const 118,[],NONE);
    312 :≡ (Cons 0,[311; 310],NONE);
    313 :≡ (Cons 2,[312],NONE);
    314 :≡ (Cons 2,[313; 309],NONE);
    315 :≡ (Const 159,[],NONE);
    316 :≡ (Const 268435457,[],NONE);
    317 :≡ (Mult,[316; 315],SOME ⦕ 51; 110; 296; 314; 315; 316 ⦖);
    318 :≡ (Const 268435297,[],NONE);
    319 :≡ (Add,[318; 317],SOME ⦕ 51; 110; 296; 314; 317; 318 ⦖);
    makespace 43 ⦕ 51; 110; 296; 314; 319 ⦖;
    320 :≡ (WordFromInt,[319],NONE);
    321 :≡ (Cons 3,[320],NONE);
    322 :≡ (Cons 3,[321; 314],NONE);
    323 :≡ (Cons 0,[],NONE);
    324 :≡ (Const 84,[],NONE);
    325 :≡ (Cons 0,[324; 323],NONE);
    326 :≡ (Cons 2,[325],NONE);
    327 :≡ (Cons 0,[326; 322],NONE);
    328 :≡ (Cons 0,[],NONE);
    329 :≡ (Const 116,[],NONE);
    330 :≡ (Cons 0,[329; 328],NONE);
    331 :≡ (Const 115,[],NONE);
    332 :≡ (Cons 0,[331; 330],NONE);
    333 :≡ (Const 111,[],NONE);
    334 :≡ (Cons 0,[333; 332],NONE);
    335 :≡ (Const 112,[],NONE);
    336 :≡ (Cons 0,[335; 334],NONE);
    337 :≡ (Const 97,[],NONE);
    338 :≡ (Cons 0,[337; 336],NONE);
    339 :≡ (Cons 2,[338],NONE);
    340 :≡ (Cons 1,[339],NONE);
    341 :≡ (Cons 0,[],NONE);
    342 :≡ (Const 118,[],NONE);
    343 :≡ (Cons 0,[342; 341],NONE);
    344 :≡ (Cons 2,[343],NONE);
    345 :≡ (Cons 2,[344; 340],NONE);
    346 :≡ (Const 159,[],NONE);
    347 :≡ (Const 268435457,[],NONE);
    348 :≡ (Mult,[347; 346],SOME ⦕ 51; 110; 296; 327; 345; 346; 347 ⦖);
    349 :≡ (Const 268435297,[],NONE);
    350 :≡ (Add,[349; 348],SOME ⦕ 51; 110; 296; 327; 345; 348; 349 ⦖);
    makespace 19 ⦕ 51; 110; 296; 327; 345; 350 ⦖;
    351 :≡ (WordFromInt,[350],NONE);
    352 :≡ (Cons 3,[351],NONE);
    353 :≡ (Cons 3,[352; 345],NONE);
    354 :≡ (Cons 0,[],NONE);
    355 :≡ (Const 84,[],NONE);
    356 :≡ (Cons 0,[355; 354],NONE);
    357 :≡ (Cons 2,[356],NONE);
    358 :≡ (Cons 0,[357; 353],NONE);
    359 :≡ (Cons 3,[358; 327],NONE);
    360 :≡ (Const 31,[],NONE);
    361 :≡ (Const 268435457,[],NONE);
    362 :≡ (Mult,[361; 360],SOME ⦕ 51; 110; 296; 359; 360; 361 ⦖);
    363 :≡ (Const 268435425,[],NONE);
    364 :≡ (Add,[363; 362],SOME ⦕ 51; 110; 296; 359; 362; 363 ⦖);
    makespace 55 ⦕ 51; 110; 296; 359; 364 ⦖;
    365 :≡ (WordFromInt,[364],NONE);
    366 :≡ (Cons 3,[365],NONE);
    367 :≡ (Cons 0,[],NONE);
    368 :≡ (Const 116,[],NONE);
    369 :≡ (Cons 0,[368; 367],NONE);
    370 :≡ (Const 115,[],NONE);
    371 :≡ (Cons 0,[370; 369],NONE);
    372 :≡ (Const 111,[],NONE);
    373 :≡ (Cons 0,[372; 371],NONE);
    374 :≡ (Const 112,[],NONE);
    375 :≡ (Cons 0,[374; 373],NONE);
    376 :≡ (Const 97,[],NONE);
    377 :≡ (Cons 0,[376; 375],NONE);
    378 :≡ (Cons 2,[377],NONE);
    379 :≡ (Cons 2,[378; 366],NONE);
    380 :≡ (Cons 3,[379; 359],NONE);
    381 :≡ (Cons 0,[],NONE);
    382 :≡ (Const 116,[],NONE);
    383 :≡ (Cons 0,[382; 381],NONE);
    384 :≡ (Const 115,[],NONE);
    385 :≡ (Cons 0,[384; 383],NONE);
    386 :≡ (Const 111,[],NONE);
    387 :≡ (Cons 0,[386; 385],NONE);
    388 :≡ (Const 112,[],NONE);
    389 :≡ (Cons 0,[388; 387],NONE);
    390 :≡ (Const 97,[],NONE);
    391 :≡ (Cons 0,[390; 389],NONE);
    392 :≡ (Cons 2,[391],NONE);
    393 :≡ (Cons 1,[392],NONE);
    394 :≡ (Cons 0,[],NONE);
    395 :≡ (Const 118,[],NONE);
    396 :≡ (Cons 0,[395; 394],NONE);
    397 :≡ (Cons 2,[396],NONE);
    398 :≡ (Cons 2,[397; 393],NONE);
    399 :≡ (Const 159,[],NONE);
    400 :≡ (Const 268435457,[],NONE);
    401 :≡ (Mult,[400; 399],SOME ⦕ 51; 110; 296; 380; 398; 399; 400 ⦖);
    402 :≡ (Const 268435297,[],NONE);
    403 :≡ (Add,[402; 401],SOME ⦕ 51; 110; 296; 380; 398; 401; 402 ⦖);
    makespace 21 ⦕ 51; 110; 296; 380; 398; 403 ⦖;
    404 :≡ (WordFromInt,[403],NONE);
    405 :≡ (Cons 3,[404],NONE);
    406 :≡ (Cons 3,[405; 398],NONE);
    407 :≡ (Cons 0,[],NONE);
    408 :≡ (Const 84,[],NONE);
    409 :≡ (Cons 0,[408; 407],NONE);
    410 :≡ (Cons 2,[409],NONE);
    411 :≡ (Cons 0,[410; 406],NONE);
    412 :≡ (Cons 0,[],NONE);
    413 :≡ (Const 118,[],NONE);
    414 :≡ (Cons 0,[413; 412],NONE);
    415 :≡ (Cons 2,[414],NONE);
    416 :≡ (Const 159,[],NONE);
    417 :≡ (Const 268435457,[],NONE);
    418 :≡ (Mult,[417; 416],SOME ⦕ 51; 110; 296; 380; 411; 415; 416; 417 ⦖);
    419 :≡ (Const 268435297,[],NONE);
    420 :≡ (Add,[419; 418],SOME ⦕ 51; 110; 296; 380; 411; 415; 418; 419 ⦖);
    makespace 17 ⦕ 51; 110; 296; 380; 411; 415; 420 ⦖;
    421 :≡ (WordFromInt,[420],NONE);
    422 :≡ (Cons 3,[421],NONE);
    423 :≡ (Cons 3,[422; 415],NONE);
    424 :≡ (Cons 3,[423; 411],NONE);
    425 :≡ (Cons 4,[424; 380],NONE);
    426 :≡ (Cons 4,[425; 296],NONE);
    427 :≡ (Const 159999,[],NONE);
    428 :≡ (Const 268435457,[],NONE);
    429 :≡ (Mult,[428; 427],SOME ⦕ 51; 110; 426; 427; 428 ⦖);
    430 :≡ (Const 268275457,[],NONE);
    431 :≡ (Add,[430; 429],SOME ⦕ 51; 110; 426; 429; 430 ⦖);
    makespace 39 ⦕ 51; 110; 426; 431 ⦖;
    432 :≡ (WordFromInt,[431],NONE);
    433 :≡ (Cons 3,[432],NONE);
    434 :≡ (Cons 3,[433; 426],NONE);
    435 :≡ (Cons 3,[434; 110],NONE);
    436 :≡ (Const 0,[],NONE);
    437 :≡ (WordFromInt,[436],NONE);
    438 :≡ (Cons 3,[437],NONE);
    439 :≡ (Cons 0,[],NONE);
    440 :≡ (Const 116,[],NONE);
    441 :≡ (Cons 0,[440; 439],NONE);
    442 :≡ (Const 115,[],NONE);
    443 :≡ (Cons 0,[442; 441],NONE);
    444 :≡ (Const 111,[],NONE);
    445 :≡ (Cons 0,[444; 443],NONE);
    446 :≡ (Const 112,[],NONE);
    447 :≡ (Cons 0,[446; 445],NONE);
    448 :≡ (Const 97,[],NONE);
    449 :≡ (Cons 0,[448; 447],NONE);
    450 :≡ (Cons 2,[449],NONE);
    451 :≡ (Cons 4,[450; 438],NONE);
    452 :≡ (Cons 1,[451; 435],NONE);
    453 :≡ (Const 1599,[],NONE);
    454 :≡ (Const 268435457,[],NONE);
    455 :≡ (Mult,[454; 453],SOME ⦕ 51; 452; 453; 454 ⦖);
    456 :≡ (Const 268433857,[],NONE);
    457 :≡ (Add,[456; 455],SOME ⦕ 51; 452; 455; 456 ⦖);
    makespace 5 ⦕ 51; 452; 457 ⦖;
    458 :≡ (WordFromInt,[457],NONE);
    459 :≡ (Cons 3,[458],NONE);
    460 :≡ (Const 159999,[],NONE);
    461 :≡ (Const 268435457,[],NONE);
    462 :≡ (Mult,[461; 460],SOME ⦕ 51; 452; 459; 460; 461 ⦖);
    463 :≡ (Const 268275457,[],NONE);
    464 :≡ (Add,[463; 462],SOME ⦕ 51; 452; 459; 462; 463 ⦖);
    makespace 16 ⦕ 51; 452; 459; 464 ⦖;
    465 :≡ (WordFromInt,[464],NONE);
    466 :≡ (Cons 3,[465],NONE);
    467 :≡ (Cons 0,[],NONE);
    468 :≡ (Const 115,[],NONE);
    469 :≡ (Cons 0,[468; 467],NONE);
    470 :≡ (Const 112,[],NONE);
    471 :≡ (Cons 0,[470; 469],NONE);
    472 :≡ (Const 101,[],NONE);
    473 :≡ (Cons 0,[472; 471],NONE);
    474 :≡ (Cons 2,[473],NONE);
    475 :≡ (Const 159,[],NONE);
    476 :≡ (Const 268435457,[],NONE);
    477 :≡ (Mult,[476; 475],SOME ⦕ 51; 452; 459; 466; 474; 475; 476 ⦖);
    478 :≡ (Const 268435297,[],NONE);
    479 :≡ (Add,[478; 477],SOME ⦕ 51; 452; 459; 466; 474; 477; 478 ⦖);
    makespace 8 ⦕ 51; 452; 459; 466; 474; 479 ⦖;
    480 :≡ (WordFromInt,[479],NONE);
    481 :≡ (Cons 3,[480],NONE);
    482 :≡ (Cons 3,[481; 474],NONE);
    483 :≡ (Const 255,[],NONE);
    484 :≡ (Const 268435457,[],NONE);
    485 :≡ (Mult,[484; 483],SOME ⦕ 51; 452; 459; 466; 482; 483; 484 ⦖);
    486 :≡ (Const 268434929,[],NONE);
    487 :≡ (Add,[486; 485],SOME ⦕ 51; 452; 459; 466; 482; 485; 486 ⦖);
    488 :≡ (Const 268435457,[],NONE);
    489 :≡ (Mult,[488; 487],SOME ⦕ 51; 452; 459; 466; 482; 487; 488 ⦖);
    490 :≡ (Const 272,[],NONE);
    491 :≡ (Add,[490; 489],SOME ⦕ 51; 452; 459; 466; 482; 489; 490 ⦖);
    makespace 42 ⦕ 51; 452; 459; 466; 482; 491 ⦖;
    492 :≡ (WordFromInt,[491],NONE);
    493 :≡ (Cons 3,[492],NONE);
    494 :≡ (Cons 3,[493; 482],NONE);
    495 :≡ (Cons 0,[],NONE);
    496 :≡ (Const 116,[],NONE);
    497 :≡ (Cons 0,[496; 495],NONE);
    498 :≡ (Const 115,[],NONE);
    499 :≡ (Cons 0,[498; 497],NONE);
    500 :≡ (Const 111,[],NONE);
    501 :≡ (Cons 0,[500; 499],NONE);
    502 :≡ (Const 112,[],NONE);
    503 :≡ (Cons 0,[502; 501],NONE);
    504 :≡ (Const 103,[],NONE);
    505 :≡ (Cons 0,[504; 503],NONE);
    506 :≡ (Const 121,[],NONE);
    507 :≡ (Cons 0,[506; 505],NONE);
    508 :≡ (Cons 2,[507],NONE);
    509 :≡ (Cons 4,[508; 494],NONE);
    510 :≡ (Cons 3,[509; 466],NONE);
    511 :≡ (Cons 3,[510; 459],NONE);
    512 :≡ (Cons 0,[],NONE);
    513 :≡ (Const 65,[],NONE);
    514 :≡ (Cons 0,[513; 512],NONE);
    515 :≡ (Cons 2,[514],NONE);
    516 :≡ (Const 31,[],NONE);
    517 :≡ (Const 268435457,[],NONE);
    518 :≡ (Mult,[517; 516],SOME ⦕ 51; 452; 511; 515; 516; 517 ⦖);
    519 :≡ (Const 268435425,[],NONE);
    520 :≡ (Add,[519; 518],SOME ⦕ 51; 452; 511; 515; 518; 519 ⦖);
    makespace 38 ⦕ 51; 452; 511; 515; 520 ⦖;
    521 :≡ (WordFromInt,[520],NONE);
    522 :≡ (Cons 3,[521],NONE);
    523 :≡ (Cons 3,[522; 515],NONE);
    524 :≡ (Cons 0,[],NONE);
    525 :≡ (Const 84,[],NONE);
    526 :≡ (Cons 0,[525; 524],NONE);
    527 :≡ (Cons 2,[526],NONE);
    528 :≡ (Cons 0,[],NONE);
    529 :≡ (Const 116,[],NONE);
    530 :≡ (Cons 0,[529; 528],NONE);
    531 :≡ (Const 115,[],NONE);
    532 :≡ (Cons 0,[531; 530],NONE);
    533 :≡ (Const 111,[],NONE);
    534 :≡ (Cons 0,[533; 532],NONE);
    535 :≡ (Const 112,[],NONE);
    536 :≡ (Cons 0,[535; 534],NONE);
    537 :≡ (Const 97,[],NONE);
    538 :≡ (Cons 0,[537; 536],NONE);
    539 :≡ (Cons 2,[538],NONE);
    540 :≡ (Cons 3,[539; 527],NONE);
    541 :≡ (Cons 0,[],NONE);
    542 :≡ (Const 118,[],NONE);
    543 :≡ (Cons 0,[542; 541],NONE);
    544 :≡ (Cons 2,[543],NONE);
    545 :≡ (Const 159,[],NONE);
    546 :≡ (Const 268435457,[],NONE);
    547 :≡ (Mult,[546; 545],SOME ⦕ 51; 452; 511; 523; 540; 544; 545; 546 ⦖);
    548 :≡ (Const 268435297,[],NONE);
    549 :≡ (Add,[548; 547],SOME ⦕ 51; 452; 511; 523; 540; 544; 547; 548 ⦖);
    makespace 41 ⦕ 51; 452; 511; 523; 540; 544; 549 ⦖;
    550 :≡ (WordFromInt,[549],NONE);
    551 :≡ (Cons 3,[550],NONE);
    552 :≡ (Cons 3,[551; 544],NONE);
    553 :≡ (Cons 4,[552; 540],NONE);
    554 :≡ (Cons 0,[],NONE);
    555 :≡ (Const 84,[],NONE);
    556 :≡ (Cons 0,[555; 554],NONE);
    557 :≡ (Cons 2,[556],NONE);
    558 :≡ (Cons 0,[],NONE);
    559 :≡ (Const 116,[],NONE);
    560 :≡ (Cons 0,[559; 558],NONE);
    561 :≡ (Const 115,[],NONE);
    562 :≡ (Cons 0,[561; 560],NONE);
    563 :≡ (Const 111,[],NONE);
    564 :≡ (Cons 0,[563; 562],NONE);
    565 :≡ (Const 112,[],NONE);
    566 :≡ (Cons 0,[565; 564],NONE);
    567 :≡ (Const 97,[],NONE);
    568 :≡ (Cons 0,[567; 566],NONE);
    569 :≡ (Cons 2,[568],NONE);
    570 :≡ (Cons 3,[569; 557],NONE);
    571 :≡ (Cons 0,[],NONE);
    572 :≡ (Const 118,[],NONE);
    573 :≡ (Cons 0,[572; 571],NONE);
    574 :≡ (Cons 2,[573],NONE);
    575 :≡ (Const 159,[],NONE);
    576 :≡ (Const 268435457,[],NONE);
    577 :≡
    (Mult,[576; 575],SOME ⦕ 51; 452; 511; 523; 553; 570; 574; 575; 576 ⦖);
    578 :≡ (Const 268435297,[],NONE);
    579 :≡ (Add,[578; 577],SOME ⦕ 51; 452; 511; 523; 553; 570; 574; 577; 578 ⦖);
    makespace 14 ⦕ 51; 452; 511; 523; 553; 570; 574; 579 ⦖;
    580 :≡ (WordFromInt,[579],NONE);
    581 :≡ (Cons 3,[580],NONE);
    582 :≡ (Cons 3,[581; 574],NONE);
    583 :≡ (Cons 4,[582; 570],NONE);
    584 :≡ (Cons 3,[583; 553],NONE);
    585 :≡ (Const 255,[],NONE);
    586 :≡ (Const 268435457,[],NONE);
    587 :≡ (Mult,[586; 585],SOME ⦕ 51; 452; 511; 523; 584; 585; 586 ⦖);
    588 :≡ (Const 268434929,[],NONE);
    589 :≡ (Add,[588; 587],SOME ⦕ 51; 452; 511; 523; 584; 587; 588 ⦖);
    590 :≡ (Const 268435457,[],NONE);
    591 :≡ (Mult,[590; 589],SOME ⦕ 51; 452; 511; 523; 584; 589; 590 ⦖);
    592 :≡ (Const 272,[],NONE);
    593 :≡ (Add,[592; 591],SOME ⦕ 51; 452; 511; 523; 584; 591; 592 ⦖);
    makespace 8 ⦕ 51; 452; 511; 523; 584; 593 ⦖;
    594 :≡ (WordFromInt,[593],NONE);
    595 :≡ (Cons 3,[594],NONE);
    596 :≡ (Cons 3,[595; 584],NONE);
    597 :≡ (Const 159,[],NONE);
    598 :≡ (Const 268435457,[],NONE);
    599 :≡ (Mult,[598; 597],SOME ⦕ 51; 452; 511; 523; 596; 597; 598 ⦖);
    600 :≡ (Const 268435297,[],NONE);
    601 :≡ (Add,[600; 599],SOME ⦕ 51; 452; 511; 523; 596; 599; 600 ⦖);
    makespace 28 ⦕ 51; 452; 511; 523; 596; 601 ⦖;
    602 :≡ (WordFromInt,[601],NONE);
    603 :≡ (Cons 3,[602],NONE);
    604 :≡ (Cons 0,[],NONE);
    605 :≡ (Const 116,[],NONE);
    606 :≡ (Cons 0,[605; 604],NONE);
    607 :≡ (Const 115,[],NONE);
    608 :≡ (Cons 0,[607; 606],NONE);
    609 :≡ (Const 111,[],NONE);
    610 :≡ (Cons 0,[609; 608],NONE);
    611 :≡ (Const 112,[],NONE);
    612 :≡ (Cons 0,[611; 610],NONE);
    613 :≡ (Const 108,[],NONE);
    614 :≡ (Cons 0,[613; 612],NONE);
    615 :≡ (Const 118,[],NONE);
    616 :≡ (Cons 0,[615; 614],NONE);
    617 :≡ (Cons 2,[616],NONE);
    618 :≡ (Cons 3,[617; 603],NONE);
    619 :≡ (Const 159,[],NONE);
    620 :≡ (Const 268435457,[],NONE);
    621 :≡ (Mult,[620; 619],SOME ⦕ 51; 452; 511; 523; 596; 618; 619; 620 ⦖);
    622 :≡ (Const 268435297,[],NONE);
    623 :≡ (Add,[622; 621],SOME ⦕ 51; 452; 511; 523; 596; 618; 621; 622 ⦖);
    makespace 50 ⦕ 51; 452; 511; 523; 596; 618; 623 ⦖;
    624 :≡ (WordFromInt,[623],NONE);
    625 :≡ (Cons 3,[624],NONE);
    626 :≡ (Cons 0,[],NONE);
    627 :≡ (Const 116,[],NONE);
    628 :≡ (Cons 0,[627; 626],NONE);
    629 :≡ (Const 115,[],NONE);
    630 :≡ (Cons 0,[629; 628],NONE);
    631 :≡ (Const 111,[],NONE);
    632 :≡ (Cons 0,[631; 630],NONE);
    633 :≡ (Const 112,[],NONE);
    634 :≡ (Cons 0,[633; 632],NONE);
    635 :≡ (Const 108,[],NONE);
    636 :≡ (Cons 0,[635; 634],NONE);
    637 :≡ (Const 118,[],NONE);
    638 :≡ (Cons 0,[637; 636],NONE);
    639 :≡ (Cons 2,[638],NONE);
    640 :≡ (Cons 3,[639; 625],NONE);
    641 :≡ (Cons 3,[640; 618],NONE);
    642 :≡ (Cons 4,[641; 596],NONE);
    643 :≡ (Cons 2,[642; 523],NONE);
    644 :≡ (Cons 0,[],NONE);
    645 :≡ (Const 84,[],NONE);
    646 :≡ (Cons 0,[645; 644],NONE);
    647 :≡ (Cons 2,[646],NONE);
    648 :≡ (Cons 0,[],NONE);
    649 :≡ (Const 84,[],NONE);
    650 :≡ (Cons 0,[649; 648],NONE);
    651 :≡ (Cons 2,[650],NONE);
    652 :≡ (Cons 3,[651; 647],NONE);
    653 :≡ (Const 31,[],NONE);
    654 :≡ (Const 268435457,[],NONE);
    655 :≡ (Mult,[654; 653],SOME ⦕ 51; 452; 511; 643; 652; 653; 654 ⦖);
    656 :≡ (Const 268435425,[],NONE);
    657 :≡ (Add,[656; 655],SOME ⦕ 51; 452; 511; 643; 652; 655; 656 ⦖);
    makespace 38 ⦕ 51; 452; 511; 643; 652; 657 ⦖;
    658 :≡ (WordFromInt,[657],NONE);
    659 :≡ (Cons 3,[658],NONE);
    660 :≡ (Cons 0,[],NONE);
    661 :≡ (Const 116,[],NONE);
    662 :≡ (Cons 0,[661; 660],NONE);
    663 :≡ (Const 115,[],NONE);
    664 :≡ (Cons 0,[663; 662],NONE);
    665 :≡ (Const 111,[],NONE);
    666 :≡ (Cons 0,[665; 664],NONE);
    667 :≡ (Const 112,[],NONE);
    668 :≡ (Cons 0,[667; 666],NONE);
    669 :≡ (Const 97,[],NONE);
    670 :≡ (Cons 0,[669; 668],NONE);
    671 :≡ (Cons 2,[670],NONE);
    672 :≡ (Cons 2,[671; 659],NONE);
    673 :≡ (Cons 3,[672; 652],NONE);
    674 :≡ (Cons 0,[],NONE);
    675 :≡ (Const 84,[],NONE);
    676 :≡ (Cons 0,[675; 674],NONE);
    677 :≡ (Cons 2,[676],NONE);
    678 :≡ (Cons 0,[],NONE);
    679 :≡ (Const 118,[],NONE);
    680 :≡ (Cons 0,[679; 678],NONE);
    681 :≡ (Cons 2,[680],NONE);
    682 :≡ (Const 159,[],NONE);
    683 :≡ (Const 268435457,[],NONE);
    684 :≡
    (Mult,[683; 682],SOME ⦕ 51; 452; 511; 643; 673; 677; 681; 682; 683 ⦖);
    685 :≡ (Const 268435297,[],NONE);
    686 :≡ (Add,[685; 684],SOME ⦕ 51; 452; 511; 643; 673; 677; 681; 684; 685 ⦖);
    makespace 17 ⦕ 51; 452; 511; 643; 673; 677; 681; 686 ⦖;
    687 :≡ (WordFromInt,[686],NONE);
    688 :≡ (Cons 3,[687],NONE);
    689 :≡ (Cons 3,[688; 681],NONE);
    690 :≡ (Cons 3,[689; 677],NONE);
    691 :≡ (Cons 4,[690; 673],NONE);
    692 :≡ (Cons 4,[691; 643],NONE);
    693 :≡ (Const 159999,[],NONE);
    694 :≡ (Const 268435457,[],NONE);
    695 :≡ (Mult,[694; 693],SOME ⦕ 51; 452; 511; 692; 693; 694 ⦖);
    696 :≡ (Const 268275457,[],NONE);
    697 :≡ (Add,[696; 695],SOME ⦕ 51; 452; 511; 692; 695; 696 ⦖);
    makespace 72 ⦕ 51; 452; 511; 692; 697 ⦖;
    698 :≡ (WordFromInt,[697],NONE);
    699 :≡ (Cons 3,[698],NONE);
    700 :≡ (Cons 3,[699; 692],NONE);
    701 :≡ (Cons 3,[700; 511],NONE);
    702 :≡ (Cons 0,[],NONE);
    703 :≡ (Const 116,[],NONE);
    704 :≡ (Cons 0,[703; 702],NONE);
    705 :≡ (Const 115,[],NONE);
    706 :≡ (Cons 0,[705; 704],NONE);
    707 :≡ (Const 111,[],NONE);
    708 :≡ (Cons 0,[707; 706],NONE);
    709 :≡ (Const 112,[],NONE);
    710 :≡ (Cons 0,[709; 708],NONE);
    711 :≡ (Const 97,[],NONE);
    712 :≡ (Cons 0,[711; 710],NONE);
    713 :≡ (Cons 2,[712],NONE);
    714 :≡ (Const 0,[],NONE);
    715 :≡ (WordFromInt,[714],NONE);
    716 :≡ (Cons 3,[715],NONE);
    717 :≡ (Cons 3,[716; 713],NONE);
    718 :≡ (Cons 1,[717; 701],NONE);
    719 :≡ (Cons 0,[718; 452],NONE);
    720 :≡ (Cons 0,[],NONE);
    721 :≡ (Const 84,[],NONE);
    722 :≡ (Cons 0,[721; 720],NONE);
    723 :≡ (Cons 2,[722],NONE);
    724 :≡ (Cons 0,[],NONE);
    725 :≡ (Const 116,[],NONE);
    726 :≡ (Cons 0,[725; 724],NONE);
    727 :≡ (Const 115,[],NONE);
    728 :≡ (Cons 0,[727; 726],NONE);
    729 :≡ (Const 111,[],NONE);
    730 :≡ (Cons 0,[729; 728],NONE);
    731 :≡ (Const 112,[],NONE);
    732 :≡ (Cons 0,[731; 730],NONE);
    733 :≡ (Const 97,[],NONE);
    734 :≡ (Cons 0,[733; 732],NONE);
    735 :≡ (Cons 2,[734],NONE);
    736 :≡ (Cons 3,[735; 723],NONE);
    737 :≡ (Cons 0,[],NONE);
    738 :≡ (Const 118,[],NONE);
    739 :≡ (Cons 0,[738; 737],NONE);
    740 :≡ (Cons 2,[739],NONE);
    741 :≡ (Const 159,[],NONE);
    742 :≡ (Const 268435457,[],NONE);
    743 :≡ (Mult,[742; 741],SOME ⦕ 51; 719; 736; 740; 741; 742 ⦖);
    744 :≡ (Const 268435297,[],NONE);
    745 :≡ (Add,[744; 743],SOME ⦕ 51; 719; 736; 740; 743; 744 ⦖);
    makespace 31 ⦕ 51; 719; 736; 740; 745 ⦖;
    746 :≡ (WordFromInt,[745],NONE);
    747 :≡ (Cons 3,[746],NONE);
    748 :≡ (Cons 3,[747; 740],NONE);
    749 :≡ (Cons 4,[748; 736],NONE);
    750 :≡ (Cons 0,[],NONE);
    751 :≡ (Const 116,[],NONE);
    752 :≡ (Cons 0,[751; 750],NONE);
    753 :≡ (Const 115,[],NONE);
    754 :≡ (Cons 0,[753; 752],NONE);
    755 :≡ (Const 111,[],NONE);
    756 :≡ (Cons 0,[755; 754],NONE);
    757 :≡ (Const 112,[],NONE);
    758 :≡ (Cons 0,[757; 756],NONE);
    759 :≡ (Const 108,[],NONE);
    760 :≡ (Cons 0,[759; 758],NONE);
    761 :≡ (Const 118,[],NONE);
    762 :≡ (Cons 0,[761; 760],NONE);
    763 :≡ (Cons 2,[762],NONE);
    764 :≡ (Const 159,[],NONE);
    765 :≡ (Const 268435457,[],NONE);
    766 :≡ (Mult,[765; 764],SOME ⦕ 51; 719; 749; 763; 764; 765 ⦖);
    767 :≡ (Const 268435297,[],NONE);
    768 :≡ (Add,[767; 766],SOME ⦕ 51; 719; 749; 763; 766; 767 ⦖);
    makespace 76 ⦕ 51; 719; 749; 763; 768 ⦖;
    769 :≡ (WordFromInt,[768],NONE);
    770 :≡ (Cons 3,[769],NONE);
    771 :≡ (Cons 3,[770; 763],NONE);
    772 :≡ (Cons 3,[771; 749],NONE);
    773 :≡ (Cons 0,[],NONE);
    774 :≡ (Const 116,[],NONE);
    775 :≡ (Cons 0,[774; 773],NONE);
    776 :≡ (Const 115,[],NONE);
    777 :≡ (Cons 0,[776; 775],NONE);
    778 :≡ (Const 111,[],NONE);
    779 :≡ (Cons 0,[778; 777],NONE);
    780 :≡ (Const 112,[],NONE);
    781 :≡ (Cons 0,[780; 779],NONE);
    782 :≡ (Const 97,[],NONE);
    783 :≡ (Cons 0,[782; 781],NONE);
    784 :≡ (Cons 2,[783],NONE);
    785 :≡ (Const 0,[],NONE);
    786 :≡ (WordFromInt,[785],NONE);
    787 :≡ (Cons 3,[786],NONE);
    788 :≡ (Cons 3,[787; 784],NONE);
    789 :≡ (Cons 0,[788; 772],NONE);
    790 :≡ (Cons 0,[],NONE);
    791 :≡ (Const 118,[],NONE);
    792 :≡ (Cons 0,[791; 790],NONE);
    793 :≡ (Cons 2,[792],NONE);
    794 :≡ (Cons 0,[],NONE);
    795 :≡ (Const 116,[],NONE);
    796 :≡ (Cons 0,[795; 794],NONE);
    797 :≡ (Const 115,[],NONE);
    798 :≡ (Cons 0,[797; 796],NONE);
    799 :≡ (Const 111,[],NONE);
    800 :≡ (Cons 0,[799; 798],NONE);
    801 :≡ (Const 112,[],NONE);
    802 :≡ (Cons 0,[801; 800],NONE);
    803 :≡ (Const 108,[],NONE);
    804 :≡ (Cons 0,[803; 802],NONE);
    805 :≡ (Const 118,[],NONE);
    806 :≡ (Cons 0,[805; 804],NONE);
    807 :≡ (Cons 2,[806],NONE);
    808 :≡ (Cons 3,[807; 793],NONE);
    809 :≡ (Cons 1,[808; 789],NONE);
    810 :≡ (Cons 0,[809; 719],NONE);
    811 :≡ (Cons 1,[810; 51],NONE);
    812 :≡ (Const 1599,[],NONE);
    813 :≡ (Const 268435457,[],NONE);
    814 :≡ (Mult,[813; 812],SOME ⦕ 811; 812; 813 ⦖);
    815 :≡ (Const 268433857,[],NONE);
    816 :≡ (Add,[815; 814],SOME ⦕ 811; 814; 815 ⦖);
    makespace 5 ⦕ 811; 816 ⦖;
    817 :≡ (WordFromInt,[816],NONE);
    818 :≡ (Cons 3,[817],NONE);
    819 :≡ (Const 159999,[],NONE);
    820 :≡ (Const 268435457,[],NONE);
    821 :≡ (Mult,[820; 819],SOME ⦕ 811; 818; 819; 820 ⦖);
    822 :≡ (Const 268275457,[],NONE);
    823 :≡ (Add,[822; 821],SOME ⦕ 811; 818; 821; 822 ⦖);
    makespace 16 ⦕ 811; 818; 823 ⦖;
    824 :≡ (WordFromInt,[823],NONE);
    825 :≡ (Cons 3,[824],NONE);
    826 :≡ (Cons 0,[],NONE);
    827 :≡ (Const 115,[],NONE);
    828 :≡ (Cons 0,[827; 826],NONE);
    829 :≡ (Const 112,[],NONE);
    830 :≡ (Cons 0,[829; 828],NONE);
    831 :≡ (Const 101,[],NONE);
    832 :≡ (Cons 0,[831; 830],NONE);
    833 :≡ (Cons 2,[832],NONE);
    834 :≡ (Const 159,[],NONE);
    835 :≡ (Const 268435457,[],NONE);
    836 :≡ (Mult,[835; 834],SOME ⦕ 811; 818; 825; 833; 834; 835 ⦖);
    837 :≡ (Const 268435297,[],NONE);
    838 :≡ (Add,[837; 836],SOME ⦕ 811; 818; 825; 833; 836; 837 ⦖);
    makespace 8 ⦕ 811; 818; 825; 833; 838 ⦖;
    839 :≡ (WordFromInt,[838],NONE);
    840 :≡ (Cons 3,[839],NONE);
    841 :≡ (Cons 3,[840; 833],NONE);
    842 :≡ (Const 255,[],NONE);
    843 :≡ (Const 268435457,[],NONE);
    844 :≡ (Mult,[843; 842],SOME ⦕ 811; 818; 825; 841; 842; 843 ⦖);
    845 :≡ (Const 268434929,[],NONE);
    846 :≡ (Add,[845; 844],SOME ⦕ 811; 818; 825; 841; 844; 845 ⦖);
    847 :≡ (Const 268435457,[],NONE);
    848 :≡ (Mult,[847; 846],SOME ⦕ 811; 818; 825; 841; 846; 847 ⦖);
    849 :≡ (Const 272,[],NONE);
    850 :≡ (Add,[849; 848],SOME ⦕ 811; 818; 825; 841; 848; 849 ⦖);
    makespace 42 ⦕ 811; 818; 825; 841; 850 ⦖;
    851 :≡ (WordFromInt,[850],NONE);
    852 :≡ (Cons 3,[851],NONE);
    853 :≡ (Cons 3,[852; 841],NONE);
    854 :≡ (Cons 0,[],NONE);
    855 :≡ (Const 116,[],NONE);
    856 :≡ (Cons 0,[855; 854],NONE);
    857 :≡ (Const 115,[],NONE);
    858 :≡ (Cons 0,[857; 856],NONE);
    859 :≡ (Const 111,[],NONE);
    860 :≡ (Cons 0,[859; 858],NONE);
    861 :≡ (Const 112,[],NONE);
    862 :≡ (Cons 0,[861; 860],NONE);
    863 :≡ (Const 103,[],NONE);
    864 :≡ (Cons 0,[863; 862],NONE);
    865 :≡ (Const 121,[],NONE);
    866 :≡ (Cons 0,[865; 864],NONE);
    867 :≡ (Cons 2,[866],NONE);
    868 :≡ (Cons 4,[867; 853],NONE);
    869 :≡ (Cons 3,[868; 825],NONE);
    870 :≡ (Cons 3,[869; 818],NONE);
    871 :≡ (Cons 0,[],NONE);
    872 :≡ (Const 66,[],NONE);
    873 :≡ (Cons 0,[872; 871],NONE);
    874 :≡ (Cons 2,[873],NONE);
    875 :≡ (Const 31,[],NONE);
    876 :≡ (Const 268435457,[],NONE);
    877 :≡ (Mult,[876; 875],SOME ⦕ 811; 870; 874; 875; 876 ⦖);
    878 :≡ (Const 268435425,[],NONE);
    879 :≡ (Add,[878; 877],SOME ⦕ 811; 870; 874; 877; 878 ⦖);
    makespace 28 ⦕ 811; 870; 874; 879 ⦖;
    880 :≡ (WordFromInt,[879],NONE);
    881 :≡ (Cons 3,[880],NONE);
    882 :≡ (Cons 3,[881; 874],NONE);
    883 :≡ (Cons 0,[],NONE);
    884 :≡ (Const 116,[],NONE);
    885 :≡ (Cons 0,[884; 883],NONE);
    886 :≡ (Const 115,[],NONE);
    887 :≡ (Cons 0,[886; 885],NONE);
    888 :≡ (Const 111,[],NONE);
    889 :≡ (Cons 0,[888; 887],NONE);
    890 :≡ (Const 112,[],NONE);
    891 :≡ (Cons 0,[890; 889],NONE);
    892 :≡ (Const 104,[],NONE);
    893 :≡ (Cons 0,[892; 891],NONE);
    894 :≡ (Const 118,[],NONE);
    895 :≡ (Cons 0,[894; 893],NONE);
    896 :≡ (Cons 2,[895],NONE);
    897 :≡ (Const 159,[],NONE);
    898 :≡ (Const 268435457,[],NONE);
    899 :≡ (Mult,[898; 897],SOME ⦕ 811; 870; 882; 896; 897; 898 ⦖);
    900 :≡ (Const 268435297,[],NONE);
    901 :≡ (Add,[900; 899],SOME ⦕ 811; 870; 882; 896; 899; 900 ⦖);
    makespace 28 ⦕ 811; 870; 882; 896; 901 ⦖;
    902 :≡ (WordFromInt,[901],NONE);
    903 :≡ (Cons 3,[902],NONE);
    904 :≡ (Cons 3,[903; 896],NONE);
    905 :≡ (Cons 0,[],NONE);
    906 :≡ (Const 116,[],NONE);
    907 :≡ (Cons 0,[906; 905],NONE);
    908 :≡ (Const 115,[],NONE);
    909 :≡ (Cons 0,[908; 907],NONE);
    910 :≡ (Const 111,[],NONE);
    911 :≡ (Cons 0,[910; 909],NONE);
    912 :≡ (Const 112,[],NONE);
    913 :≡ (Cons 0,[912; 911],NONE);
    914 :≡ (Const 104,[],NONE);
    915 :≡ (Cons 0,[914; 913],NONE);
    916 :≡ (Const 118,[],NONE);
    917 :≡ (Cons 0,[916; 915],NONE);
    918 :≡ (Cons 2,[917],NONE);
    919 :≡ (Const 159,[],NONE);
    920 :≡ (Const 268435457,[],NONE);
    921 :≡ (Mult,[920; 919],SOME ⦕ 811; 870; 882; 904; 918; 919; 920 ⦖);
    922 :≡ (Const 268435297,[],NONE);
    923 :≡ (Add,[922; 921],SOME ⦕ 811; 870; 882; 904; 918; 921; 922 ⦖);
    makespace 11 ⦕ 811; 870; 882; 904; 918; 923 ⦖;
    924 :≡ (WordFromInt,[923],NONE);
    925 :≡ (Cons 3,[924],NONE);
    926 :≡ (Cons 3,[925; 918],NONE);
    927 :≡ (Cons 3,[926; 904],NONE);
    928 :≡ (Const 255,[],NONE);
    929 :≡ (Const 268435457,[],NONE);
    930 :≡ (Mult,[929; 928],SOME ⦕ 811; 870; 882; 927; 928; 929 ⦖);
    931 :≡ (Const 268434929,[],NONE);
    932 :≡ (Add,[931; 930],SOME ⦕ 811; 870; 882; 927; 930; 931 ⦖);
    933 :≡ (Const 268435457,[],NONE);
    934 :≡ (Mult,[933; 932],SOME ⦕ 811; 870; 882; 927; 932; 933 ⦖);
    935 :≡ (Const 272,[],NONE);
    936 :≡ (Add,[935; 934],SOME ⦕ 811; 870; 882; 927; 934; 935 ⦖);
    makespace 35 ⦕ 811; 870; 882; 927; 936 ⦖;
    937 :≡ (WordFromInt,[936],NONE);
    938 :≡ (Cons 3,[937],NONE);
    939 :≡ (Cons 3,[938; 927],NONE);
    940 :≡ (Cons 0,[],NONE);
    941 :≡ (Const 116,[],NONE);
    942 :≡ (Cons 0,[941; 940],NONE);
    943 :≡ (Const 115,[],NONE);
    944 :≡ (Cons 0,[943; 942],NONE);
    945 :≡ (Const 111,[],NONE);
    946 :≡ (Cons 0,[945; 944],NONE);
    947 :≡ (Const 112,[],NONE);
    948 :≡ (Cons 0,[947; 946],NONE);
    949 :≡ (Const 97,[],NONE);
    950 :≡ (Cons 0,[949; 948],NONE);
    951 :≡ (Cons 2,[950],NONE);
    952 :≡ (Cons 1,[951],NONE);
    953 :≡ (Cons 0,[],NONE);
    954 :≡ (Const 118,[],NONE);
    955 :≡ (Cons 0,[954; 953],NONE);
    956 :≡ (Cons 2,[955],NONE);
    957 :≡ (Cons 2,[956; 952],NONE);
    958 :≡ (Const 159,[],NONE);
    959 :≡ (Const 268435457,[],NONE);
    960 :≡ (Mult,[959; 958],SOME ⦕ 811; 870; 882; 939; 957; 958; 959 ⦖);
    961 :≡ (Const 268435297,[],NONE);
    962 :≡ (Add,[961; 960],SOME ⦕ 811; 870; 882; 939; 957; 960; 961 ⦖);
    makespace 36 ⦕ 811; 870; 882; 939; 957; 962 ⦖;
    963 :≡ (WordFromInt,[962],NONE);
    964 :≡ (Cons 3,[963],NONE);
    965 :≡ (Cons 3,[964; 957],NONE);
    966 :≡ (Cons 0,[],NONE);
    967 :≡ (Const 84,[],NONE);
    968 :≡ (Cons 0,[967; 966],NONE);
    969 :≡ (Cons 2,[968],NONE);
    970 :≡ (Cons 0,[969; 965],NONE);
    971 :≡ (Cons 0,[],NONE);
    972 :≡ (Const 116,[],NONE);
    973 :≡ (Cons 0,[972; 971],NONE);
    974 :≡ (Const 115,[],NONE);
    975 :≡ (Cons 0,[974; 973],NONE);
    976 :≡ (Const 111,[],NONE);
    977 :≡ (Cons 0,[976; 975],NONE);
    978 :≡ (Const 112,[],NONE);
    979 :≡ (Cons 0,[978; 977],NONE);
    980 :≡ (Const 97,[],NONE);
    981 :≡ (Cons 0,[980; 979],NONE);
    982 :≡ (Cons 2,[981],NONE);
    983 :≡ (Cons 3,[982; 970],NONE);
    984 :≡ (Const 159,[],NONE);
    985 :≡ (Const 268435457,[],NONE);
    986 :≡ (Mult,[985; 984],SOME ⦕ 811; 870; 882; 939; 983; 984; 985 ⦖);
    987 :≡ (Const 268435297,[],NONE);
    988 :≡ (Add,[987; 986],SOME ⦕ 811; 870; 882; 939; 983; 986; 987 ⦖);
    makespace 43 ⦕ 811; 870; 882; 939; 983; 988 ⦖;
    989 :≡ (WordFromInt,[988],NONE);
    990 :≡ (Cons 3,[989],NONE);
    991 :≡ (Cons 0,[],NONE);
    992 :≡ (Const 118,[],NONE);
    993 :≡ (Cons 0,[992; 991],NONE);
    994 :≡ (Cons 2,[993],NONE);
    995 :≡ (Cons 3,[994; 990],NONE);
    996 :≡ (Cons 4,[995; 983],NONE);
    997 :≡ (Cons 0,[],NONE);
    998 :≡ (Const 116,[],NONE);
    999 :≡ (Cons 0,[998; 997],NONE);
    1000 :≡ (Const 115,[],NONE);
    1001 :≡ (Cons 0,[1000; 999],NONE);
    1002 :≡ (Const 111,[],NONE);
    1003 :≡ (Cons 0,[1002; 1001],NONE);
    1004 :≡ (Const 112,[],NONE);
    1005 :≡ (Cons 0,[1004; 1003],NONE);
    1006 :≡ (Const 97,[],NONE);
    1007 :≡ (Cons 0,[1006; 1005],NONE);
    1008 :≡ (Cons 2,[1007],NONE);
    1009 :≡ (Cons 1,[1008],NONE);
    1010 :≡ (Cons 0,[],NONE);
    1011 :≡ (Const 118,[],NONE);
    1012 :≡ (Cons 0,[1011; 1010],NONE);
    1013 :≡ (Cons 2,[1012],NONE);
    1014 :≡ (Cons 2,[1013; 1009],NONE);
    1015 :≡ (Const 159,[],NONE);
    1016 :≡ (Const 268435457,[],NONE);
    1017 :≡
    (Mult,[1016; 1015],SOME ⦕ 811; 870; 882; 939; 996; 1014; 1015; 1016 ⦖);
    1018 :≡ (Const 268435297,[],NONE);
    1019 :≡
    (Add,[1018; 1017],SOME ⦕ 811; 870; 882; 939; 996; 1014; 1017; 1018 ⦖);
    makespace 36 ⦕ 811; 870; 882; 939; 996; 1014; 1019 ⦖;
    1020 :≡ (WordFromInt,[1019],NONE);
    1021 :≡ (Cons 3,[1020],NONE);
    1022 :≡ (Cons 3,[1021; 1014],NONE);
    1023 :≡ (Cons 0,[],NONE);
    1024 :≡ (Const 84,[],NONE);
    1025 :≡ (Cons 0,[1024; 1023],NONE);
    1026 :≡ (Cons 2,[1025],NONE);
    1027 :≡ (Cons 0,[1026; 1022],NONE);
    1028 :≡ (Cons 0,[],NONE);
    1029 :≡ (Const 116,[],NONE);
    1030 :≡ (Cons 0,[1029; 1028],NONE);
    1031 :≡ (Const 115,[],NONE);
    1032 :≡ (Cons 0,[1031; 1030],NONE);
    1033 :≡ (Const 111,[],NONE);
    1034 :≡ (Cons 0,[1033; 1032],NONE);
    1035 :≡ (Const 112,[],NONE);
    1036 :≡ (Cons 0,[1035; 1034],NONE);
    1037 :≡ (Const 97,[],NONE);
    1038 :≡ (Cons 0,[1037; 1036],NONE);
    1039 :≡ (Cons 2,[1038],NONE);
    1040 :≡ (Cons 3,[1039; 1027],NONE);
    1041 :≡ (Const 159,[],NONE);
    1042 :≡ (Const 268435457,[],NONE);
    1043 :≡
    (Mult,[1042; 1041],SOME ⦕ 811; 870; 882; 939; 996; 1040; 1041; 1042 ⦖);
    1044 :≡ (Const 268435297,[],NONE);
    1045 :≡
    (Add,[1044; 1043],SOME ⦕ 811; 870; 882; 939; 996; 1040; 1043; 1044 ⦖);
    makespace 52 ⦕ 811; 870; 882; 939; 996; 1040; 1045 ⦖;
    1046 :≡ (WordFromInt,[1045],NONE);
    1047 :≡ (Cons 3,[1046],NONE);
    1048 :≡ (Cons 0,[],NONE);
    1049 :≡ (Const 118,[],NONE);
    1050 :≡ (Cons 0,[1049; 1048],NONE);
    1051 :≡ (Cons 2,[1050],NONE);
    1052 :≡ (Cons 3,[1051; 1047],NONE);
    1053 :≡ (Cons 4,[1052; 1040],NONE);
    1054 :≡ (Cons 3,[1053; 996],NONE);
    1055 :≡ (Cons 4,[1054; 939],NONE);
    1056 :≡ (Cons 2,[1055; 882],NONE);
    1057 :≡ (Cons 0,[],NONE);
    1058 :≡ (Const 116,[],NONE);
    1059 :≡ (Cons 0,[1058; 1057],NONE);
    1060 :≡ (Const 115,[],NONE);
    1061 :≡ (Cons 0,[1060; 1059],NONE);
    1062 :≡ (Const 111,[],NONE);
    1063 :≡ (Cons 0,[1062; 1061],NONE);
    1064 :≡ (Const 112,[],NONE);
    1065 :≡ (Cons 0,[1064; 1063],NONE);
    1066 :≡ (Const 97,[],NONE);
    1067 :≡ (Cons 0,[1066; 1065],NONE);
    1068 :≡ (Cons 2,[1067],NONE);
    1069 :≡ (Cons 1,[1068],NONE);
    1070 :≡ (Cons 0,[],NONE);
    1071 :≡ (Const 118,[],NONE);
    1072 :≡ (Cons 0,[1071; 1070],NONE);
    1073 :≡ (Cons 2,[1072],NONE);
    1074 :≡ (Cons 2,[1073; 1069],NONE);
    1075 :≡ (Const 159,[],NONE);
    1076 :≡ (Const 268435457,[],NONE);
    1077 :≡ (Mult,[1076; 1075],SOME ⦕ 811; 870; 1056; 1074; 1075; 1076 ⦖);
    1078 :≡ (Const 268435297,[],NONE);
    1079 :≡ (Add,[1078; 1077],SOME ⦕ 811; 870; 1056; 1074; 1077; 1078 ⦖);
    makespace 43 ⦕ 811; 870; 1056; 1074; 1079 ⦖;
    1080 :≡ (WordFromInt,[1079],NONE);
    1081 :≡ (Cons 3,[1080],NONE);
    1082 :≡ (Cons 3,[1081; 1074],NONE);
    1083 :≡ (Cons 0,[],NONE);
    1084 :≡ (Const 84,[],NONE);
    1085 :≡ (Cons 0,[1084; 1083],NONE);
    1086 :≡ (Cons 2,[1085],NONE);
    1087 :≡ (Cons 0,[1086; 1082],NONE);
    1088 :≡ (Cons 0,[],NONE);
    1089 :≡ (Const 116,[],NONE);
    1090 :≡ (Cons 0,[1089; 1088],NONE);
    1091 :≡ (Const 115,[],NONE);
    1092 :≡ (Cons 0,[1091; 1090],NONE);
    1093 :≡ (Const 111,[],NONE);
    1094 :≡ (Cons 0,[1093; 1092],NONE);
    1095 :≡ (Const 112,[],NONE);
    1096 :≡ (Cons 0,[1095; 1094],NONE);
    1097 :≡ (Const 97,[],NONE);
    1098 :≡ (Cons 0,[1097; 1096],NONE);
    1099 :≡ (Cons 2,[1098],NONE);
    1100 :≡ (Cons 1,[1099],NONE);
    1101 :≡ (Cons 0,[],NONE);
    1102 :≡ (Const 118,[],NONE);
    1103 :≡ (Cons 0,[1102; 1101],NONE);
    1104 :≡ (Cons 2,[1103],NONE);
    1105 :≡ (Cons 2,[1104; 1100],NONE);
    1106 :≡ (Const 159,[],NONE);
    1107 :≡ (Const 268435457,[],NONE);
    1108 :≡ (Mult,[1107; 1106],SOME ⦕ 811; 870; 1056; 1087; 1105; 1106; 1107 ⦖);
    1109 :≡ (Const 268435297,[],NONE);
    1110 :≡ (Add,[1109; 1108],SOME ⦕ 811; 870; 1056; 1087; 1105; 1108; 1109 ⦖);
    makespace 19 ⦕ 811; 870; 1056; 1087; 1105; 1110 ⦖;
    1111 :≡ (WordFromInt,[1110],NONE);
    1112 :≡ (Cons 3,[1111],NONE);
    1113 :≡ (Cons 3,[1112; 1105],NONE);
    1114 :≡ (Cons 0,[],NONE);
    1115 :≡ (Const 84,[],NONE);
    1116 :≡ (Cons 0,[1115; 1114],NONE);
    1117 :≡ (Cons 2,[1116],NONE);
    1118 :≡ (Cons 0,[1117; 1113],NONE);
    1119 :≡ (Cons 3,[1118; 1087],NONE);
    1120 :≡ (Const 31,[],NONE);
    1121 :≡ (Const 268435457,[],NONE);
    1122 :≡ (Mult,[1121; 1120],SOME ⦕ 811; 870; 1056; 1119; 1120; 1121 ⦖);
    1123 :≡ (Const 268435425,[],NONE);
    1124 :≡ (Add,[1123; 1122],SOME ⦕ 811; 870; 1056; 1119; 1122; 1123 ⦖);
    makespace 55 ⦕ 811; 870; 1056; 1119; 1124 ⦖;
    1125 :≡ (WordFromInt,[1124],NONE);
    1126 :≡ (Cons 3,[1125],NONE);
    1127 :≡ (Cons 0,[],NONE);
    1128 :≡ (Const 116,[],NONE);
    1129 :≡ (Cons 0,[1128; 1127],NONE);
    1130 :≡ (Const 115,[],NONE);
    1131 :≡ (Cons 0,[1130; 1129],NONE);
    1132 :≡ (Const 111,[],NONE);
    1133 :≡ (Cons 0,[1132; 1131],NONE);
    1134 :≡ (Const 112,[],NONE);
    1135 :≡ (Cons 0,[1134; 1133],NONE);
    1136 :≡ (Const 97,[],NONE);
    1137 :≡ (Cons 0,[1136; 1135],NONE);
    1138 :≡ (Cons 2,[1137],NONE);
    1139 :≡ (Cons 2,[1138; 1126],NONE);
    1140 :≡ (Cons 3,[1139; 1119],NONE);
    1141 :≡ (Cons 0,[],NONE);
    1142 :≡ (Const 116,[],NONE);
    1143 :≡ (Cons 0,[1142; 1141],NONE);
    1144 :≡ (Const 115,[],NONE);
    1145 :≡ (Cons 0,[1144; 1143],NONE);
    1146 :≡ (Const 111,[],NONE);
    1147 :≡ (Cons 0,[1146; 1145],NONE);
    1148 :≡ (Const 112,[],NONE);
    1149 :≡ (Cons 0,[1148; 1147],NONE);
    1150 :≡ (Const 97,[],NONE);
    1151 :≡ (Cons 0,[1150; 1149],NONE);
    1152 :≡ (Cons 2,[1151],NONE);
    1153 :≡ (Cons 1,[1152],NONE);
    1154 :≡ (Cons 0,[],NONE);
    1155 :≡ (Const 118,[],NONE);
    1156 :≡ (Cons 0,[1155; 1154],NONE);
    1157 :≡ (Cons 2,[1156],NONE);
    1158 :≡ (Cons 2,[1157; 1153],NONE);
    1159 :≡ (Const 159,[],NONE);
    1160 :≡ (Const 268435457,[],NONE);
    1161 :≡ (Mult,[1160; 1159],SOME ⦕ 811; 870; 1056; 1140; 1158; 1159; 1160 ⦖);
    1162 :≡ (Const 268435297,[],NONE);
    1163 :≡ (Add,[1162; 1161],SOME ⦕ 811; 870; 1056; 1140; 1158; 1161; 1162 ⦖);
    makespace 21 ⦕ 811; 870; 1056; 1140; 1158; 1163 ⦖;
    1164 :≡ (WordFromInt,[1163],NONE);
    1165 :≡ (Cons 3,[1164],NONE);
    1166 :≡ (Cons 3,[1165; 1158],NONE);
    1167 :≡ (Cons 0,[],NONE);
    1168 :≡ (Const 84,[],NONE);
    1169 :≡ (Cons 0,[1168; 1167],NONE);
    1170 :≡ (Cons 2,[1169],NONE);
    1171 :≡ (Cons 0,[1170; 1166],NONE);
    1172 :≡ (Cons 0,[],NONE);
    1173 :≡ (Const 118,[],NONE);
    1174 :≡ (Cons 0,[1173; 1172],NONE);
    1175 :≡ (Cons 2,[1174],NONE);
    1176 :≡ (Const 159,[],NONE);
    1177 :≡ (Const 268435457,[],NONE);
    1178 :≡
    (Mult,[1177; 1176],SOME ⦕ 811; 870; 1056; 1140; 1171; 1175; 1176; 1177 ⦖);
    1179 :≡ (Const 268435297,[],NONE);
    1180 :≡
    (Add,[1179; 1178],SOME ⦕ 811; 870; 1056; 1140; 1171; 1175; 1178; 1179 ⦖);
    makespace 17 ⦕ 811; 870; 1056; 1140; 1171; 1175; 1180 ⦖;
    1181 :≡ (WordFromInt,[1180],NONE);
    1182 :≡ (Cons 3,[1181],NONE);
    1183 :≡ (Cons 3,[1182; 1175],NONE);
    1184 :≡ (Cons 3,[1183; 1171],NONE);
    1185 :≡ (Cons 4,[1184; 1140],NONE);
    1186 :≡ (Cons 4,[1185; 1056],NONE);
    1187 :≡ (Const 159999,[],NONE);
    1188 :≡ (Const 268435457,[],NONE);
    1189 :≡ (Mult,[1188; 1187],SOME ⦕ 811; 870; 1186; 1187; 1188 ⦖);
    1190 :≡ (Const 268275457,[],NONE);
    1191 :≡ (Add,[1190; 1189],SOME ⦕ 811; 870; 1186; 1189; 1190 ⦖);
    makespace 39 ⦕ 811; 870; 1186; 1191 ⦖;
    1192 :≡ (WordFromInt,[1191],NONE);
    1193 :≡ (Cons 3,[1192],NONE);
    1194 :≡ (Cons 3,[1193; 1186],NONE);
    1195 :≡ (Cons 3,[1194; 870],NONE);
    1196 :≡ (Const 0,[],NONE);
    1197 :≡ (WordFromInt,[1196],NONE);
    1198 :≡ (Cons 3,[1197],NONE);
    1199 :≡ (Cons 0,[],NONE);
    1200 :≡ (Const 116,[],NONE);
    1201 :≡ (Cons 0,[1200; 1199],NONE);
    1202 :≡ (Const 115,[],NONE);
    1203 :≡ (Cons 0,[1202; 1201],NONE);
    1204 :≡ (Const 111,[],NONE);
    1205 :≡ (Cons 0,[1204; 1203],NONE);
    1206 :≡ (Const 112,[],NONE);
    1207 :≡ (Cons 0,[1206; 1205],NONE);
    1208 :≡ (Const 97,[],NONE);
    1209 :≡ (Cons 0,[1208; 1207],NONE);
    1210 :≡ (Cons 2,[1209],NONE);
    1211 :≡ (Cons 4,[1210; 1198],NONE);
    1212 :≡ (Cons 1,[1211; 1195],NONE);
    1213 :≡ (Const 1599,[],NONE);
    1214 :≡ (Const 268435457,[],NONE);
    1215 :≡ (Mult,[1214; 1213],SOME ⦕ 811; 1212; 1213; 1214 ⦖);
    1216 :≡ (Const 268433857,[],NONE);
    1217 :≡ (Add,[1216; 1215],SOME ⦕ 811; 1212; 1215; 1216 ⦖);
    makespace 5 ⦕ 811; 1212; 1217 ⦖;
    1218 :≡ (WordFromInt,[1217],NONE);
    1219 :≡ (Cons 3,[1218],NONE);
    1220 :≡ (Const 159999,[],NONE);
    1221 :≡ (Const 268435457,[],NONE);
    1222 :≡ (Mult,[1221; 1220],SOME ⦕ 811; 1212; 1219; 1220; 1221 ⦖);
    1223 :≡ (Const 268275457,[],NONE);
    1224 :≡ (Add,[1223; 1222],SOME ⦕ 811; 1212; 1219; 1222; 1223 ⦖);
    makespace 16 ⦕ 811; 1212; 1219; 1224 ⦖;
    1225 :≡ (WordFromInt,[1224],NONE);
    1226 :≡ (Cons 3,[1225],NONE);
    1227 :≡ (Cons 0,[],NONE);
    1228 :≡ (Const 115,[],NONE);
    1229 :≡ (Cons 0,[1228; 1227],NONE);
    1230 :≡ (Const 112,[],NONE);
    1231 :≡ (Cons 0,[1230; 1229],NONE);
    1232 :≡ (Const 101,[],NONE);
    1233 :≡ (Cons 0,[1232; 1231],NONE);
    1234 :≡ (Cons 2,[1233],NONE);
    1235 :≡ (Const 159,[],NONE);
    1236 :≡ (Const 268435457,[],NONE);
    1237 :≡
    (Mult,[1236; 1235],SOME ⦕ 811; 1212; 1219; 1226; 1234; 1235; 1236 ⦖);
    1238 :≡ (Const 268435297,[],NONE);
    1239 :≡ (Add,[1238; 1237],SOME ⦕ 811; 1212; 1219; 1226; 1234; 1237; 1238 ⦖);
    makespace 8 ⦕ 811; 1212; 1219; 1226; 1234; 1239 ⦖;
    1240 :≡ (WordFromInt,[1239],NONE);
    1241 :≡ (Cons 3,[1240],NONE);
    1242 :≡ (Cons 3,[1241; 1234],NONE);
    1243 :≡ (Const 255,[],NONE);
    1244 :≡ (Const 268435457,[],NONE);
    1245 :≡
    (Mult,[1244; 1243],SOME ⦕ 811; 1212; 1219; 1226; 1242; 1243; 1244 ⦖);
    1246 :≡ (Const 268434929,[],NONE);
    1247 :≡ (Add,[1246; 1245],SOME ⦕ 811; 1212; 1219; 1226; 1242; 1245; 1246 ⦖);
    1248 :≡ (Const 268435457,[],NONE);
    1249 :≡
    (Mult,[1248; 1247],SOME ⦕ 811; 1212; 1219; 1226; 1242; 1247; 1248 ⦖);
    1250 :≡ (Const 272,[],NONE);
    1251 :≡ (Add,[1250; 1249],SOME ⦕ 811; 1212; 1219; 1226; 1242; 1249; 1250 ⦖);
    makespace 42 ⦕ 811; 1212; 1219; 1226; 1242; 1251 ⦖;
    1252 :≡ (WordFromInt,[1251],NONE);
    1253 :≡ (Cons 3,[1252],NONE);
    1254 :≡ (Cons 3,[1253; 1242],NONE);
    1255 :≡ (Cons 0,[],NONE);
    1256 :≡ (Const 116,[],NONE);
    1257 :≡ (Cons 0,[1256; 1255],NONE);
    1258 :≡ (Const 115,[],NONE);
    1259 :≡ (Cons 0,[1258; 1257],NONE);
    1260 :≡ (Const 111,[],NONE);
    1261 :≡ (Cons 0,[1260; 1259],NONE);
    1262 :≡ (Const 112,[],NONE);
    1263 :≡ (Cons 0,[1262; 1261],NONE);
    1264 :≡ (Const 103,[],NONE);
    1265 :≡ (Cons 0,[1264; 1263],NONE);
    1266 :≡ (Const 121,[],NONE);
    1267 :≡ (Cons 0,[1266; 1265],NONE);
    1268 :≡ (Cons 2,[1267],NONE);
    1269 :≡ (Cons 4,[1268; 1254],NONE);
    1270 :≡ (Cons 3,[1269; 1226],NONE);
    1271 :≡ (Cons 3,[1270; 1219],NONE);
    1272 :≡ (Cons 0,[],NONE);
    1273 :≡ (Const 66,[],NONE);
    1274 :≡ (Cons 0,[1273; 1272],NONE);
    1275 :≡ (Cons 2,[1274],NONE);
    1276 :≡ (Const 31,[],NONE);
    1277 :≡ (Const 268435457,[],NONE);
    1278 :≡ (Mult,[1277; 1276],SOME ⦕ 811; 1212; 1271; 1275; 1276; 1277 ⦖);
    1279 :≡ (Const 268435425,[],NONE);
    1280 :≡ (Add,[1279; 1278],SOME ⦕ 811; 1212; 1271; 1275; 1278; 1279 ⦖);
    makespace 28 ⦕ 811; 1212; 1271; 1275; 1280 ⦖;
    1281 :≡ (WordFromInt,[1280],NONE);
    1282 :≡ (Cons 3,[1281],NONE);
    1283 :≡ (Cons 3,[1282; 1275],NONE);
    1284 :≡ (Cons 0,[],NONE);
    1285 :≡ (Const 116,[],NONE);
    1286 :≡ (Cons 0,[1285; 1284],NONE);
    1287 :≡ (Const 115,[],NONE);
    1288 :≡ (Cons 0,[1287; 1286],NONE);
    1289 :≡ (Const 111,[],NONE);
    1290 :≡ (Cons 0,[1289; 1288],NONE);
    1291 :≡ (Const 112,[],NONE);
    1292 :≡ (Cons 0,[1291; 1290],NONE);
    1293 :≡ (Const 104,[],NONE);
    1294 :≡ (Cons 0,[1293; 1292],NONE);
    1295 :≡ (Const 118,[],NONE);
    1296 :≡ (Cons 0,[1295; 1294],NONE);
    1297 :≡ (Cons 2,[1296],NONE);
    1298 :≡ (Const 159,[],NONE);
    1299 :≡ (Const 268435457,[],NONE);
    1300 :≡
    (Mult,[1299; 1298],SOME ⦕ 811; 1212; 1271; 1283; 1297; 1298; 1299 ⦖);
    1301 :≡ (Const 268435297,[],NONE);
    1302 :≡ (Add,[1301; 1300],SOME ⦕ 811; 1212; 1271; 1283; 1297; 1300; 1301 ⦖);
    makespace 28 ⦕ 811; 1212; 1271; 1283; 1297; 1302 ⦖;
    1303 :≡ (WordFromInt,[1302],NONE);
    1304 :≡ (Cons 3,[1303],NONE);
    1305 :≡ (Cons 3,[1304; 1297],NONE);
    1306 :≡ (Cons 0,[],NONE);
    1307 :≡ (Const 116,[],NONE);
    1308 :≡ (Cons 0,[1307; 1306],NONE);
    1309 :≡ (Const 115,[],NONE);
    1310 :≡ (Cons 0,[1309; 1308],NONE);
    1311 :≡ (Const 111,[],NONE);
    1312 :≡ (Cons 0,[1311; 1310],NONE);
    1313 :≡ (Const 112,[],NONE);
    1314 :≡ (Cons 0,[1313; 1312],NONE);
    1315 :≡ (Const 104,[],NONE);
    1316 :≡ (Cons 0,[1315; 1314],NONE);
    1317 :≡ (Const 118,[],NONE);
    1318 :≡ (Cons 0,[1317; 1316],NONE);
    1319 :≡ (Cons 2,[1318],NONE);
    1320 :≡ (Const 159,[],NONE);
    1321 :≡ (Const 268435457,[],NONE);
    1322 :≡
    (Mult,[1321; 1320],SOME ⦕ 811; 1212; 1271; 1283; 1305; 1319; 1320; 1321 ⦖);
    1323 :≡ (Const 268435297,[],NONE);
    1324 :≡
    (Add,[1323; 1322],SOME ⦕ 811; 1212; 1271; 1283; 1305; 1319; 1322; 1323 ⦖);
    makespace 11 ⦕ 811; 1212; 1271; 1283; 1305; 1319; 1324 ⦖;
    1325 :≡ (WordFromInt,[1324],NONE);
    1326 :≡ (Cons 3,[1325],NONE);
    1327 :≡ (Cons 3,[1326; 1319],NONE);
    1328 :≡ (Cons 3,[1327; 1305],NONE);
    1329 :≡ (Const 255,[],NONE);
    1330 :≡ (Const 268435457,[],NONE);
    1331 :≡
    (Mult,[1330; 1329],SOME ⦕ 811; 1212; 1271; 1283; 1328; 1329; 1330 ⦖);
    1332 :≡ (Const 268434929,[],NONE);
    1333 :≡ (Add,[1332; 1331],SOME ⦕ 811; 1212; 1271; 1283; 1328; 1331; 1332 ⦖);
    1334 :≡ (Const 268435457,[],NONE);
    1335 :≡
    (Mult,[1334; 1333],SOME ⦕ 811; 1212; 1271; 1283; 1328; 1333; 1334 ⦖);
    1336 :≡ (Const 272,[],NONE);
    1337 :≡ (Add,[1336; 1335],SOME ⦕ 811; 1212; 1271; 1283; 1328; 1335; 1336 ⦖);
    makespace 38 ⦕ 811; 1212; 1271; 1283; 1328; 1337 ⦖;
    1338 :≡ (WordFromInt,[1337],NONE);
    1339 :≡ (Cons 3,[1338],NONE);
    1340 :≡ (Cons 3,[1339; 1328],NONE);
    1341 :≡ (Cons 0,[],NONE);
    1342 :≡ (Const 84,[],NONE);
    1343 :≡ (Cons 0,[1342; 1341],NONE);
    1344 :≡ (Cons 2,[1343],NONE);
    1345 :≡ (Cons 0,[],NONE);
    1346 :≡ (Const 116,[],NONE);
    1347 :≡ (Cons 0,[1346; 1345],NONE);
    1348 :≡ (Const 115,[],NONE);
    1349 :≡ (Cons 0,[1348; 1347],NONE);
    1350 :≡ (Const 111,[],NONE);
    1351 :≡ (Cons 0,[1350; 1349],NONE);
    1352 :≡ (Const 112,[],NONE);
    1353 :≡ (Cons 0,[1352; 1351],NONE);
    1354 :≡ (Const 97,[],NONE);
    1355 :≡ (Cons 0,[1354; 1353],NONE);
    1356 :≡ (Cons 2,[1355],NONE);
    1357 :≡ (Cons 3,[1356; 1344],NONE);
    1358 :≡ (Cons 0,[],NONE);
    1359 :≡ (Const 118,[],NONE);
    1360 :≡ (Cons 0,[1359; 1358],NONE);
    1361 :≡ (Cons 2,[1360],NONE);
    1362 :≡ (Const 159,[],NONE);
    1363 :≡ (Const 268435457,[],NONE);
    1364 :≡
    (Mult,[1363; 1362],
     SOME ⦕ 811; 1212; 1271; 1283; 1340; 1357; 1361; 1362; 1363 ⦖);
    1365 :≡ (Const 268435297,[],NONE);
    1366 :≡
    (Add,[1365; 1364],
     SOME ⦕ 811; 1212; 1271; 1283; 1340; 1357; 1361; 1364; 1365 ⦖);
    makespace 41 ⦕ 811; 1212; 1271; 1283; 1340; 1357; 1361; 1366 ⦖;
    1367 :≡ (WordFromInt,[1366],NONE);
    1368 :≡ (Cons 3,[1367],NONE);
    1369 :≡ (Cons 3,[1368; 1361],NONE);
    1370 :≡ (Cons 4,[1369; 1357],NONE);
    1371 :≡ (Cons 0,[],NONE);
    1372 :≡ (Const 84,[],NONE);
    1373 :≡ (Cons 0,[1372; 1371],NONE);
    1374 :≡ (Cons 2,[1373],NONE);
    1375 :≡ (Cons 0,[],NONE);
    1376 :≡ (Const 116,[],NONE);
    1377 :≡ (Cons 0,[1376; 1375],NONE);
    1378 :≡ (Const 115,[],NONE);
    1379 :≡ (Cons 0,[1378; 1377],NONE);
    1380 :≡ (Const 111,[],NONE);
    1381 :≡ (Cons 0,[1380; 1379],NONE);
    1382 :≡ (Const 112,[],NONE);
    1383 :≡ (Cons 0,[1382; 1381],NONE);
    1384 :≡ (Const 97,[],NONE);
    1385 :≡ (Cons 0,[1384; 1383],NONE);
    1386 :≡ (Cons 2,[1385],NONE);
    1387 :≡ (Cons 3,[1386; 1374],NONE);
    1388 :≡ (Cons 0,[],NONE);
    1389 :≡ (Const 118,[],NONE);
    1390 :≡ (Cons 0,[1389; 1388],NONE);
    1391 :≡ (Cons 2,[1390],NONE);
    1392 :≡ (Const 159,[],NONE);
    1393 :≡ (Const 268435457,[],NONE);
    1394 :≡
    (Mult,[1393; 1392],
     SOME ⦕ 811; 1212; 1271; 1283; 1340; 1370; 1387; 1391; 1392; 1393 ⦖);
    1395 :≡ (Const 268435297,[],NONE);
    1396 :≡
    (Add,[1395; 1394],
     SOME ⦕ 811; 1212; 1271; 1283; 1340; 1370; 1387; 1391; 1394; 1395 ⦖);
    makespace 20 ⦕ 811; 1212; 1271; 1283; 1340; 1370; 1387; 1391; 1396 ⦖;
    1397 :≡ (WordFromInt,[1396],NONE);
    1398 :≡ (Cons 3,[1397],NONE);
    1399 :≡ (Cons 3,[1398; 1391],NONE);
    1400 :≡ (Cons 4,[1399; 1387],NONE);
    1401 :≡ (Cons 3,[1400; 1370],NONE);
    1402 :≡ (Cons 4,[1401; 1340],NONE);
    1403 :≡ (Cons 2,[1402; 1283],NONE);
    1404 :≡ (Const 255,[],NONE);
    1405 :≡ (Const 268435457,[],NONE);
    1406 :≡ (Mult,[1405; 1404],SOME ⦕ 811; 1212; 1271; 1403; 1404; 1405 ⦖);
    1407 :≡ (Const 268434929,[],NONE);
    1408 :≡ (Add,[1407; 1406],SOME ⦕ 811; 1212; 1271; 1403; 1406; 1407 ⦖);
    1409 :≡ (Const 268435457,[],NONE);
    1410 :≡ (Mult,[1409; 1408],SOME ⦕ 811; 1212; 1271; 1403; 1408; 1409 ⦖);
    1411 :≡ (Const 272,[],NONE);
    1412 :≡ (Add,[1411; 1410],SOME ⦕ 811; 1212; 1271; 1403; 1410; 1411 ⦖);
    makespace 21 ⦕ 811; 1212; 1271; 1403; 1412 ⦖;
    1413 :≡ (WordFromInt,[1412],NONE);
    1414 :≡ (Cons 3,[1413],NONE);
    1415 :≡ (Cons 3,[1414; 1403],NONE);
    1416 :≡ (Cons 0,[],NONE);
    1417 :≡ (Const 84,[],NONE);
    1418 :≡ (Cons 0,[1417; 1416],NONE);
    1419 :≡ (Cons 2,[1418],NONE);
    1420 :≡ (Cons 0,[],NONE);
    1421 :≡ (Const 84,[],NONE);
    1422 :≡ (Cons 0,[1421; 1420],NONE);
    1423 :≡ (Cons 2,[1422],NONE);
    1424 :≡ (Cons 3,[1423; 1419],NONE);
    1425 :≡ (Const 31,[],NONE);
    1426 :≡ (Const 268435457,[],NONE);
    1427 :≡
    (Mult,[1426; 1425],SOME ⦕ 811; 1212; 1271; 1415; 1424; 1425; 1426 ⦖);
    1428 :≡ (Const 268435425,[],NONE);
    1429 :≡ (Add,[1428; 1427],SOME ⦕ 811; 1212; 1271; 1415; 1424; 1427; 1428 ⦖);
    makespace 38 ⦕ 811; 1212; 1271; 1415; 1424; 1429 ⦖;
    1430 :≡ (WordFromInt,[1429],NONE);
    1431 :≡ (Cons 3,[1430],NONE);
    1432 :≡ (Cons 0,[],NONE);
    1433 :≡ (Const 116,[],NONE);
    1434 :≡ (Cons 0,[1433; 1432],NONE);
    1435 :≡ (Const 115,[],NONE);
    1436 :≡ (Cons 0,[1435; 1434],NONE);
    1437 :≡ (Const 111,[],NONE);
    1438 :≡ (Cons 0,[1437; 1436],NONE);
    1439 :≡ (Const 112,[],NONE);
    1440 :≡ (Cons 0,[1439; 1438],NONE);
    1441 :≡ (Const 97,[],NONE);
    1442 :≡ (Cons 0,[1441; 1440],NONE);
    1443 :≡ (Cons 2,[1442],NONE);
    1444 :≡ (Cons 2,[1443; 1431],NONE);
    1445 :≡ (Cons 3,[1444; 1424],NONE);
    1446 :≡ (Cons 0,[],NONE);
    1447 :≡ (Const 84,[],NONE);
    1448 :≡ (Cons 0,[1447; 1446],NONE);
    1449 :≡ (Cons 2,[1448],NONE);
    1450 :≡ (Cons 0,[],NONE);
    1451 :≡ (Const 118,[],NONE);
    1452 :≡ (Cons 0,[1451; 1450],NONE);
    1453 :≡ (Cons 2,[1452],NONE);
    1454 :≡ (Const 159,[],NONE);
    1455 :≡ (Const 268435457,[],NONE);
    1456 :≡
    (Mult,[1455; 1454],
     SOME ⦕ 811; 1212; 1271; 1415; 1445; 1449; 1453; 1454; 1455 ⦖);
    1457 :≡ (Const 268435297,[],NONE);
    1458 :≡
    (Add,[1457; 1456],
     SOME ⦕ 811; 1212; 1271; 1415; 1445; 1449; 1453; 1456; 1457 ⦖);
    makespace 17 ⦕ 811; 1212; 1271; 1415; 1445; 1449; 1453; 1458 ⦖;
    1459 :≡ (WordFromInt,[1458],NONE);
    1460 :≡ (Cons 3,[1459],NONE);
    1461 :≡ (Cons 3,[1460; 1453],NONE);
    1462 :≡ (Cons 3,[1461; 1449],NONE);
    1463 :≡ (Cons 4,[1462; 1445],NONE);
    1464 :≡ (Cons 4,[1463; 1415],NONE);
    1465 :≡ (Const 159999,[],NONE);
    1466 :≡ (Const 268435457,[],NONE);
    1467 :≡ (Mult,[1466; 1465],SOME ⦕ 811; 1212; 1271; 1464; 1465; 1466 ⦖);
    1468 :≡ (Const 268275457,[],NONE);
    1469 :≡ (Add,[1468; 1467],SOME ⦕ 811; 1212; 1271; 1464; 1467; 1468 ⦖);
    makespace 62 ⦕ 811; 1212; 1271; 1464; 1469 ⦖;
    1470 :≡ (WordFromInt,[1469],NONE);
    1471 :≡ (Cons 3,[1470],NONE);
    1472 :≡ (Cons 3,[1471; 1464],NONE);
    1473 :≡ (Cons 3,[1472; 1271],NONE);
    1474 :≡ (Cons 0,[],NONE);
    1475 :≡ (Const 116,[],NONE);
    1476 :≡ (Cons 0,[1475; 1474],NONE);
    1477 :≡ (Const 115,[],NONE);
    1478 :≡ (Cons 0,[1477; 1476],NONE);
    1479 :≡ (Const 111,[],NONE);
    1480 :≡ (Cons 0,[1479; 1478],NONE);
    1481 :≡ (Const 112,[],NONE);
    1482 :≡ (Cons 0,[1481; 1480],NONE);
    1483 :≡ (Const 97,[],NONE);
    1484 :≡ (Cons 0,[1483; 1482],NONE);
    1485 :≡ (Cons 2,[1484],NONE);
    1486 :≡ (Const 0,[],NONE);
    1487 :≡ (WordFromInt,[1486],NONE);
    1488 :≡ (Cons 3,[1487],NONE);
    1489 :≡ (Cons 3,[1488; 1485],NONE);
    1490 :≡ (Cons 1,[1489; 1473],NONE);
    1491 :≡ (Cons 0,[1490; 1212],NONE);
    1492 :≡ (Cons 0,[],NONE);
    1493 :≡ (Const 116,[],NONE);
    1494 :≡ (Cons 0,[1493; 1492],NONE);
    1495 :≡ (Const 115,[],NONE);
    1496 :≡ (Cons 0,[1495; 1494],NONE);
    1497 :≡ (Const 111,[],NONE);
    1498 :≡ (Cons 0,[1497; 1496],NONE);
    1499 :≡ (Const 112,[],NONE);
    1500 :≡ (Cons 0,[1499; 1498],NONE);
    1501 :≡ (Const 104,[],NONE);
    1502 :≡ (Cons 0,[1501; 1500],NONE);
    1503 :≡ (Const 118,[],NONE);
    1504 :≡ (Cons 0,[1503; 1502],NONE);
    1505 :≡ (Cons 2,[1504],NONE);
    1506 :≡ (Const 159,[],NONE);
    1507 :≡ (Const 268435457,[],NONE);
    1508 :≡ (Mult,[1507; 1506],SOME ⦕ 811; 1491; 1505; 1506; 1507 ⦖);
    1509 :≡ (Const 268435297,[],NONE);
    1510 :≡ (Add,[1509; 1508],SOME ⦕ 811; 1491; 1505; 1508; 1509 ⦖);
    makespace 38 ⦕ 811; 1491; 1505; 1510 ⦖;
    1511 :≡ (WordFromInt,[1510],NONE);
    1512 :≡ (Cons 3,[1511],NONE);
    1513 :≡ (Cons 3,[1512; 1505],NONE);
    1514 :≡ (Cons 0,[],NONE);
    1515 :≡ (Const 84,[],NONE);
    1516 :≡ (Cons 0,[1515; 1514],NONE);
    1517 :≡ (Cons 2,[1516],NONE);
    1518 :≡ (Cons 0,[],NONE);
    1519 :≡ (Const 116,[],NONE);
    1520 :≡ (Cons 0,[1519; 1518],NONE);
    1521 :≡ (Const 115,[],NONE);
    1522 :≡ (Cons 0,[1521; 1520],NONE);
    1523 :≡ (Const 111,[],NONE);
    1524 :≡ (Cons 0,[1523; 1522],NONE);
    1525 :≡ (Const 112,[],NONE);
    1526 :≡ (Cons 0,[1525; 1524],NONE);
    1527 :≡ (Const 97,[],NONE);
    1528 :≡ (Cons 0,[1527; 1526],NONE);
    1529 :≡ (Cons 2,[1528],NONE);
    1530 :≡ (Cons 3,[1529; 1517],NONE);
    1531 :≡ (Cons 0,[],NONE);
    1532 :≡ (Const 118,[],NONE);
    1533 :≡ (Cons 0,[1532; 1531],NONE);
    1534 :≡ (Cons 2,[1533],NONE);
    1535 :≡ (Const 159,[],NONE);
    1536 :≡ (Const 268435457,[],NONE);
    1537 :≡
    (Mult,[1536; 1535],SOME ⦕ 811; 1491; 1513; 1530; 1534; 1535; 1536 ⦖);
    1538 :≡ (Const 268435297,[],NONE);
    1539 :≡ (Add,[1538; 1537],SOME ⦕ 811; 1491; 1513; 1530; 1534; 1537; 1538 ⦖);
    makespace 79 ⦕ 811; 1491; 1513; 1530; 1534; 1539 ⦖;
    1540 :≡ (WordFromInt,[1539],NONE);
    1541 :≡ (Cons 3,[1540],NONE);
    1542 :≡ (Cons 3,[1541; 1534],NONE);
    1543 :≡ (Cons 4,[1542; 1530],NONE);
    1544 :≡ (Cons 3,[1543; 1513],NONE);
    1545 :≡ (Const 0,[],NONE);
    1546 :≡ (WordFromInt,[1545],NONE);
    1547 :≡ (Cons 3,[1546],NONE);
    1548 :≡ (Cons 0,[],NONE);
    1549 :≡ (Const 116,[],NONE);
    1550 :≡ (Cons 0,[1549; 1548],NONE);
    1551 :≡ (Const 115,[],NONE);
    1552 :≡ (Cons 0,[1551; 1550],NONE);
    1553 :≡ (Const 111,[],NONE);
    1554 :≡ (Cons 0,[1553; 1552],NONE);
    1555 :≡ (Const 112,[],NONE);
    1556 :≡ (Cons 0,[1555; 1554],NONE);
    1557 :≡ (Const 97,[],NONE);
    1558 :≡ (Cons 0,[1557; 1556],NONE);
    1559 :≡ (Cons 2,[1558],NONE);
    1560 :≡ (Cons 3,[1559; 1547],NONE);
    1561 :≡ (Cons 0,[1560; 1544],NONE);
    1562 :≡ (Cons 0,[],NONE);
    1563 :≡ (Const 116,[],NONE);
    1564 :≡ (Cons 0,[1563; 1562],NONE);
    1565 :≡ (Const 115,[],NONE);
    1566 :≡ (Cons 0,[1565; 1564],NONE);
    1567 :≡ (Const 111,[],NONE);
    1568 :≡ (Cons 0,[1567; 1566],NONE);
    1569 :≡ (Const 112,[],NONE);
    1570 :≡ (Cons 0,[1569; 1568],NONE);
    1571 :≡ (Const 104,[],NONE);
    1572 :≡ (Cons 0,[1571; 1570],NONE);
    1573 :≡ (Const 118,[],NONE);
    1574 :≡ (Cons 0,[1573; 1572],NONE);
    1575 :≡ (Cons 2,[1574],NONE);
    1576 :≡ (Cons 0,[],NONE);
    1577 :≡ (Const 118,[],NONE);
    1578 :≡ (Cons 0,[1577; 1576],NONE);
    1579 :≡ (Cons 2,[1578],NONE);
    1580 :≡ (Cons 3,[1579; 1575],NONE);
    1581 :≡ (Cons 1,[1580; 1561],NONE);
    1582 :≡ (Cons 0,[1581; 1491],NONE);
    1583 :≡ (Cons 1,[1582; 811],NONE);
    return 1583
  od

bvi_aux_3 [] =
  do
    makespace 85 LN;
    0 :≡ (Cons 0,[],NONE);
    1 :≡ (Const 118,[],NONE);
    2 :≡ (Cons 0,[1; 0],NONE);
    3 :≡ (Cons 2,[2],NONE);
    4 :≡ (Cons 0,[],NONE);
    5 :≡ (Const 116,[],NONE);
    6 :≡ (Cons 0,[5; 4],NONE);
    7 :≡ (Const 115,[],NONE);
    8 :≡ (Cons 0,[7; 6],NONE);
    9 :≡ (Const 111,[],NONE);
    10 :≡ (Cons 0,[9; 8],NONE);
    11 :≡ (Const 112,[],NONE);
    12 :≡ (Cons 0,[11; 10],NONE);
    13 :≡ (Const 118,[],NONE);
    14 :≡ (Cons 0,[13; 12],NONE);
    15 :≡ (Cons 2,[14],NONE);
    16 :≡ (Cons 2,[15; 3],NONE);
    17 :≡ (Const 0,[],NONE);
    18 :≡ (WordFromInt,[17],NONE);
    19 :≡ (Cons 3,[18],NONE);
    20 :≡ (Cons 0,[],NONE);
    21 :≡ (Const 116,[],NONE);
    22 :≡ (Cons 0,[21; 20],NONE);
    23 :≡ (Const 115,[],NONE);
    24 :≡ (Cons 0,[23; 22],NONE);
    25 :≡ (Const 111,[],NONE);
    26 :≡ (Cons 0,[25; 24],NONE);
    27 :≡ (Const 112,[],NONE);
    28 :≡ (Cons 0,[27; 26],NONE);
    29 :≡ (Const 116,[],NONE);
    30 :≡ (Cons 0,[29; 28],NONE);
    31 :≡ (Cons 2,[30],NONE);
    32 :≡ (Cons 2,[31; 19],NONE);
    33 :≡ (Cons 1,[32; 16],NONE);
    34 :≡ (Cons 0,[],NONE);
    35 :≡ (Const 84,[],NONE);
    36 :≡ (Cons 0,[35; 34],NONE);
    37 :≡ (Cons 2,[36],NONE);
    38 :≡ (Const 0,[],NONE);
    39 :≡ (WordFromInt,[38],NONE);
    40 :≡ (Cons 3,[39],NONE);
    41 :≡ (Cons 3,[40; 37],NONE);
    42 :≡ (Cons 0,[],NONE);
    43 :≡ (Const 118,[],NONE);
    44 :≡ (Cons 0,[43; 42],NONE);
    45 :≡ (Cons 2,[44],NONE);
    46 :≡ (Const 0,[],NONE);
    47 :≡ (WordFromInt,[46],NONE);
    48 :≡ (Cons 3,[47],NONE);
    49 :≡ (Cons 3,[48; 45],NONE);
    50 :≡ (Cons 1,[49; 41],NONE);
    51 :≡ (Cons 1,[50; 33],NONE);
    call_bvi_aux_0 (52,⦕ 51 ⦖) [] NONE;
    makespace 30 ⦕ 51; 52 ⦖;
    53 :≡ (Cons 0,[],NONE);
    54 :≡ (Const 84,[],NONE);
    55 :≡ (Cons 0,[54; 53],NONE);
    56 :≡ (Cons 2,[55],NONE);
    57 :≡ (Cons 0,[],NONE);
    58 :≡ (Const 116,[],NONE);
    59 :≡ (Cons 0,[58; 57],NONE);
    60 :≡ (Const 115,[],NONE);
    61 :≡ (Cons 0,[60; 59],NONE);
    62 :≡ (Const 111,[],NONE);
    63 :≡ (Cons 0,[62; 61],NONE);
    64 :≡ (Const 112,[],NONE);
    65 :≡ (Cons 0,[64; 63],NONE);
    66 :≡ (Const 97,[],NONE);
    67 :≡ (Cons 0,[66; 65],NONE);
    68 :≡ (Cons 2,[67],NONE);
    69 :≡ (Cons 3,[68; 56],NONE);
    70 :≡ (Cons 0,[],NONE);
    71 :≡ (Const 118,[],NONE);
    72 :≡ (Cons 0,[71; 70],NONE);
    73 :≡ (Cons 2,[72],NONE);
    74 :≡ (Const 159,[],NONE);
    75 :≡ (Const 268435457,[],NONE);
    76 :≡ (Mult,[75; 74],SOME ⦕ 51; 52; 69; 73; 74; 75 ⦖);
    77 :≡ (Const 268435297,[],NONE);
    78 :≡ (Add,[77; 76],SOME ⦕ 51; 52; 69; 73; 76; 77 ⦖);
    makespace 31 ⦕ 51; 52; 69; 73; 78 ⦖;
    79 :≡ (WordFromInt,[78],NONE);
    80 :≡ (Cons 3,[79],NONE);
    81 :≡ (Cons 3,[80; 73],NONE);
    82 :≡ (Cons 4,[81; 69],NONE);
    83 :≡ (Cons 0,[],NONE);
    84 :≡ (Const 116,[],NONE);
    85 :≡ (Cons 0,[84; 83],NONE);
    86 :≡ (Const 115,[],NONE);
    87 :≡ (Cons 0,[86; 85],NONE);
    88 :≡ (Const 111,[],NONE);
    89 :≡ (Cons 0,[88; 87],NONE);
    90 :≡ (Const 112,[],NONE);
    91 :≡ (Cons 0,[90; 89],NONE);
    92 :≡ (Const 108,[],NONE);
    93 :≡ (Cons 0,[92; 91],NONE);
    94 :≡ (Const 118,[],NONE);
    95 :≡ (Cons 0,[94; 93],NONE);
    96 :≡ (Cons 2,[95],NONE);
    97 :≡ (Const 159,[],NONE);
    98 :≡ (Const 268435457,[],NONE);
    99 :≡ (Mult,[98; 97],SOME ⦕ 51; 52; 82; 96; 97; 98 ⦖);
    100 :≡ (Const 268435297,[],NONE);
    101 :≡ (Add,[100; 99],SOME ⦕ 51; 52; 82; 96; 99; 100 ⦖);
    makespace 76 ⦕ 51; 52; 82; 96; 101 ⦖;
    102 :≡ (WordFromInt,[101],NONE);
    103 :≡ (Cons 3,[102],NONE);
    104 :≡ (Cons 3,[103; 96],NONE);
    105 :≡ (Cons 3,[104; 82],NONE);
    106 :≡ (Cons 0,[],NONE);
    107 :≡ (Const 116,[],NONE);
    108 :≡ (Cons 0,[107; 106],NONE);
    109 :≡ (Const 115,[],NONE);
    110 :≡ (Cons 0,[109; 108],NONE);
    111 :≡ (Const 111,[],NONE);
    112 :≡ (Cons 0,[111; 110],NONE);
    113 :≡ (Const 112,[],NONE);
    114 :≡ (Cons 0,[113; 112],NONE);
    115 :≡ (Const 97,[],NONE);
    116 :≡ (Cons 0,[115; 114],NONE);
    117 :≡ (Cons 2,[116],NONE);
    118 :≡ (Const 0,[],NONE);
    119 :≡ (WordFromInt,[118],NONE);
    120 :≡ (Cons 3,[119],NONE);
    121 :≡ (Cons 3,[120; 117],NONE);
    122 :≡ (Cons 0,[121; 105],NONE);
    123 :≡ (Cons 0,[],NONE);
    124 :≡ (Const 118,[],NONE);
    125 :≡ (Cons 0,[124; 123],NONE);
    126 :≡ (Cons 2,[125],NONE);
    127 :≡ (Cons 0,[],NONE);
    128 :≡ (Const 116,[],NONE);
    129 :≡ (Cons 0,[128; 127],NONE);
    130 :≡ (Const 115,[],NONE);
    131 :≡ (Cons 0,[130; 129],NONE);
    132 :≡ (Const 111,[],NONE);
    133 :≡ (Cons 0,[132; 131],NONE);
    134 :≡ (Const 112,[],NONE);
    135 :≡ (Cons 0,[134; 133],NONE);
    136 :≡ (Const 108,[],NONE);
    137 :≡ (Cons 0,[136; 135],NONE);
    138 :≡ (Const 118,[],NONE);
    139 :≡ (Cons 0,[138; 137],NONE);
    140 :≡ (Cons 2,[139],NONE);
    141 :≡ (Cons 3,[140; 126],NONE);
    142 :≡ (Cons 1,[141; 122],NONE);
    143 :≡ (Cons 0,[142; 52],NONE);
    144 :≡ (Cons 1,[143; 51],NONE);
    call_bvi_aux_1 (145,⦕ 144 ⦖) [] NONE;
    makespace 20 ⦕ 144; 145 ⦖;
    146 :≡ (Cons 0,[],NONE);
    147 :≡ (Const 116,[],NONE);
    148 :≡ (Cons 0,[147; 146],NONE);
    149 :≡ (Const 115,[],NONE);
    150 :≡ (Cons 0,[149; 148],NONE);
    151 :≡ (Const 111,[],NONE);
    152 :≡ (Cons 0,[151; 150],NONE);
    153 :≡ (Const 112,[],NONE);
    154 :≡ (Cons 0,[153; 152],NONE);
    155 :≡ (Const 104,[],NONE);
    156 :≡ (Cons 0,[155; 154],NONE);
    157 :≡ (Const 118,[],NONE);
    158 :≡ (Cons 0,[157; 156],NONE);
    159 :≡ (Cons 2,[158],NONE);
    160 :≡ (Const 159,[],NONE);
    161 :≡ (Const 268435457,[],NONE);
    162 :≡ (Mult,[161; 160],SOME ⦕ 144; 145; 159; 160; 161 ⦖);
    163 :≡ (Const 268435297,[],NONE);
    164 :≡ (Add,[163; 162],SOME ⦕ 144; 145; 159; 162; 163 ⦖);
    makespace 38 ⦕ 144; 145; 159; 164 ⦖;
    165 :≡ (WordFromInt,[164],NONE);
    166 :≡ (Cons 3,[165],NONE);
    167 :≡ (Cons 3,[166; 159],NONE);
    168 :≡ (Cons 0,[],NONE);
    169 :≡ (Const 84,[],NONE);
    170 :≡ (Cons 0,[169; 168],NONE);
    171 :≡ (Cons 2,[170],NONE);
    172 :≡ (Cons 0,[],NONE);
    173 :≡ (Const 116,[],NONE);
    174 :≡ (Cons 0,[173; 172],NONE);
    175 :≡ (Const 115,[],NONE);
    176 :≡ (Cons 0,[175; 174],NONE);
    177 :≡ (Const 111,[],NONE);
    178 :≡ (Cons 0,[177; 176],NONE);
    179 :≡ (Const 112,[],NONE);
    180 :≡ (Cons 0,[179; 178],NONE);
    181 :≡ (Const 97,[],NONE);
    182 :≡ (Cons 0,[181; 180],NONE);
    183 :≡ (Cons 2,[182],NONE);
    184 :≡ (Cons 3,[183; 171],NONE);
    185 :≡ (Cons 0,[],NONE);
    186 :≡ (Const 118,[],NONE);
    187 :≡ (Cons 0,[186; 185],NONE);
    188 :≡ (Cons 2,[187],NONE);
    189 :≡ (Const 159,[],NONE);
    190 :≡ (Const 268435457,[],NONE);
    191 :≡ (Mult,[190; 189],SOME ⦕ 144; 145; 167; 184; 188; 189; 190 ⦖);
    192 :≡ (Const 268435297,[],NONE);
    193 :≡ (Add,[192; 191],SOME ⦕ 144; 145; 167; 184; 188; 191; 192 ⦖);
    makespace 157 ⦕ 144; 145; 167; 184; 188; 193 ⦖;
    194 :≡ (WordFromInt,[193],NONE);
    195 :≡ (Cons 3,[194],NONE);
    196 :≡ (Cons 3,[195; 188],NONE);
    197 :≡ (Cons 4,[196; 184],NONE);
    198 :≡ (Cons 3,[197; 167],NONE);
    199 :≡ (Const 0,[],NONE);
    200 :≡ (WordFromInt,[199],NONE);
    201 :≡ (Cons 3,[200],NONE);
    202 :≡ (Cons 0,[],NONE);
    203 :≡ (Const 116,[],NONE);
    204 :≡ (Cons 0,[203; 202],NONE);
    205 :≡ (Const 115,[],NONE);
    206 :≡ (Cons 0,[205; 204],NONE);
    207 :≡ (Const 111,[],NONE);
    208 :≡ (Cons 0,[207; 206],NONE);
    209 :≡ (Const 112,[],NONE);
    210 :≡ (Cons 0,[209; 208],NONE);
    211 :≡ (Const 97,[],NONE);
    212 :≡ (Cons 0,[211; 210],NONE);
    213 :≡ (Cons 2,[212],NONE);
    214 :≡ (Cons 3,[213; 201],NONE);
    215 :≡ (Cons 0,[214; 198],NONE);
    216 :≡ (Cons 0,[],NONE);
    217 :≡ (Const 116,[],NONE);
    218 :≡ (Cons 0,[217; 216],NONE);
    219 :≡ (Const 115,[],NONE);
    220 :≡ (Cons 0,[219; 218],NONE);
    221 :≡ (Const 111,[],NONE);
    222 :≡ (Cons 0,[221; 220],NONE);
    223 :≡ (Const 112,[],NONE);
    224 :≡ (Cons 0,[223; 222],NONE);
    225 :≡ (Const 104,[],NONE);
    226 :≡ (Cons 0,[225; 224],NONE);
    227 :≡ (Const 118,[],NONE);
    228 :≡ (Cons 0,[227; 226],NONE);
    229 :≡ (Cons 2,[228],NONE);
    230 :≡ (Cons 0,[],NONE);
    231 :≡ (Const 118,[],NONE);
    232 :≡ (Cons 0,[231; 230],NONE);
    233 :≡ (Cons 2,[232],NONE);
    234 :≡ (Cons 3,[233; 229],NONE);
    235 :≡ (Cons 1,[234; 215],NONE);
    236 :≡ (Cons 0,[235; 145],NONE);
    237 :≡ (Cons 1,[236; 144],NONE);
    238 :≡ (Cons 0,[],NONE);
    239 :≡ (Const 65,[],NONE);
    240 :≡ (Cons 0,[239; 238],NONE);
    241 :≡ (Cons 2,[240],NONE);
    242 :≡ (Cons 0,[],NONE);
    243 :≡ (Const 116,[],NONE);
    244 :≡ (Cons 0,[243; 242],NONE);
    245 :≡ (Const 115,[],NONE);
    246 :≡ (Cons 0,[245; 244],NONE);
    247 :≡ (Const 111,[],NONE);
    248 :≡ (Cons 0,[247; 246],NONE);
    249 :≡ (Const 112,[],NONE);
    250 :≡ (Cons 0,[249; 248],NONE);
    251 :≡ (Const 97,[],NONE);
    252 :≡ (Cons 0,[251; 250],NONE);
    253 :≡ (Cons 2,[252],NONE);
    254 :≡ (Cons 3,[253; 241],NONE);
    255 :≡ (Cons 0,[],NONE);
    256 :≡ (Const 116,[],NONE);
    257 :≡ (Cons 0,[256; 255],NONE);
    258 :≡ (Const 115,[],NONE);
    259 :≡ (Cons 0,[258; 257],NONE);
    260 :≡ (Const 111,[],NONE);
    261 :≡ (Cons 0,[260; 259],NONE);
    262 :≡ (Const 112,[],NONE);
    263 :≡ (Cons 0,[262; 261],NONE);
    264 :≡ (Const 97,[],NONE);
    265 :≡ (Cons 0,[264; 263],NONE);
    266 :≡ (Cons 2,[265],NONE);
    267 :≡ (Cons 0,[],NONE);
    268 :≡ (Const 66,[],NONE);
    269 :≡ (Cons 0,[268; 267],NONE);
    270 :≡ (Cons 2,[269],NONE);
    271 :≡ (Cons 1,[270],NONE);
    272 :≡ (Cons 3,[271; 266],NONE);
    273 :≡ (Cons 1,[272; 254],NONE);
    274 :≡ (Cons 1,[273; 237],NONE);
    275 :≡ (Cons 0,[],NONE);
    276 :≡ (Const 116,[],NONE);
    277 :≡ (Cons 0,[276; 275],NONE);
    278 :≡ (Const 115,[],NONE);
    279 :≡ (Cons 0,[278; 277],NONE);
    280 :≡ (Const 111,[],NONE);
    281 :≡ (Cons 0,[280; 279],NONE);
    282 :≡ (Const 112,[],NONE);
    283 :≡ (Cons 0,[282; 281],NONE);
    284 :≡ (Const 108,[],NONE);
    285 :≡ (Cons 0,[284; 283],NONE);
    286 :≡ (Const 118,[],NONE);
    287 :≡ (Cons 0,[286; 285],NONE);
    288 :≡ (Cons 2,[287],NONE);
    289 :≡ (Const 255,[],NONE);
    290 :≡ (Const 268435457,[],NONE);
    291 :≡ (Mult,[290; 289],SOME ⦕ 274; 288; 289; 290 ⦖);
    292 :≡ (Const 268434929,[],NONE);
    293 :≡ (Add,[292; 291],SOME ⦕ 274; 288; 291; 292 ⦖);
    294 :≡ (Const 268435457,[],NONE);
    295 :≡ (Mult,[294; 293],SOME ⦕ 274; 288; 293; 294 ⦖);
    296 :≡ (Const 272,[],NONE);
    297 :≡ (Add,[296; 295],SOME ⦕ 274; 288; 295; 296 ⦖);
    makespace 31 ⦕ 274; 288; 297 ⦖;
    298 :≡ (WordFromInt,[297],NONE);
    299 :≡ (Cons 3,[298],NONE);
    300 :≡ (Cons 3,[299; 288],NONE);
    301 :≡ (Cons 0,[],NONE);
    302 :≡ (Const 116,[],NONE);
    303 :≡ (Cons 0,[302; 301],NONE);
    304 :≡ (Const 115,[],NONE);
    305 :≡ (Cons 0,[304; 303],NONE);
    306 :≡ (Const 111,[],NONE);
    307 :≡ (Cons 0,[306; 305],NONE);
    308 :≡ (Const 112,[],NONE);
    309 :≡ (Cons 0,[308; 307],NONE);
    310 :≡ (Const 104,[],NONE);
    311 :≡ (Cons 0,[310; 309],NONE);
    312 :≡ (Const 118,[],NONE);
    313 :≡ (Cons 0,[312; 311],NONE);
    314 :≡ (Cons 2,[313],NONE);
    315 :≡ (Cons 4,[314; 300],NONE);
    316 :≡ (Const 159,[],NONE);
    317 :≡ (Const 268435457,[],NONE);
    318 :≡ (Mult,[317; 316],SOME ⦕ 274; 315; 316; 317 ⦖);
    319 :≡ (Const 268435297,[],NONE);
    320 :≡ (Add,[319; 318],SOME ⦕ 274; 315; 318; 319 ⦖);
    makespace 44 ⦕ 274; 315; 320 ⦖;
    321 :≡ (WordFromInt,[320],NONE);
    322 :≡ (Cons 3,[321],NONE);
    323 :≡ (Cons 3,[322; 315],NONE);
    324 :≡ (Cons 0,[],NONE);
    325 :≡ (Const 84,[],NONE);
    326 :≡ (Cons 0,[325; 324],NONE);
    327 :≡ (Cons 2,[326],NONE);
    328 :≡ (Cons 0,[],NONE);
    329 :≡ (Const 66,[],NONE);
    330 :≡ (Cons 0,[329; 328],NONE);
    331 :≡ (Cons 2,[330],NONE);
    332 :≡ (Cons 3,[331; 327],NONE);
    333 :≡ (Cons 3,[332; 323],NONE);
    334 :≡ (Cons 0,[],NONE);
    335 :≡ (Const 116,[],NONE);
    336 :≡ (Cons 0,[335; 334],NONE);
    337 :≡ (Const 115,[],NONE);
    338 :≡ (Cons 0,[337; 336],NONE);
    339 :≡ (Const 111,[],NONE);
    340 :≡ (Cons 0,[339; 338],NONE);
    341 :≡ (Const 112,[],NONE);
    342 :≡ (Cons 0,[341; 340],NONE);
    343 :≡ (Const 108,[],NONE);
    344 :≡ (Cons 0,[343; 342],NONE);
    345 :≡ (Const 118,[],NONE);
    346 :≡ (Cons 0,[345; 344],NONE);
    347 :≡ (Cons 2,[346],NONE);
    348 :≡ (Const 255,[],NONE);
    349 :≡ (Const 268435457,[],NONE);
    350 :≡ (Mult,[349; 348],SOME ⦕ 274; 333; 347; 348; 349 ⦖);
    351 :≡ (Const 268434929,[],NONE);
    352 :≡ (Add,[351; 350],SOME ⦕ 274; 333; 347; 350; 351 ⦖);
    353 :≡ (Const 268435457,[],NONE);
    354 :≡ (Mult,[353; 352],SOME ⦕ 274; 333; 347; 352; 353 ⦖);
    355 :≡ (Const 272,[],NONE);
    356 :≡ (Add,[355; 354],SOME ⦕ 274; 333; 347; 354; 355 ⦖);
    makespace 31 ⦕ 274; 333; 347; 356 ⦖;
    357 :≡ (WordFromInt,[356],NONE);
    358 :≡ (Cons 3,[357],NONE);
    359 :≡ (Cons 3,[358; 347],NONE);
    360 :≡ (Cons 0,[],NONE);
    361 :≡ (Const 116,[],NONE);
    362 :≡ (Cons 0,[361; 360],NONE);
    363 :≡ (Const 115,[],NONE);
    364 :≡ (Cons 0,[363; 362],NONE);
    365 :≡ (Const 111,[],NONE);
    366 :≡ (Cons 0,[365; 364],NONE);
    367 :≡ (Const 112,[],NONE);
    368 :≡ (Cons 0,[367; 366],NONE);
    369 :≡ (Const 104,[],NONE);
    370 :≡ (Cons 0,[369; 368],NONE);
    371 :≡ (Const 118,[],NONE);
    372 :≡ (Cons 0,[371; 370],NONE);
    373 :≡ (Cons 2,[372],NONE);
    374 :≡ (Cons 4,[373; 359],NONE);
    375 :≡ (Const 159,[],NONE);
    376 :≡ (Const 268435457,[],NONE);
    377 :≡ (Mult,[376; 375],SOME ⦕ 274; 333; 374; 375; 376 ⦖);
    378 :≡ (Const 268435297,[],NONE);
    379 :≡ (Add,[378; 377],SOME ⦕ 274; 333; 374; 377; 378 ⦖);
    makespace 166 ⦕ 274; 333; 374; 379 ⦖;
    380 :≡ (WordFromInt,[379],NONE);
    381 :≡ (Cons 3,[380],NONE);
    382 :≡ (Cons 3,[381; 374],NONE);
    383 :≡ (Cons 0,[],NONE);
    384 :≡ (Const 84,[],NONE);
    385 :≡ (Cons 0,[384; 383],NONE);
    386 :≡ (Cons 2,[385],NONE);
    387 :≡ (Cons 0,[],NONE);
    388 :≡ (Const 65,[],NONE);
    389 :≡ (Cons 0,[388; 387],NONE);
    390 :≡ (Cons 2,[389],NONE);
    391 :≡ (Cons 3,[390; 386],NONE);
    392 :≡ (Cons 3,[391; 382],NONE);
    393 :≡ (Cons 1,[392; 333],NONE);
    394 :≡ (Cons 0,[],NONE);
    395 :≡ (Const 116,[],NONE);
    396 :≡ (Cons 0,[395; 394],NONE);
    397 :≡ (Const 115,[],NONE);
    398 :≡ (Cons 0,[397; 396],NONE);
    399 :≡ (Const 111,[],NONE);
    400 :≡ (Cons 0,[399; 398],NONE);
    401 :≡ (Const 112,[],NONE);
    402 :≡ (Cons 0,[401; 400],NONE);
    403 :≡ (Const 104,[],NONE);
    404 :≡ (Cons 0,[403; 402],NONE);
    405 :≡ (Const 118,[],NONE);
    406 :≡ (Cons 0,[405; 404],NONE);
    407 :≡ (Cons 2,[406],NONE);
    408 :≡ (Cons 0,[],NONE);
    409 :≡ (Const 118,[],NONE);
    410 :≡ (Cons 0,[409; 408],NONE);
    411 :≡ (Cons 2,[410],NONE);
    412 :≡ (Cons 3,[411; 407],NONE);
    413 :≡ (Cons 0,[],NONE);
    414 :≡ (Const 118,[],NONE);
    415 :≡ (Cons 0,[414; 413],NONE);
    416 :≡ (Cons 2,[415],NONE);
    417 :≡ (Cons 0,[],NONE);
    418 :≡ (Const 116,[],NONE);
    419 :≡ (Cons 0,[418; 417],NONE);
    420 :≡ (Const 115,[],NONE);
    421 :≡ (Cons 0,[420; 419],NONE);
    422 :≡ (Const 111,[],NONE);
    423 :≡ (Cons 0,[422; 421],NONE);
    424 :≡ (Const 112,[],NONE);
    425 :≡ (Cons 0,[424; 423],NONE);
    426 :≡ (Const 108,[],NONE);
    427 :≡ (Cons 0,[426; 425],NONE);
    428 :≡ (Const 118,[],NONE);
    429 :≡ (Cons 0,[428; 427],NONE);
    430 :≡ (Cons 2,[429],NONE);
    431 :≡ (Cons 3,[430; 416],NONE);
    432 :≡ (Cons 1,[431; 412],NONE);
    433 :≡ (Cons 0,[432; 393],NONE);
    434 :≡ (Cons 0,[],NONE);
    435 :≡ (Const 116,[],NONE);
    436 :≡ (Cons 0,[435; 434],NONE);
    437 :≡ (Const 115,[],NONE);
    438 :≡ (Cons 0,[437; 436],NONE);
    439 :≡ (Const 111,[],NONE);
    440 :≡ (Cons 0,[439; 438],NONE);
    441 :≡ (Const 112,[],NONE);
    442 :≡ (Cons 0,[441; 440],NONE);
    443 :≡ (Const 104,[],NONE);
    444 :≡ (Cons 0,[443; 442],NONE);
    445 :≡ (Const 118,[],NONE);
    446 :≡ (Cons 0,[445; 444],NONE);
    447 :≡ (Cons 2,[446],NONE);
    448 :≡ (Cons 0,[],NONE);
    449 :≡ (Const 116,[],NONE);
    450 :≡ (Cons 0,[449; 448],NONE);
    451 :≡ (Const 115,[],NONE);
    452 :≡ (Cons 0,[451; 450],NONE);
    453 :≡ (Const 111,[],NONE);
    454 :≡ (Cons 0,[453; 452],NONE);
    455 :≡ (Const 112,[],NONE);
    456 :≡ (Cons 0,[455; 454],NONE);
    457 :≡ (Const 108,[],NONE);
    458 :≡ (Cons 0,[457; 456],NONE);
    459 :≡ (Const 118,[],NONE);
    460 :≡ (Cons 0,[459; 458],NONE);
    461 :≡ (Cons 2,[460],NONE);
    462 :≡ (Cons 3,[461; 447],NONE);
    463 :≡ (Cons 1,[462; 433],NONE);
    464 :≡ (Cons 0,[],NONE);
    465 :≡ (Const 116,[],NONE);
    466 :≡ (Cons 0,[465; 464],NONE);
    467 :≡ (Const 115,[],NONE);
    468 :≡ (Cons 0,[467; 466],NONE);
    469 :≡ (Const 111,[],NONE);
    470 :≡ (Cons 0,[469; 468],NONE);
    471 :≡ (Const 112,[],NONE);
    472 :≡ (Cons 0,[471; 470],NONE);
    473 :≡ (Const 108,[],NONE);
    474 :≡ (Cons 0,[473; 472],NONE);
    475 :≡ (Const 118,[],NONE);
    476 :≡ (Cons 0,[475; 474],NONE);
    477 :≡ (Cons 2,[476],NONE);
    478 :≡ (Const 0,[],NONE);
    479 :≡ (WordFromInt,[478],NONE);
    480 :≡ (Cons 3,[479],NONE);
    481 :≡ (Cons 3,[480; 477],NONE);
    482 :≡ (Cons 1,[481; 463],NONE);
    483 :≡ (Const 1599,[],NONE);
    484 :≡ (Const 268435457,[],NONE);
    485 :≡ (Mult,[484; 483],SOME ⦕ 274; 482; 483; 484 ⦖);
    486 :≡ (Const 268433857,[],NONE);
    487 :≡ (Add,[486; 485],SOME ⦕ 274; 482; 485; 486 ⦖);
    makespace 16 ⦕ 274; 482; 487 ⦖;
    488 :≡ (WordFromInt,[487],NONE);
    489 :≡ (Cons 3,[488],NONE);
    490 :≡ (Cons 0,[],NONE);
    491 :≡ (Const 115,[],NONE);
    492 :≡ (Cons 0,[491; 490],NONE);
    493 :≡ (Const 112,[],NONE);
    494 :≡ (Cons 0,[493; 492],NONE);
    495 :≡ (Const 101,[],NONE);
    496 :≡ (Cons 0,[495; 494],NONE);
    497 :≡ (Cons 2,[496],NONE);
    498 :≡ (Const 3199,[],NONE);
    499 :≡ (Const 268435457,[],NONE);
    500 :≡ (Mult,[499; 498],SOME ⦕ 274; 482; 489; 497; 498; 499 ⦖);
    501 :≡ (Const 268432257,[],NONE);
    502 :≡ (Add,[501; 500],SOME ⦕ 274; 482; 489; 497; 500; 501 ⦖);
    makespace 59 ⦕ 274; 482; 489; 497; 502 ⦖;
    503 :≡ (WordFromInt,[502],NONE);
    504 :≡ (Cons 3,[503],NONE);
    505 :≡ (Cons 3,[504; 497],NONE);
    506 :≡ (Cons 0,[],NONE);
    507 :≡ (Const 115,[],NONE);
    508 :≡ (Cons 0,[507; 506],NONE);
    509 :≡ (Const 112,[],NONE);
    510 :≡ (Cons 0,[509; 508],NONE);
    511 :≡ (Const 101,[],NONE);
    512 :≡ (Cons 0,[511; 510],NONE);
    513 :≡ (Cons 2,[512],NONE);
    514 :≡ (Cons 0,[],NONE);
    515 :≡ (Const 115,[],NONE);
    516 :≡ (Cons 0,[515; 514],NONE);
    517 :≡ (Const 112,[],NONE);
    518 :≡ (Cons 0,[517; 516],NONE);
    519 :≡ (Const 101,[],NONE);
    520 :≡ (Cons 0,[519; 518],NONE);
    521 :≡ (Cons 2,[520],NONE);
    522 :≡ (Cons 3,[521; 513],NONE);
    523 :≡ (Cons 0,[],NONE);
    524 :≡ (Const 116,[],NONE);
    525 :≡ (Cons 0,[524; 523],NONE);
    526 :≡ (Const 115,[],NONE);
    527 :≡ (Cons 0,[526; 525],NONE);
    528 :≡ (Const 111,[],NONE);
    529 :≡ (Cons 0,[528; 527],NONE);
    530 :≡ (Const 112,[],NONE);
    531 :≡ (Cons 0,[530; 529],NONE);
    532 :≡ (Const 107,[],NONE);
    533 :≡ (Cons 0,[532; 531],NONE);
    534 :≡ (Cons 2,[533],NONE);
    535 :≡ (Cons 3,[534; 522],NONE);
    536 :≡ (Cons 4,[535; 505],NONE);
    537 :≡ (Cons 3,[536; 489],NONE);
    538 :≡ (Const 159,[],NONE);
    539 :≡ (Const 268435457,[],NONE);
    540 :≡ (Mult,[539; 538],SOME ⦕ 274; 482; 537; 538; 539 ⦖);
    541 :≡ (Const 268435297,[],NONE);
    542 :≡ (Add,[541; 540],SOME ⦕ 274; 482; 537; 540; 541 ⦖);
    makespace 5 ⦕ 274; 482; 537; 542 ⦖;
    543 :≡ (WordFromInt,[542],NONE);
    544 :≡ (Cons 3,[543],NONE);
    545 :≡ (Const 1599,[],NONE);
    546 :≡ (Const 268435457,[],NONE);
    547 :≡ (Mult,[546; 545],SOME ⦕ 274; 482; 537; 544; 545; 546 ⦖);
    548 :≡ (Const 268433857,[],NONE);
    549 :≡ (Add,[548; 547],SOME ⦕ 274; 482; 537; 544; 547; 548 ⦖);
    makespace 25 ⦕ 274; 482; 537; 544; 549 ⦖;
    550 :≡ (WordFromInt,[549],NONE);
    551 :≡ (Cons 3,[550],NONE);
    552 :≡ (Cons 0,[],NONE);
    553 :≡ (Const 116,[],NONE);
    554 :≡ (Cons 0,[553; 552],NONE);
    555 :≡ (Const 115,[],NONE);
    556 :≡ (Cons 0,[555; 554],NONE);
    557 :≡ (Const 111,[],NONE);
    558 :≡ (Cons 0,[557; 556],NONE);
    559 :≡ (Const 112,[],NONE);
    560 :≡ (Cons 0,[559; 558],NONE);
    561 :≡ (Const 103,[],NONE);
    562 :≡ (Cons 0,[561; 560],NONE);
    563 :≡ (Const 120,[],NONE);
    564 :≡ (Cons 0,[563; 562],NONE);
    565 :≡ (Cons 2,[564],NONE);
    566 :≡ (Const 31,[],NONE);
    567 :≡ (Const 268435457,[],NONE);
    568 :≡ (Mult,[567; 566],SOME ⦕ 274; 482; 537; 544; 551; 565; 566; 567 ⦖);
    569 :≡ (Const 268435425,[],NONE);
    570 :≡ (Add,[569; 568],SOME ⦕ 274; 482; 537; 544; 551; 565; 568; 569 ⦖);
    makespace 14 ⦕ 274; 482; 537; 544; 551; 565; 570 ⦖;
    571 :≡ (WordFromInt,[570],NONE);
    572 :≡ (Cons 3,[571],NONE);
    573 :≡ (Cons 3,[572; 565],NONE);
    574 :≡ (Cons 3,[573; 551],NONE);
    575 :≡ (Cons 3,[574; 544],NONE);
    576 :≡ (Const 255,[],NONE);
    577 :≡ (Const 268435457,[],NONE);
    578 :≡ (Mult,[577; 576],SOME ⦕ 274; 482; 537; 575; 576; 577 ⦖);
    579 :≡ (Const 268434929,[],NONE);
    580 :≡ (Add,[579; 578],SOME ⦕ 274; 482; 537; 575; 578; 579 ⦖);
    581 :≡ (Const 268435457,[],NONE);
    582 :≡ (Mult,[581; 580],SOME ⦕ 274; 482; 537; 575; 580; 581 ⦖);
    583 :≡ (Const 272,[],NONE);
    584 :≡ (Add,[583; 582],SOME ⦕ 274; 482; 537; 575; 582; 583 ⦖);
    makespace 123 ⦕ 274; 482; 537; 575; 584 ⦖;
    585 :≡ (WordFromInt,[584],NONE);
    586 :≡ (Cons 3,[585],NONE);
    587 :≡ (Cons 3,[586; 575],NONE);
    588 :≡ (Cons 0,[],NONE);
    589 :≡ (Const 116,[],NONE);
    590 :≡ (Cons 0,[589; 588],NONE);
    591 :≡ (Const 115,[],NONE);
    592 :≡ (Cons 0,[591; 590],NONE);
    593 :≡ (Const 111,[],NONE);
    594 :≡ (Cons 0,[593; 592],NONE);
    595 :≡ (Const 112,[],NONE);
    596 :≡ (Cons 0,[595; 594],NONE);
    597 :≡ (Const 103,[],NONE);
    598 :≡ (Cons 0,[597; 596],NONE);
    599 :≡ (Const 121,[],NONE);
    600 :≡ (Cons 0,[599; 598],NONE);
    601 :≡ (Cons 2,[600],NONE);
    602 :≡ (Cons 0,[],NONE);
    603 :≡ (Const 116,[],NONE);
    604 :≡ (Cons 0,[603; 602],NONE);
    605 :≡ (Const 115,[],NONE);
    606 :≡ (Cons 0,[605; 604],NONE);
    607 :≡ (Const 111,[],NONE);
    608 :≡ (Cons 0,[607; 606],NONE);
    609 :≡ (Const 112,[],NONE);
    610 :≡ (Cons 0,[609; 608],NONE);
    611 :≡ (Const 103,[],NONE);
    612 :≡ (Cons 0,[611; 610],NONE);
    613 :≡ (Const 121,[],NONE);
    614 :≡ (Cons 0,[613; 612],NONE);
    615 :≡ (Cons 2,[614],NONE);
    616 :≡ (Cons 3,[615; 601],NONE);
    617 :≡ (Cons 0,[],NONE);
    618 :≡ (Const 116,[],NONE);
    619 :≡ (Cons 0,[618; 617],NONE);
    620 :≡ (Const 115,[],NONE);
    621 :≡ (Cons 0,[620; 619],NONE);
    622 :≡ (Const 111,[],NONE);
    623 :≡ (Cons 0,[622; 621],NONE);
    624 :≡ (Const 112,[],NONE);
    625 :≡ (Cons 0,[624; 623],NONE);
    626 :≡ (Const 103,[],NONE);
    627 :≡ (Cons 0,[626; 625],NONE);
    628 :≡ (Const 120,[],NONE);
    629 :≡ (Cons 0,[628; 627],NONE);
    630 :≡ (Cons 2,[629],NONE);
    631 :≡ (Cons 0,[],NONE);
    632 :≡ (Const 116,[],NONE);
    633 :≡ (Cons 0,[632; 631],NONE);
    634 :≡ (Const 115,[],NONE);
    635 :≡ (Cons 0,[634; 633],NONE);
    636 :≡ (Const 111,[],NONE);
    637 :≡ (Cons 0,[636; 635],NONE);
    638 :≡ (Const 112,[],NONE);
    639 :≡ (Cons 0,[638; 637],NONE);
    640 :≡ (Const 103,[],NONE);
    641 :≡ (Cons 0,[640; 639],NONE);
    642 :≡ (Const 120,[],NONE);
    643 :≡ (Cons 0,[642; 641],NONE);
    644 :≡ (Cons 2,[643],NONE);
    645 :≡ (Cons 3,[644; 630],NONE);
    646 :≡ (Cons 4,[645; 616],NONE);
    647 :≡ (Cons 0,[],NONE);
    648 :≡ (Const 116,[],NONE);
    649 :≡ (Cons 0,[648; 647],NONE);
    650 :≡ (Const 115,[],NONE);
    651 :≡ (Cons 0,[650; 649],NONE);
    652 :≡ (Const 111,[],NONE);
    653 :≡ (Cons 0,[652; 651],NONE);
    654 :≡ (Const 112,[],NONE);
    655 :≡ (Cons 0,[654; 653],NONE);
    656 :≡ (Const 107,[],NONE);
    657 :≡ (Cons 0,[656; 655],NONE);
    658 :≡ (Cons 2,[657],NONE);
    659 :≡ (Cons 3,[658; 646],NONE);
    660 :≡ (Cons 4,[659; 587],NONE);
    661 :≡ (Cons 3,[660; 537],NONE);
    662 :≡ (Const 159,[],NONE);
    663 :≡ (Const 268435457,[],NONE);
    664 :≡ (Mult,[663; 662],SOME ⦕ 274; 482; 661; 662; 663 ⦖);
    665 :≡ (Const 268435297,[],NONE);
    666 :≡ (Add,[665; 664],SOME ⦕ 274; 482; 661; 664; 665 ⦖);
    makespace 5 ⦕ 274; 482; 661; 666 ⦖;
    667 :≡ (WordFromInt,[666],NONE);
    668 :≡ (Cons 3,[667],NONE);
    669 :≡ (Const 1599,[],NONE);
    670 :≡ (Const 268435457,[],NONE);
    671 :≡ (Mult,[670; 669],SOME ⦕ 274; 482; 661; 668; 669; 670 ⦖);
    672 :≡ (Const 268433857,[],NONE);
    673 :≡ (Add,[672; 671],SOME ⦕ 274; 482; 661; 668; 671; 672 ⦖);
    makespace 25 ⦕ 274; 482; 661; 668; 673 ⦖;
    674 :≡ (WordFromInt,[673],NONE);
    675 :≡ (Cons 3,[674],NONE);
    676 :≡ (Cons 0,[],NONE);
    677 :≡ (Const 116,[],NONE);
    678 :≡ (Cons 0,[677; 676],NONE);
    679 :≡ (Const 115,[],NONE);
    680 :≡ (Cons 0,[679; 678],NONE);
    681 :≡ (Const 111,[],NONE);
    682 :≡ (Cons 0,[681; 680],NONE);
    683 :≡ (Const 112,[],NONE);
    684 :≡ (Cons 0,[683; 682],NONE);
    685 :≡ (Const 103,[],NONE);
    686 :≡ (Cons 0,[685; 684],NONE);
    687 :≡ (Const 120,[],NONE);
    688 :≡ (Cons 0,[687; 686],NONE);
    689 :≡ (Cons 2,[688],NONE);
    690 :≡ (Const 31,[],NONE);
    691 :≡ (Const 268435457,[],NONE);
    692 :≡ (Mult,[691; 690],SOME ⦕ 274; 482; 661; 668; 675; 689; 690; 691 ⦖);
    693 :≡ (Const 268435425,[],NONE);
    694 :≡ (Add,[693; 692],SOME ⦕ 274; 482; 661; 668; 675; 689; 692; 693 ⦖);
    makespace 14 ⦕ 274; 482; 661; 668; 675; 689; 694 ⦖;
    695 :≡ (WordFromInt,[694],NONE);
    696 :≡ (Cons 3,[695],NONE);
    697 :≡ (Cons 3,[696; 689],NONE);
    698 :≡ (Cons 3,[697; 675],NONE);
    699 :≡ (Cons 3,[698; 668],NONE);
    700 :≡ (Const 255,[],NONE);
    701 :≡ (Const 268435457,[],NONE);
    702 :≡ (Mult,[701; 700],SOME ⦕ 274; 482; 661; 699; 700; 701 ⦖);
    703 :≡ (Const 268434929,[],NONE);
    704 :≡ (Add,[703; 702],SOME ⦕ 274; 482; 661; 699; 702; 703 ⦖);
    705 :≡ (Const 268435457,[],NONE);
    706 :≡ (Mult,[705; 704],SOME ⦕ 274; 482; 661; 699; 704; 705 ⦖);
    707 :≡ (Const 272,[],NONE);
    708 :≡ (Add,[707; 706],SOME ⦕ 274; 482; 661; 699; 706; 707 ⦖);
    makespace 120 ⦕ 274; 482; 661; 699; 708 ⦖;
    709 :≡ (WordFromInt,[708],NONE);
    710 :≡ (Cons 3,[709],NONE);
    711 :≡ (Cons 3,[710; 699],NONE);
    712 :≡ (Cons 0,[],NONE);
    713 :≡ (Const 116,[],NONE);
    714 :≡ (Cons 0,[713; 712],NONE);
    715 :≡ (Const 115,[],NONE);
    716 :≡ (Cons 0,[715; 714],NONE);
    717 :≡ (Const 111,[],NONE);
    718 :≡ (Cons 0,[717; 716],NONE);
    719 :≡ (Const 112,[],NONE);
    720 :≡ (Cons 0,[719; 718],NONE);
    721 :≡ (Const 103,[],NONE);
    722 :≡ (Cons 0,[721; 720],NONE);
    723 :≡ (Const 121,[],NONE);
    724 :≡ (Cons 0,[723; 722],NONE);
    725 :≡ (Cons 2,[724],NONE);
    726 :≡ (Cons 0,[],NONE);
    727 :≡ (Const 116,[],NONE);
    728 :≡ (Cons 0,[727; 726],NONE);
    729 :≡ (Const 115,[],NONE);
    730 :≡ (Cons 0,[729; 728],NONE);
    731 :≡ (Const 111,[],NONE);
    732 :≡ (Cons 0,[731; 730],NONE);
    733 :≡ (Const 112,[],NONE);
    734 :≡ (Cons 0,[733; 732],NONE);
    735 :≡ (Const 103,[],NONE);
    736 :≡ (Cons 0,[735; 734],NONE);
    737 :≡ (Const 121,[],NONE);
    738 :≡ (Cons 0,[737; 736],NONE);
    739 :≡ (Cons 2,[738],NONE);
    740 :≡ (Cons 3,[739; 725],NONE);
    741 :≡ (Cons 0,[],NONE);
    742 :≡ (Const 116,[],NONE);
    743 :≡ (Cons 0,[742; 741],NONE);
    744 :≡ (Const 115,[],NONE);
    745 :≡ (Cons 0,[744; 743],NONE);
    746 :≡ (Const 111,[],NONE);
    747 :≡ (Cons 0,[746; 745],NONE);
    748 :≡ (Const 112,[],NONE);
    749 :≡ (Cons 0,[748; 747],NONE);
    750 :≡ (Const 103,[],NONE);
    751 :≡ (Cons 0,[750; 749],NONE);
    752 :≡ (Const 120,[],NONE);
    753 :≡ (Cons 0,[752; 751],NONE);
    754 :≡ (Cons 2,[753],NONE);
    755 :≡ (Cons 0,[],NONE);
    756 :≡ (Const 116,[],NONE);
    757 :≡ (Cons 0,[756; 755],NONE);
    758 :≡ (Const 115,[],NONE);
    759 :≡ (Cons 0,[758; 757],NONE);
    760 :≡ (Const 111,[],NONE);
    761 :≡ (Cons 0,[760; 759],NONE);
    762 :≡ (Const 112,[],NONE);
    763 :≡ (Cons 0,[762; 761],NONE);
    764 :≡ (Const 103,[],NONE);
    765 :≡ (Cons 0,[764; 763],NONE);
    766 :≡ (Const 120,[],NONE);
    767 :≡ (Cons 0,[766; 765],NONE);
    768 :≡ (Cons 2,[767],NONE);
    769 :≡ (Cons 3,[768; 754],NONE);
    770 :≡ (Cons 4,[769; 740],NONE);
    771 :≡ (Cons 0,[],NONE);
    772 :≡ (Const 116,[],NONE);
    773 :≡ (Cons 0,[772; 771],NONE);
    774 :≡ (Const 115,[],NONE);
    775 :≡ (Cons 0,[774; 773],NONE);
    776 :≡ (Const 111,[],NONE);
    777 :≡ (Cons 0,[776; 775],NONE);
    778 :≡ (Const 112,[],NONE);
    779 :≡ (Cons 0,[778; 777],NONE);
    780 :≡ (Const 107,[],NONE);
    781 :≡ (Cons 0,[780; 779],NONE);
    782 :≡ (Cons 2,[781],NONE);
    783 :≡ (Cons 3,[782; 770],NONE);
    784 :≡ (Cons 4,[783; 711],NONE);
    785 :≡ (Const 1599,[],NONE);
    786 :≡ (Const 268435457,[],NONE);
    787 :≡ (Mult,[786; 785],SOME ⦕ 274; 482; 661; 784; 785; 786 ⦖);
    788 :≡ (Const 268433857,[],NONE);
    789 :≡ (Add,[788; 787],SOME ⦕ 274; 482; 661; 784; 787; 788 ⦖);
    makespace 16 ⦕ 274; 482; 661; 784; 789 ⦖;
    790 :≡ (WordFromInt,[789],NONE);
    791 :≡ (Cons 3,[790],NONE);
    792 :≡ (Cons 0,[],NONE);
    793 :≡ (Const 115,[],NONE);
    794 :≡ (Cons 0,[793; 792],NONE);
    795 :≡ (Const 112,[],NONE);
    796 :≡ (Cons 0,[795; 794],NONE);
    797 :≡ (Const 101,[],NONE);
    798 :≡ (Cons 0,[797; 796],NONE);
    799 :≡ (Cons 2,[798],NONE);
    800 :≡ (Const 3199,[],NONE);
    801 :≡ (Const 268435457,[],NONE);
    802 :≡ (Mult,[801; 800],SOME ⦕ 274; 482; 661; 784; 791; 799; 800; 801 ⦖);
    803 :≡ (Const 268432257,[],NONE);
    804 :≡ (Add,[803; 802],SOME ⦕ 274; 482; 661; 784; 791; 799; 802; 803 ⦖);
    makespace 8 ⦕ 274; 482; 661; 784; 791; 799; 804 ⦖;
    805 :≡ (WordFromInt,[804],NONE);
    806 :≡ (Cons 3,[805],NONE);
    807 :≡ (Cons 3,[806; 799],NONE);
    808 :≡ (Const 255,[],NONE);
    809 :≡ (Const 268435457,[],NONE);
    810 :≡ (Mult,[809; 808],SOME ⦕ 274; 482; 661; 784; 791; 807; 808; 809 ⦖);
    811 :≡ (Const 268434929,[],NONE);
    812 :≡ (Add,[811; 810],SOME ⦕ 274; 482; 661; 784; 791; 807; 810; 811 ⦖);
    813 :≡ (Const 268435457,[],NONE);
    814 :≡ (Mult,[813; 812],SOME ⦕ 274; 482; 661; 784; 791; 807; 812; 813 ⦖);
    815 :≡ (Const 272,[],NONE);
    816 :≡ (Add,[815; 814],SOME ⦕ 274; 482; 661; 784; 791; 807; 814; 815 ⦖);
    makespace 153 ⦕ 274; 482; 661; 784; 791; 807; 816 ⦖;
    817 :≡ (WordFromInt,[816],NONE);
    818 :≡ (Cons 3,[817],NONE);
    819 :≡ (Cons 3,[818; 807],NONE);
    820 :≡ (Cons 0,[],NONE);
    821 :≡ (Const 115,[],NONE);
    822 :≡ (Cons 0,[821; 820],NONE);
    823 :≡ (Const 112,[],NONE);
    824 :≡ (Cons 0,[823; 822],NONE);
    825 :≡ (Const 101,[],NONE);
    826 :≡ (Cons 0,[825; 824],NONE);
    827 :≡ (Cons 2,[826],NONE);
    828 :≡ (Cons 0,[],NONE);
    829 :≡ (Const 115,[],NONE);
    830 :≡ (Cons 0,[829; 828],NONE);
    831 :≡ (Const 112,[],NONE);
    832 :≡ (Cons 0,[831; 830],NONE);
    833 :≡ (Const 101,[],NONE);
    834 :≡ (Cons 0,[833; 832],NONE);
    835 :≡ (Cons 2,[834],NONE);
    836 :≡ (Cons 3,[835; 827],NONE);
    837 :≡ (Cons 0,[],NONE);
    838 :≡ (Const 116,[],NONE);
    839 :≡ (Cons 0,[838; 837],NONE);
    840 :≡ (Const 115,[],NONE);
    841 :≡ (Cons 0,[840; 839],NONE);
    842 :≡ (Const 111,[],NONE);
    843 :≡ (Cons 0,[842; 841],NONE);
    844 :≡ (Const 112,[],NONE);
    845 :≡ (Cons 0,[844; 843],NONE);
    846 :≡ (Const 107,[],NONE);
    847 :≡ (Cons 0,[846; 845],NONE);
    848 :≡ (Cons 2,[847],NONE);
    849 :≡ (Cons 3,[848; 836],NONE);
    850 :≡ (Cons 4,[849; 819],NONE);
    851 :≡ (Cons 3,[850; 791],NONE);
    852 :≡ (Cons 3,[851; 784],NONE);
    853 :≡ (Cons 1,[852; 661],NONE);
    854 :≡ (Cons 1,[853; 482],NONE);
    855 :≡ (Cons 0,[],NONE);
    856 :≡ (Const 116,[],NONE);
    857 :≡ (Cons 0,[856; 855],NONE);
    858 :≡ (Const 115,[],NONE);
    859 :≡ (Cons 0,[858; 857],NONE);
    860 :≡ (Const 111,[],NONE);
    861 :≡ (Cons 0,[860; 859],NONE);
    862 :≡ (Const 112,[],NONE);
    863 :≡ (Cons 0,[862; 861],NONE);
    864 :≡ (Const 103,[],NONE);
    865 :≡ (Cons 0,[864; 863],NONE);
    866 :≡ (Const 121,[],NONE);
    867 :≡ (Cons 0,[866; 865],NONE);
    868 :≡ (Cons 2,[867],NONE);
    869 :≡ (Const 0,[],NONE);
    870 :≡ (WordFromInt,[869],NONE);
    871 :≡ (Cons 3,[870],NONE);
    872 :≡ (Cons 4,[871; 868],NONE);
    873 :≡ (Cons 1,[872; 854],NONE);
    874 :≡ (Cons 1,[873; 274],NONE);
    875 :≡ (Cons 0,[],NONE);
    876 :≡ (Const 116,[],NONE);
    877 :≡ (Cons 0,[876; 875],NONE);
    878 :≡ (Const 115,[],NONE);
    879 :≡ (Cons 0,[878; 877],NONE);
    880 :≡ (Const 111,[],NONE);
    881 :≡ (Cons 0,[880; 879],NONE);
    882 :≡ (Const 112,[],NONE);
    883 :≡ (Cons 0,[882; 881],NONE);
    884 :≡ (Const 107,[],NONE);
    885 :≡ (Cons 0,[884; 883],NONE);
    886 :≡ (Cons 2,[885],NONE);
    887 :≡ (Cons 0,[],NONE);
    888 :≡ (Const 116,[],NONE);
    889 :≡ (Cons 0,[888; 887],NONE);
    890 :≡ (Const 115,[],NONE);
    891 :≡ (Cons 0,[890; 889],NONE);
    892 :≡ (Const 111,[],NONE);
    893 :≡ (Cons 0,[892; 891],NONE);
    894 :≡ (Const 112,[],NONE);
    895 :≡ (Cons 0,[894; 893],NONE);
    896 :≡ (Const 103,[],NONE);
    897 :≡ (Cons 0,[896; 895],NONE);
    898 :≡ (Const 120,[],NONE);
    899 :≡ (Cons 0,[898; 897],NONE);
    900 :≡ (Cons 2,[899],NONE);
    901 :≡ (Cons 3,[900; 886],NONE);
    902 :≡ (Const 0,[],NONE);
    903 :≡ (WordFromInt,[902],NONE);
    904 :≡ (Cons 3,[903],NONE);
    905 :≡ (Cons 4,[904; 901],NONE);
    906 :≡ (Cons 1,[905; 874],NONE);
    call_bvi_aux_2 (907,⦕ 906 ⦖) [] NONE;
    makespace 78 ⦕ 906; 907 ⦖;
    908 :≡ (Cons 0,[],NONE);
    909 :≡ (Const 65,[],NONE);
    910 :≡ (Cons 0,[909; 908],NONE);
    911 :≡ (Cons 2,[910],NONE);
    912 :≡ (Cons 0,[],NONE);
    913 :≡ (Const 116,[],NONE);
    914 :≡ (Cons 0,[913; 912],NONE);
    915 :≡ (Const 115,[],NONE);
    916 :≡ (Cons 0,[915; 914],NONE);
    917 :≡ (Const 111,[],NONE);
    918 :≡ (Cons 0,[917; 916],NONE);
    919 :≡ (Const 112,[],NONE);
    920 :≡ (Cons 0,[919; 918],NONE);
    921 :≡ (Const 97,[],NONE);
    922 :≡ (Cons 0,[921; 920],NONE);
    923 :≡ (Cons 2,[922],NONE);
    924 :≡ (Cons 3,[923; 911],NONE);
    925 :≡ (Cons 0,[],NONE);
    926 :≡ (Const 116,[],NONE);
    927 :≡ (Cons 0,[926; 925],NONE);
    928 :≡ (Const 115,[],NONE);
    929 :≡ (Cons 0,[928; 927],NONE);
    930 :≡ (Const 111,[],NONE);
    931 :≡ (Cons 0,[930; 929],NONE);
    932 :≡ (Const 112,[],NONE);
    933 :≡ (Cons 0,[932; 931],NONE);
    934 :≡ (Const 97,[],NONE);
    935 :≡ (Cons 0,[934; 933],NONE);
    936 :≡ (Cons 2,[935],NONE);
    937 :≡ (Cons 0,[],NONE);
    938 :≡ (Const 66,[],NONE);
    939 :≡ (Cons 0,[938; 937],NONE);
    940 :≡ (Cons 2,[939],NONE);
    941 :≡ (Cons 1,[940],NONE);
    942 :≡ (Cons 3,[941; 936],NONE);
    943 :≡ (Cons 1,[942; 924],NONE);
    944 :≡ (Cons 1,[943; 907],NONE);
    945 :≡ (Cons 0,[],NONE);
    946 :≡ (Const 116,[],NONE);
    947 :≡ (Cons 0,[946; 945],NONE);
    948 :≡ (Const 115,[],NONE);
    949 :≡ (Cons 0,[948; 947],NONE);
    950 :≡ (Const 111,[],NONE);
    951 :≡ (Cons 0,[950; 949],NONE);
    952 :≡ (Const 112,[],NONE);
    953 :≡ (Cons 0,[952; 951],NONE);
    954 :≡ (Const 108,[],NONE);
    955 :≡ (Cons 0,[954; 953],NONE);
    956 :≡ (Const 118,[],NONE);
    957 :≡ (Cons 0,[956; 955],NONE);
    958 :≡ (Cons 2,[957],NONE);
    959 :≡ (Const 255,[],NONE);
    960 :≡ (Const 268435457,[],NONE);
    961 :≡ (Mult,[960; 959],SOME ⦕ 906; 944; 958; 959; 960 ⦖);
    962 :≡ (Const 268434929,[],NONE);
    963 :≡ (Add,[962; 961],SOME ⦕ 906; 944; 958; 961; 962 ⦖);
    964 :≡ (Const 268435457,[],NONE);
    965 :≡ (Mult,[964; 963],SOME ⦕ 906; 944; 958; 963; 964 ⦖);
    966 :≡ (Const 272,[],NONE);
    967 :≡ (Add,[966; 965],SOME ⦕ 906; 944; 958; 965; 966 ⦖);
    makespace 31 ⦕ 906; 944; 958; 967 ⦖;
    968 :≡ (WordFromInt,[967],NONE);
    969 :≡ (Cons 3,[968],NONE);
    970 :≡ (Cons 3,[969; 958],NONE);
    971 :≡ (Cons 0,[],NONE);
    972 :≡ (Const 116,[],NONE);
    973 :≡ (Cons 0,[972; 971],NONE);
    974 :≡ (Const 115,[],NONE);
    975 :≡ (Cons 0,[974; 973],NONE);
    976 :≡ (Const 111,[],NONE);
    977 :≡ (Cons 0,[976; 975],NONE);
    978 :≡ (Const 112,[],NONE);
    979 :≡ (Cons 0,[978; 977],NONE);
    980 :≡ (Const 104,[],NONE);
    981 :≡ (Cons 0,[980; 979],NONE);
    982 :≡ (Const 118,[],NONE);
    983 :≡ (Cons 0,[982; 981],NONE);
    984 :≡ (Cons 2,[983],NONE);
    985 :≡ (Cons 4,[984; 970],NONE);
    986 :≡ (Const 159,[],NONE);
    987 :≡ (Const 268435457,[],NONE);
    988 :≡ (Mult,[987; 986],SOME ⦕ 906; 944; 985; 986; 987 ⦖);
    989 :≡ (Const 268435297,[],NONE);
    990 :≡ (Add,[989; 988],SOME ⦕ 906; 944; 985; 988; 989 ⦖);
    makespace 44 ⦕ 906; 944; 985; 990 ⦖;
    991 :≡ (WordFromInt,[990],NONE);
    992 :≡ (Cons 3,[991],NONE);
    993 :≡ (Cons 3,[992; 985],NONE);
    994 :≡ (Cons 0,[],NONE);
    995 :≡ (Const 84,[],NONE);
    996 :≡ (Cons 0,[995; 994],NONE);
    997 :≡ (Cons 2,[996],NONE);
    998 :≡ (Cons 0,[],NONE);
    999 :≡ (Const 66,[],NONE);
    1000 :≡ (Cons 0,[999; 998],NONE);
    1001 :≡ (Cons 2,[1000],NONE);
    1002 :≡ (Cons 3,[1001; 997],NONE);
    1003 :≡ (Cons 3,[1002; 993],NONE);
    1004 :≡ (Cons 0,[],NONE);
    1005 :≡ (Const 116,[],NONE);
    1006 :≡ (Cons 0,[1005; 1004],NONE);
    1007 :≡ (Const 115,[],NONE);
    1008 :≡ (Cons 0,[1007; 1006],NONE);
    1009 :≡ (Const 111,[],NONE);
    1010 :≡ (Cons 0,[1009; 1008],NONE);
    1011 :≡ (Const 112,[],NONE);
    1012 :≡ (Cons 0,[1011; 1010],NONE);
    1013 :≡ (Const 108,[],NONE);
    1014 :≡ (Cons 0,[1013; 1012],NONE);
    1015 :≡ (Const 118,[],NONE);
    1016 :≡ (Cons 0,[1015; 1014],NONE);
    1017 :≡ (Cons 2,[1016],NONE);
    1018 :≡ (Const 255,[],NONE);
    1019 :≡ (Const 268435457,[],NONE);
    1020 :≡ (Mult,[1019; 1018],SOME ⦕ 906; 944; 1003; 1017; 1018; 1019 ⦖);
    1021 :≡ (Const 268434929,[],NONE);
    1022 :≡ (Add,[1021; 1020],SOME ⦕ 906; 944; 1003; 1017; 1020; 1021 ⦖);
    1023 :≡ (Const 268435457,[],NONE);
    1024 :≡ (Mult,[1023; 1022],SOME ⦕ 906; 944; 1003; 1017; 1022; 1023 ⦖);
    1025 :≡ (Const 272,[],NONE);
    1026 :≡ (Add,[1025; 1024],SOME ⦕ 906; 944; 1003; 1017; 1024; 1025 ⦖);
    makespace 31 ⦕ 906; 944; 1003; 1017; 1026 ⦖;
    1027 :≡ (WordFromInt,[1026],NONE);
    1028 :≡ (Cons 3,[1027],NONE);
    1029 :≡ (Cons 3,[1028; 1017],NONE);
    1030 :≡ (Cons 0,[],NONE);
    1031 :≡ (Const 116,[],NONE);
    1032 :≡ (Cons 0,[1031; 1030],NONE);
    1033 :≡ (Const 115,[],NONE);
    1034 :≡ (Cons 0,[1033; 1032],NONE);
    1035 :≡ (Const 111,[],NONE);
    1036 :≡ (Cons 0,[1035; 1034],NONE);
    1037 :≡ (Const 112,[],NONE);
    1038 :≡ (Cons 0,[1037; 1036],NONE);
    1039 :≡ (Const 104,[],NONE);
    1040 :≡ (Cons 0,[1039; 1038],NONE);
    1041 :≡ (Const 118,[],NONE);
    1042 :≡ (Cons 0,[1041; 1040],NONE);
    1043 :≡ (Cons 2,[1042],NONE);
    1044 :≡ (Cons 4,[1043; 1029],NONE);
    1045 :≡ (Const 159,[],NONE);
    1046 :≡ (Const 268435457,[],NONE);
    1047 :≡ (Mult,[1046; 1045],SOME ⦕ 906; 944; 1003; 1044; 1045; 1046 ⦖);
    1048 :≡ (Const 268435297,[],NONE);
    1049 :≡ (Add,[1048; 1047],SOME ⦕ 906; 944; 1003; 1044; 1047; 1048 ⦖);
    makespace 166 ⦕ 906; 944; 1003; 1044; 1049 ⦖;
    1050 :≡ (WordFromInt,[1049],NONE);
    1051 :≡ (Cons 3,[1050],NONE);
    1052 :≡ (Cons 3,[1051; 1044],NONE);
    1053 :≡ (Cons 0,[],NONE);
    1054 :≡ (Const 84,[],NONE);
    1055 :≡ (Cons 0,[1054; 1053],NONE);
    1056 :≡ (Cons 2,[1055],NONE);
    1057 :≡ (Cons 0,[],NONE);
    1058 :≡ (Const 65,[],NONE);
    1059 :≡ (Cons 0,[1058; 1057],NONE);
    1060 :≡ (Cons 2,[1059],NONE);
    1061 :≡ (Cons 3,[1060; 1056],NONE);
    1062 :≡ (Cons 3,[1061; 1052],NONE);
    1063 :≡ (Cons 1,[1062; 1003],NONE);
    1064 :≡ (Cons 0,[],NONE);
    1065 :≡ (Const 116,[],NONE);
    1066 :≡ (Cons 0,[1065; 1064],NONE);
    1067 :≡ (Const 115,[],NONE);
    1068 :≡ (Cons 0,[1067; 1066],NONE);
    1069 :≡ (Const 111,[],NONE);
    1070 :≡ (Cons 0,[1069; 1068],NONE);
    1071 :≡ (Const 112,[],NONE);
    1072 :≡ (Cons 0,[1071; 1070],NONE);
    1073 :≡ (Const 104,[],NONE);
    1074 :≡ (Cons 0,[1073; 1072],NONE);
    1075 :≡ (Const 118,[],NONE);
    1076 :≡ (Cons 0,[1075; 1074],NONE);
    1077 :≡ (Cons 2,[1076],NONE);
    1078 :≡ (Cons 0,[],NONE);
    1079 :≡ (Const 118,[],NONE);
    1080 :≡ (Cons 0,[1079; 1078],NONE);
    1081 :≡ (Cons 2,[1080],NONE);
    1082 :≡ (Cons 3,[1081; 1077],NONE);
    1083 :≡ (Cons 0,[],NONE);
    1084 :≡ (Const 118,[],NONE);
    1085 :≡ (Cons 0,[1084; 1083],NONE);
    1086 :≡ (Cons 2,[1085],NONE);
    1087 :≡ (Cons 0,[],NONE);
    1088 :≡ (Const 116,[],NONE);
    1089 :≡ (Cons 0,[1088; 1087],NONE);
    1090 :≡ (Const 115,[],NONE);
    1091 :≡ (Cons 0,[1090; 1089],NONE);
    1092 :≡ (Const 111,[],NONE);
    1093 :≡ (Cons 0,[1092; 1091],NONE);
    1094 :≡ (Const 112,[],NONE);
    1095 :≡ (Cons 0,[1094; 1093],NONE);
    1096 :≡ (Const 108,[],NONE);
    1097 :≡ (Cons 0,[1096; 1095],NONE);
    1098 :≡ (Const 118,[],NONE);
    1099 :≡ (Cons 0,[1098; 1097],NONE);
    1100 :≡ (Cons 2,[1099],NONE);
    1101 :≡ (Cons 3,[1100; 1086],NONE);
    1102 :≡ (Cons 1,[1101; 1082],NONE);
    1103 :≡ (Cons 0,[1102; 1063],NONE);
    1104 :≡ (Cons 0,[],NONE);
    1105 :≡ (Const 116,[],NONE);
    1106 :≡ (Cons 0,[1105; 1104],NONE);
    1107 :≡ (Const 115,[],NONE);
    1108 :≡ (Cons 0,[1107; 1106],NONE);
    1109 :≡ (Const 111,[],NONE);
    1110 :≡ (Cons 0,[1109; 1108],NONE);
    1111 :≡ (Const 112,[],NONE);
    1112 :≡ (Cons 0,[1111; 1110],NONE);
    1113 :≡ (Const 104,[],NONE);
    1114 :≡ (Cons 0,[1113; 1112],NONE);
    1115 :≡ (Const 118,[],NONE);
    1116 :≡ (Cons 0,[1115; 1114],NONE);
    1117 :≡ (Cons 2,[1116],NONE);
    1118 :≡ (Cons 0,[],NONE);
    1119 :≡ (Const 116,[],NONE);
    1120 :≡ (Cons 0,[1119; 1118],NONE);
    1121 :≡ (Const 115,[],NONE);
    1122 :≡ (Cons 0,[1121; 1120],NONE);
    1123 :≡ (Const 111,[],NONE);
    1124 :≡ (Cons 0,[1123; 1122],NONE);
    1125 :≡ (Const 112,[],NONE);
    1126 :≡ (Cons 0,[1125; 1124],NONE);
    1127 :≡ (Const 108,[],NONE);
    1128 :≡ (Cons 0,[1127; 1126],NONE);
    1129 :≡ (Const 118,[],NONE);
    1130 :≡ (Cons 0,[1129; 1128],NONE);
    1131 :≡ (Cons 2,[1130],NONE);
    1132 :≡ (Cons 3,[1131; 1117],NONE);
    1133 :≡ (Cons 1,[1132; 1103],NONE);
    1134 :≡ (Cons 0,[],NONE);
    1135 :≡ (Const 116,[],NONE);
    1136 :≡ (Cons 0,[1135; 1134],NONE);
    1137 :≡ (Const 115,[],NONE);
    1138 :≡ (Cons 0,[1137; 1136],NONE);
    1139 :≡ (Const 111,[],NONE);
    1140 :≡ (Cons 0,[1139; 1138],NONE);
    1141 :≡ (Const 112,[],NONE);
    1142 :≡ (Cons 0,[1141; 1140],NONE);
    1143 :≡ (Const 108,[],NONE);
    1144 :≡ (Cons 0,[1143; 1142],NONE);
    1145 :≡ (Const 118,[],NONE);
    1146 :≡ (Cons 0,[1145; 1144],NONE);
    1147 :≡ (Cons 2,[1146],NONE);
    1148 :≡ (Const 0,[],NONE);
    1149 :≡ (WordFromInt,[1148],NONE);
    1150 :≡ (Cons 3,[1149],NONE);
    1151 :≡ (Cons 3,[1150; 1147],NONE);
    1152 :≡ (Cons 1,[1151; 1133],NONE);
    1153 :≡ (Const 1599,[],NONE);
    1154 :≡ (Const 268435457,[],NONE);
    1155 :≡ (Mult,[1154; 1153],SOME ⦕ 906; 944; 1152; 1153; 1154 ⦖);
    1156 :≡ (Const 268433857,[],NONE);
    1157 :≡ (Add,[1156; 1155],SOME ⦕ 906; 944; 1152; 1155; 1156 ⦖);
    makespace 16 ⦕ 906; 944; 1152; 1157 ⦖;
    1158 :≡ (WordFromInt,[1157],NONE);
    1159 :≡ (Cons 3,[1158],NONE);
    1160 :≡ (Cons 0,[],NONE);
    1161 :≡ (Const 115,[],NONE);
    1162 :≡ (Cons 0,[1161; 1160],NONE);
    1163 :≡ (Const 112,[],NONE);
    1164 :≡ (Cons 0,[1163; 1162],NONE);
    1165 :≡ (Const 101,[],NONE);
    1166 :≡ (Cons 0,[1165; 1164],NONE);
    1167 :≡ (Cons 2,[1166],NONE);
    1168 :≡ (Const 3199,[],NONE);
    1169 :≡ (Const 268435457,[],NONE);
    1170 :≡ (Mult,[1169; 1168],SOME ⦕ 906; 944; 1152; 1159; 1167; 1168; 1169 ⦖);
    1171 :≡ (Const 268432257,[],NONE);
    1172 :≡ (Add,[1171; 1170],SOME ⦕ 906; 944; 1152; 1159; 1167; 1170; 1171 ⦖);
    makespace 24 ⦕ 906; 944; 1152; 1159; 1167; 1172 ⦖;
    1173 :≡ (WordFromInt,[1172],NONE);
    1174 :≡ (Cons 3,[1173],NONE);
    1175 :≡ (Cons 3,[1174; 1167],NONE);
    1176 :≡ (Cons 3,[1175; 1159],NONE);
    1177 :≡ (Const 0,[],NONE);
    1178 :≡ (WordFromInt,[1177],NONE);
    1179 :≡ (Cons 3,[1178],NONE);
    1180 :≡ (Cons 3,[1179; 1176],NONE);
    1181 :≡ (Const 0,[],NONE);
    1182 :≡ (WordFromInt,[1181],NONE);
    1183 :≡ (Cons 3,[1182],NONE);
    1184 :≡ (Const 1599,[],NONE);
    1185 :≡ (Const 268435457,[],NONE);
    1186 :≡ (Mult,[1185; 1184],SOME ⦕ 906; 944; 1152; 1180; 1183; 1184; 1185 ⦖);
    1187 :≡ (Const 268433857,[],NONE);
    1188 :≡ (Add,[1187; 1186],SOME ⦕ 906; 944; 1152; 1180; 1183; 1186; 1187 ⦖);
    makespace 16 ⦕ 906; 944; 1152; 1180; 1183; 1188 ⦖;
    1189 :≡ (WordFromInt,[1188],NONE);
    1190 :≡ (Cons 3,[1189],NONE);
    1191 :≡ (Cons 0,[],NONE);
    1192 :≡ (Const 115,[],NONE);
    1193 :≡ (Cons 0,[1192; 1191],NONE);
    1194 :≡ (Const 112,[],NONE);
    1195 :≡ (Cons 0,[1194; 1193],NONE);
    1196 :≡ (Const 101,[],NONE);
    1197 :≡ (Cons 0,[1196; 1195],NONE);
    1198 :≡ (Cons 2,[1197],NONE);
    1199 :≡ (Const 3199,[],NONE);
    1200 :≡ (Const 268435457,[],NONE);
    1201 :≡
    (Mult,[1200; 1199],
     SOME ⦕ 906; 944; 1152; 1180; 1183; 1190; 1198; 1199; 1200 ⦖);
    1202 :≡ (Const 268432257,[],NONE);
    1203 :≡
    (Add,[1202; 1201],
     SOME ⦕ 906; 944; 1152; 1180; 1183; 1190; 1198; 1201; 1202 ⦖);
    makespace 118 ⦕ 906; 944; 1152; 1180; 1183; 1190; 1198; 1203 ⦖;
    1204 :≡ (WordFromInt,[1203],NONE);
    1205 :≡ (Cons 3,[1204],NONE);
    1206 :≡ (Cons 3,[1205; 1198],NONE);
    1207 :≡ (Cons 1,[1206],NONE);
    1208 :≡ (Cons 3,[1207; 1190],NONE);
    1209 :≡ (Cons 3,[1208; 1183],NONE);
    1210 :≡ (Cons 1,[1209; 1180],NONE);
    1211 :≡ (Cons 1,[1210; 1152],NONE);
    1212 :≡ (Cons 0,[],NONE);
    1213 :≡ (Const 116,[],NONE);
    1214 :≡ (Cons 0,[1213; 1212],NONE);
    1215 :≡ (Const 115,[],NONE);
    1216 :≡ (Cons 0,[1215; 1214],NONE);
    1217 :≡ (Const 111,[],NONE);
    1218 :≡ (Cons 0,[1217; 1216],NONE);
    1219 :≡ (Const 112,[],NONE);
    1220 :≡ (Cons 0,[1219; 1218],NONE);
    1221 :≡ (Const 103,[],NONE);
    1222 :≡ (Cons 0,[1221; 1220],NONE);
    1223 :≡ (Const 121,[],NONE);
    1224 :≡ (Cons 0,[1223; 1222],NONE);
    1225 :≡ (Cons 2,[1224],NONE);
    1226 :≡ (Const 0,[],NONE);
    1227 :≡ (WordFromInt,[1226],NONE);
    1228 :≡ (Cons 3,[1227],NONE);
    1229 :≡ (Cons 4,[1228; 1225],NONE);
    1230 :≡ (Cons 1,[1229; 1211],NONE);
    1231 :≡ (Cons 1,[1230; 944],NONE);
    1232 :≡ (Const 0,[],NONE);
    1233 :≡ (WordFromInt,[1232],NONE);
    1234 :≡ (Cons 3,[1233],NONE);
    1235 :≡ (Cons 0,[],NONE);
    1236 :≡ (Const 116,[],NONE);
    1237 :≡ (Cons 0,[1236; 1235],NONE);
    1238 :≡ (Const 115,[],NONE);
    1239 :≡ (Cons 0,[1238; 1237],NONE);
    1240 :≡ (Const 111,[],NONE);
    1241 :≡ (Cons 0,[1240; 1239],NONE);
    1242 :≡ (Const 112,[],NONE);
    1243 :≡ (Cons 0,[1242; 1241],NONE);
    1244 :≡ (Const 103,[],NONE);
    1245 :≡ (Cons 0,[1244; 1243],NONE);
    1246 :≡ (Const 120,[],NONE);
    1247 :≡ (Cons 0,[1246; 1245],NONE);
    1248 :≡ (Cons 2,[1247],NONE);
    1249 :≡ (Cons 2,[1248; 1234],NONE);
    1250 :≡ (Const 0,[],NONE);
    1251 :≡ (WordFromInt,[1250],NONE);
    1252 :≡ (Cons 3,[1251],NONE);
    1253 :≡ (Cons 0,[],NONE);
    1254 :≡ (Const 116,[],NONE);
    1255 :≡ (Cons 0,[1254; 1253],NONE);
    1256 :≡ (Const 115,[],NONE);
    1257 :≡ (Cons 0,[1256; 1255],NONE);
    1258 :≡ (Const 111,[],NONE);
    1259 :≡ (Cons 0,[1258; 1257],NONE);
    1260 :≡ (Const 112,[],NONE);
    1261 :≡ (Cons 0,[1260; 1259],NONE);
    1262 :≡ (Const 107,[],NONE);
    1263 :≡ (Cons 0,[1262; 1261],NONE);
    1264 :≡ (Cons 2,[1263],NONE);
    1265 :≡ (Cons 2,[1264; 1252],NONE);
    1266 :≡ (Cons 1,[1265; 1249],NONE);
    1267 :≡ (Cons 1,[1266; 1231],NONE);
    1268 :≡ (Cons 0,[1267; 906],NONE);
    return 1268
  od

dec_72 [] =
  do
    call_bvi_aux_6 (0,LN) [] NONE;
    makespace 28 ⦕ 0 ⦖;
    1 :≡ (Cons 0,[],NONE);
    2 :≡ (Const 116,[],NONE);
    3 :≡ (Cons 0,[2; 1],NONE);
    4 :≡ (Const 115,[],NONE);
    5 :≡ (Cons 0,[4; 3],NONE);
    6 :≡ (Const 111,[],NONE);
    7 :≡ (Cons 0,[6; 5],NONE);
    8 :≡ (Const 112,[],NONE);
    9 :≡ (Cons 0,[8; 7],NONE);
    10 :≡ (Const 116,[],NONE);
    11 :≡ (Cons 0,[10; 9],NONE);
    12 :≡ (Cons 2,[11],NONE);
    13 :≡ (Const 0,[],NONE);
    14 :≡ (WordFromInt,[13],NONE);
    15 :≡ (Cons 3,[14],NONE);
    16 :≡ (Cons 3,[15; 12],NONE);
    17 :≡ (Cons 1,[16; 0],NONE);
    18 :≡ (Const 317,[],NONE);
    19 :≡ (GlobalsPtr,[],NONE);
    20 :≡ (Update,[19; 18; 17],NONE);
    tailcall_dec_73 []
  od

bvi_aux_4 [] =
  do
    makespace 53 LN;
    0 :≡ (Cons 0,[],NONE);
    1 :≡ (Const 84,[],NONE);
    2 :≡ (Cons 0,[1; 0],NONE);
    3 :≡ (Cons 2,[2],NONE);
    4 :≡ (Cons 0,[],NONE);
    5 :≡ (Const 116,[],NONE);
    6 :≡ (Cons 0,[5; 4],NONE);
    7 :≡ (Const 115,[],NONE);
    8 :≡ (Cons 0,[7; 6],NONE);
    9 :≡ (Const 111,[],NONE);
    10 :≡ (Cons 0,[9; 8],NONE);
    11 :≡ (Const 112,[],NONE);
    12 :≡ (Cons 0,[11; 10],NONE);
    13 :≡ (Const 116,[],NONE);
    14 :≡ (Cons 0,[13; 12],NONE);
    15 :≡ (Cons 2,[14],NONE);
    16 :≡ (Cons 3,[15; 3],NONE);
    17 :≡ (Cons 0,[],NONE);
    18 :≡ (Const 116,[],NONE);
    19 :≡ (Cons 0,[18; 17],NONE);
    20 :≡ (Const 115,[],NONE);
    21 :≡ (Cons 0,[20; 19],NONE);
    22 :≡ (Const 111,[],NONE);
    23 :≡ (Cons 0,[22; 21],NONE);
    24 :≡ (Const 112,[],NONE);
    25 :≡ (Cons 0,[24; 23],NONE);
    26 :≡ (Const 118,[],NONE);
    27 :≡ (Cons 0,[26; 25],NONE);
    28 :≡ (Cons 2,[27],NONE);
    29 :≡ (Const 0,[],NONE);
    30 :≡ (WordFromInt,[29],NONE);
    31 :≡ (Cons 3,[30],NONE);
    32 :≡ (Cons 3,[31; 28],NONE);
    33 :≡ (Cons 1,[32; 16],NONE);
    34 :≡ (Const 159,[],NONE);
    35 :≡ (Const 268435457,[],NONE);
    36 :≡ (Mult,[35; 34],SOME ⦕ 33; 34; 35 ⦖);
    37 :≡ (Const 268435297,[],NONE);
    38 :≡ (Add,[37; 36],SOME ⦕ 33; 36; 37 ⦖);
    makespace 5 ⦕ 33; 38 ⦖;
    39 :≡ (WordFromInt,[38],NONE);
    40 :≡ (Cons 3,[39],NONE);
    41 :≡ (Const 159,[],NONE);
    42 :≡ (Const 268435457,[],NONE);
    43 :≡ (Mult,[42; 41],SOME ⦕ 33; 40; 41; 42 ⦖);
    44 :≡ (Const 268435297,[],NONE);
    45 :≡ (Add,[44; 43],SOME ⦕ 33; 40; 43; 44 ⦖);
    makespace 8 ⦕ 33; 40; 45 ⦖;
    46 :≡ (WordFromInt,[45],NONE);
    47 :≡ (Cons 3,[46],NONE);
    48 :≡ (Cons 3,[47; 40],NONE);
    49 :≡ (Const 1599,[],NONE);
    50 :≡ (Const 268435457,[],NONE);
    51 :≡ (Mult,[50; 49],SOME ⦕ 33; 48; 49; 50 ⦖);
    52 :≡ (Const 268433857,[],NONE);
    53 :≡ (Add,[52; 51],SOME ⦕ 33; 48; 51; 52 ⦖);
    makespace 5 ⦕ 33; 48; 53 ⦖;
    54 :≡ (WordFromInt,[53],NONE);
    55 :≡ (Cons 3,[54],NONE);
    56 :≡ (Const 1599,[],NONE);
    57 :≡ (Const 268435457,[],NONE);
    58 :≡ (Mult,[57; 56],SOME ⦕ 33; 48; 55; 56; 57 ⦖);
    59 :≡ (Const 268433857,[],NONE);
    60 :≡ (Add,[59; 58],SOME ⦕ 33; 48; 55; 58; 59 ⦖);
    makespace 19 ⦕ 33; 48; 55; 60 ⦖;
    61 :≡ (WordFromInt,[60],NONE);
    62 :≡ (Cons 3,[61],NONE);
    63 :≡ (Cons 3,[62; 55],NONE);
    64 :≡ (Cons 0,[],NONE);
    65 :≡ (Const 115,[],NONE);
    66 :≡ (Cons 0,[65; 64],NONE);
    67 :≡ (Const 112,[],NONE);
    68 :≡ (Cons 0,[67; 66],NONE);
    69 :≡ (Const 101,[],NONE);
    70 :≡ (Cons 0,[69; 68],NONE);
    71 :≡ (Cons 2,[70],NONE);
    72 :≡ (Const 159,[],NONE);
    73 :≡ (Const 268435457,[],NONE);
    74 :≡ (Mult,[73; 72],SOME ⦕ 33; 48; 63; 71; 72; 73 ⦖);
    75 :≡ (Const 268435297,[],NONE);
    76 :≡ (Add,[75; 74],SOME ⦕ 33; 48; 63; 71; 74; 75 ⦖);
    makespace 8 ⦕ 33; 48; 63; 71; 76 ⦖;
    77 :≡ (WordFromInt,[76],NONE);
    78 :≡ (Cons 3,[77],NONE);
    79 :≡ (Cons 3,[78; 71],NONE);
    80 :≡ (Const 255,[],NONE);
    81 :≡ (Const 268435457,[],NONE);
    82 :≡ (Mult,[81; 80],SOME ⦕ 33; 48; 63; 79; 80; 81 ⦖);
    83 :≡ (Const 268434929,[],NONE);
    84 :≡ (Add,[83; 82],SOME ⦕ 33; 48; 63; 79; 82; 83 ⦖);
    85 :≡ (Const 268435457,[],NONE);
    86 :≡ (Mult,[85; 84],SOME ⦕ 33; 48; 63; 79; 84; 85 ⦖);
    87 :≡ (Const 272,[],NONE);
    88 :≡ (Add,[87; 86],SOME ⦕ 33; 48; 63; 79; 86; 87 ⦖);
    makespace 42 ⦕ 33; 48; 63; 79; 88 ⦖;
    89 :≡ (WordFromInt,[88],NONE);
    90 :≡ (Cons 3,[89],NONE);
    91 :≡ (Cons 3,[90; 79],NONE);
    92 :≡ (Cons 0,[],NONE);
    93 :≡ (Const 116,[],NONE);
    94 :≡ (Cons 0,[93; 92],NONE);
    95 :≡ (Const 115,[],NONE);
    96 :≡ (Cons 0,[95; 94],NONE);
    97 :≡ (Const 111,[],NONE);
    98 :≡ (Cons 0,[97; 96],NONE);
    99 :≡ (Const 112,[],NONE);
    100 :≡ (Cons 0,[99; 98],NONE);
    101 :≡ (Const 103,[],NONE);
    102 :≡ (Cons 0,[101; 100],NONE);
    103 :≡ (Const 121,[],NONE);
    104 :≡ (Cons 0,[103; 102],NONE);
    105 :≡ (Cons 2,[104],NONE);
    106 :≡ (Cons 4,[105; 91],NONE);
    107 :≡ (Cons 3,[106; 63],NONE);
    108 :≡ (Cons 3,[107; 48],NONE);
    109 :≡ (Cons 0,[],NONE);
    110 :≡ (Const 65,[],NONE);
    111 :≡ (Cons 0,[110; 109],NONE);
    112 :≡ (Cons 2,[111],NONE);
    113 :≡ (Const 31,[],NONE);
    114 :≡ (Const 268435457,[],NONE);
    115 :≡ (Mult,[114; 113],SOME ⦕ 33; 108; 112; 113; 114 ⦖);
    116 :≡ (Const 268435425,[],NONE);
    117 :≡ (Add,[116; 115],SOME ⦕ 33; 108; 112; 115; 116 ⦖);
    makespace 25 ⦕ 33; 108; 112; 117 ⦖;
    118 :≡ (WordFromInt,[117],NONE);
    119 :≡ (Cons 3,[118],NONE);
    120 :≡ (Cons 3,[119; 112],NONE);
    121 :≡ (Cons 0,[],NONE);
    122 :≡ (Const 116,[],NONE);
    123 :≡ (Cons 0,[122; 121],NONE);
    124 :≡ (Const 115,[],NONE);
    125 :≡ (Cons 0,[124; 123],NONE);
    126 :≡ (Const 111,[],NONE);
    127 :≡ (Cons 0,[126; 125],NONE);
    128 :≡ (Const 112,[],NONE);
    129 :≡ (Cons 0,[128; 127],NONE);
    130 :≡ (Const 116,[],NONE);
    131 :≡ (Cons 0,[130; 129],NONE);
    132 :≡ (Cons 2,[131],NONE);
    133 :≡ (Const 255,[],NONE);
    134 :≡ (Const 268435457,[],NONE);
    135 :≡ (Mult,[134; 133],SOME ⦕ 33; 108; 120; 132; 133; 134 ⦖);
    136 :≡ (Const 268434929,[],NONE);
    137 :≡ (Add,[136; 135],SOME ⦕ 33; 108; 120; 132; 135; 136 ⦖);
    138 :≡ (Const 268435457,[],NONE);
    139 :≡ (Mult,[138; 137],SOME ⦕ 33; 108; 120; 132; 137; 138 ⦖);
    140 :≡ (Const 272,[],NONE);
    141 :≡ (Add,[140; 139],SOME ⦕ 33; 108; 120; 132; 139; 140 ⦖);
    makespace 24 ⦕ 33; 108; 120; 132; 141 ⦖;
    142 :≡ (WordFromInt,[141],NONE);
    143 :≡ (Cons 3,[142],NONE);
    144 :≡ (Cons 3,[143; 132],NONE);
    145 :≡ (Cons 0,[],NONE);
    146 :≡ (Const 84,[],NONE);
    147 :≡ (Cons 0,[146; 145],NONE);
    148 :≡ (Cons 2,[147],NONE);
    149 :≡ (Cons 4,[148; 144],NONE);
    150 :≡ (Cons 0,[],NONE);
    151 :≡ (Const 97,[],NONE);
    152 :≡ (Cons 0,[151; 150],NONE);
    153 :≡ (Cons 2,[152],NONE);
    154 :≡ (Cons 3,[153; 149],NONE);
    155 :≡ (Const 159,[],NONE);
    156 :≡ (Const 268435457,[],NONE);
    157 :≡ (Mult,[156; 155],SOME ⦕ 33; 108; 120; 154; 155; 156 ⦖);
    158 :≡ (Const 268435297,[],NONE);
    159 :≡ (Add,[158; 157],SOME ⦕ 33; 108; 120; 154; 157; 158 ⦖);
    makespace 45 ⦕ 33; 108; 120; 154; 159 ⦖;
    160 :≡ (WordFromInt,[159],NONE);
    161 :≡ (Cons 3,[160],NONE);
    162 :≡ (Cons 0,[],NONE);
    163 :≡ (Const 116,[],NONE);
    164 :≡ (Cons 0,[163; 162],NONE);
    165 :≡ (Const 115,[],NONE);
    166 :≡ (Cons 0,[165; 164],NONE);
    167 :≡ (Const 111,[],NONE);
    168 :≡ (Cons 0,[167; 166],NONE);
    169 :≡ (Const 112,[],NONE);
    170 :≡ (Cons 0,[169; 168],NONE);
    171 :≡ (Const 118,[],NONE);
    172 :≡ (Cons 0,[171; 170],NONE);
    173 :≡ (Cons 2,[172],NONE);
    174 :≡ (Cons 3,[173; 161],NONE);
    175 :≡ (Cons 4,[174; 154],NONE);
    176 :≡ (Cons 0,[],NONE);
    177 :≡ (Const 116,[],NONE);
    178 :≡ (Cons 0,[177; 176],NONE);
    179 :≡ (Const 115,[],NONE);
    180 :≡ (Cons 0,[179; 178],NONE);
    181 :≡ (Const 111,[],NONE);
    182 :≡ (Cons 0,[181; 180],NONE);
    183 :≡ (Const 112,[],NONE);
    184 :≡ (Cons 0,[183; 182],NONE);
    185 :≡ (Const 116,[],NONE);
    186 :≡ (Cons 0,[185; 184],NONE);
    187 :≡ (Cons 2,[186],NONE);
    188 :≡ (Const 255,[],NONE);
    189 :≡ (Const 268435457,[],NONE);
    190 :≡ (Mult,[189; 188],SOME ⦕ 33; 108; 120; 175; 187; 188; 189 ⦖);
    191 :≡ (Const 268434929,[],NONE);
    192 :≡ (Add,[191; 190],SOME ⦕ 33; 108; 120; 175; 187; 190; 191 ⦖);
    193 :≡ (Const 268435457,[],NONE);
    194 :≡ (Mult,[193; 192],SOME ⦕ 33; 108; 120; 175; 187; 192; 193 ⦖);
    195 :≡ (Const 272,[],NONE);
    196 :≡ (Add,[195; 194],SOME ⦕ 33; 108; 120; 175; 187; 194; 195 ⦖);
    makespace 24 ⦕ 33; 108; 120; 175; 187; 196 ⦖;
    197 :≡ (WordFromInt,[196],NONE);
    198 :≡ (Cons 3,[197],NONE);
    199 :≡ (Cons 3,[198; 187],NONE);
    200 :≡ (Cons 0,[],NONE);
    201 :≡ (Const 84,[],NONE);
    202 :≡ (Cons 0,[201; 200],NONE);
    203 :≡ (Cons 2,[202],NONE);
    204 :≡ (Cons 4,[203; 199],NONE);
    205 :≡ (Cons 0,[],NONE);
    206 :≡ (Const 97,[],NONE);
    207 :≡ (Cons 0,[206; 205],NONE);
    208 :≡ (Cons 2,[207],NONE);
    209 :≡ (Cons 3,[208; 204],NONE);
    210 :≡ (Const 159,[],NONE);
    211 :≡ (Const 268435457,[],NONE);
    212 :≡ (Mult,[211; 210],SOME ⦕ 33; 108; 120; 175; 209; 210; 211 ⦖);
    213 :≡ (Const 268435297,[],NONE);
    214 :≡ (Add,[213; 212],SOME ⦕ 33; 108; 120; 175; 209; 212; 213 ⦖);
    makespace 31 ⦕ 33; 108; 120; 175; 209; 214 ⦖;
    215 :≡ (WordFromInt,[214],NONE);
    216 :≡ (Cons 3,[215],NONE);
    217 :≡ (Cons 0,[],NONE);
    218 :≡ (Const 116,[],NONE);
    219 :≡ (Cons 0,[218; 217],NONE);
    220 :≡ (Const 115,[],NONE);
    221 :≡ (Cons 0,[220; 219],NONE);
    222 :≡ (Const 111,[],NONE);
    223 :≡ (Cons 0,[222; 221],NONE);
    224 :≡ (Const 112,[],NONE);
    225 :≡ (Cons 0,[224; 223],NONE);
    226 :≡ (Const 118,[],NONE);
    227 :≡ (Cons 0,[226; 225],NONE);
    228 :≡ (Cons 2,[227],NONE);
    229 :≡ (Cons 3,[228; 216],NONE);
    230 :≡ (Cons 4,[229; 209],NONE);
    231 :≡ (Cons 3,[230; 175],NONE);
    232 :≡ (Const 255,[],NONE);
    233 :≡ (Const 268435457,[],NONE);
    234 :≡ (Mult,[233; 232],SOME ⦕ 33; 108; 120; 231; 232; 233 ⦖);
    235 :≡ (Const 268434929,[],NONE);
    236 :≡ (Add,[235; 234],SOME ⦕ 33; 108; 120; 231; 234; 235 ⦖);
    237 :≡ (Const 268435457,[],NONE);
    238 :≡ (Mult,[237; 236],SOME ⦕ 33; 108; 120; 231; 236; 237 ⦖);
    239 :≡ (Const 272,[],NONE);
    240 :≡ (Add,[239; 238],SOME ⦕ 33; 108; 120; 231; 238; 239 ⦖);
    makespace 8 ⦕ 33; 108; 120; 231; 240 ⦖;
    241 :≡ (WordFromInt,[240],NONE);
    242 :≡ (Cons 3,[241],NONE);
    243 :≡ (Cons 3,[242; 231],NONE);
    244 :≡ (Const 159,[],NONE);
    245 :≡ (Const 268435457,[],NONE);
    246 :≡ (Mult,[245; 244],SOME ⦕ 33; 108; 120; 243; 244; 245 ⦖);
    247 :≡ (Const 268435297,[],NONE);
    248 :≡ (Add,[247; 246],SOME ⦕ 33; 108; 120; 243; 246; 247 ⦖);
    makespace 16 ⦕ 33; 108; 120; 243; 248 ⦖;
    249 :≡ (WordFromInt,[248],NONE);
    250 :≡ (Cons 3,[249],NONE);
    251 :≡ (Cons 0,[],NONE);
    252 :≡ (Const 108,[],NONE);
    253 :≡ (Cons 0,[252; 251],NONE);
    254 :≡ (Const 118,[],NONE);
    255 :≡ (Cons 0,[254; 253],NONE);
    256 :≡ (Cons 2,[255],NONE);
    257 :≡ (Cons 3,[256; 250],NONE);
    258 :≡ (Const 159,[],NONE);
    259 :≡ (Const 268435457,[],NONE);
    260 :≡ (Mult,[259; 258],SOME ⦕ 33; 108; 120; 243; 257; 258; 259 ⦖);
    261 :≡ (Const 268435297,[],NONE);
    262 :≡ (Add,[261; 260],SOME ⦕ 33; 108; 120; 243; 257; 260; 261 ⦖);
    makespace 42 ⦕ 33; 108; 120; 243; 257; 262 ⦖;
    263 :≡ (WordFromInt,[262],NONE);
    264 :≡ (Cons 3,[263],NONE);
    265 :≡ (Cons 0,[],NONE);
    266 :≡ (Const 108,[],NONE);
    267 :≡ (Cons 0,[266; 265],NONE);
    268 :≡ (Const 118,[],NONE);
    269 :≡ (Cons 0,[268; 267],NONE);
    270 :≡ (Cons 2,[269],NONE);
    271 :≡ (Cons 3,[270; 264],NONE);
    272 :≡ (Cons 3,[271; 257],NONE);
    273 :≡ (Cons 4,[272; 243],NONE);
    274 :≡ (Cons 2,[273; 120],NONE);
    275 :≡ (Cons 0,[],NONE);
    276 :≡ (Const 116,[],NONE);
    277 :≡ (Cons 0,[276; 275],NONE);
    278 :≡ (Const 115,[],NONE);
    279 :≡ (Cons 0,[278; 277],NONE);
    280 :≡ (Const 111,[],NONE);
    281 :≡ (Cons 0,[280; 279],NONE);
    282 :≡ (Const 112,[],NONE);
    283 :≡ (Cons 0,[282; 281],NONE);
    284 :≡ (Const 116,[],NONE);
    285 :≡ (Cons 0,[284; 283],NONE);
    286 :≡ (Cons 2,[285],NONE);
    287 :≡ (Const 255,[],NONE);
    288 :≡ (Const 268435457,[],NONE);
    289 :≡ (Mult,[288; 287],SOME ⦕ 33; 108; 274; 286; 287; 288 ⦖);
    290 :≡ (Const 268434929,[],NONE);
    291 :≡ (Add,[290; 289],SOME ⦕ 33; 108; 274; 286; 289; 290 ⦖);
    292 :≡ (Const 268435457,[],NONE);
    293 :≡ (Mult,[292; 291],SOME ⦕ 33; 108; 274; 286; 291; 292 ⦖);
    294 :≡ (Const 272,[],NONE);
    295 :≡ (Add,[294; 293],SOME ⦕ 33; 108; 274; 286; 293; 294 ⦖);
    makespace 33 ⦕ 33; 108; 274; 286; 295 ⦖;
    296 :≡ (WordFromInt,[295],NONE);
    297 :≡ (Cons 3,[296],NONE);
    298 :≡ (Cons 3,[297; 286],NONE);
    299 :≡ (Cons 0,[],NONE);
    300 :≡ (Const 84,[],NONE);
    301 :≡ (Cons 0,[300; 299],NONE);
    302 :≡ (Cons 2,[301],NONE);
    303 :≡ (Cons 4,[302; 298],NONE);
    304 :≡ (Cons 0,[],NONE);
    305 :≡ (Const 116,[],NONE);
    306 :≡ (Cons 0,[305; 304],NONE);
    307 :≡ (Const 115,[],NONE);
    308 :≡ (Cons 0,[307; 306],NONE);
    309 :≡ (Const 111,[],NONE);
    310 :≡ (Cons 0,[309; 308],NONE);
    311 :≡ (Const 112,[],NONE);
    312 :≡ (Cons 0,[311; 310],NONE);
    313 :≡ (Const 116,[],NONE);
    314 :≡ (Cons 0,[313; 312],NONE);
    315 :≡ (Cons 2,[314],NONE);
    316 :≡ (Const 255,[],NONE);
    317 :≡ (Const 268435457,[],NONE);
    318 :≡ (Mult,[317; 316],SOME ⦕ 33; 108; 274; 303; 315; 316; 317 ⦖);
    319 :≡ (Const 268434929,[],NONE);
    320 :≡ (Add,[319; 318],SOME ⦕ 33; 108; 274; 303; 315; 318; 319 ⦖);
    321 :≡ (Const 268435457,[],NONE);
    322 :≡ (Mult,[321; 320],SOME ⦕ 33; 108; 274; 303; 315; 320; 321 ⦖);
    323 :≡ (Const 272,[],NONE);
    324 :≡ (Add,[323; 322],SOME ⦕ 33; 108; 274; 303; 315; 322; 323 ⦖);
    makespace 19 ⦕ 33; 108; 274; 303; 315; 324 ⦖;
    325 :≡ (WordFromInt,[324],NONE);
    326 :≡ (Cons 3,[325],NONE);
    327 :≡ (Cons 3,[326; 315],NONE);
    328 :≡ (Cons 0,[],NONE);
    329 :≡ (Const 84,[],NONE);
    330 :≡ (Cons 0,[329; 328],NONE);
    331 :≡ (Cons 2,[330],NONE);
    332 :≡ (Cons 4,[331; 327],NONE);
    333 :≡ (Cons 3,[332; 303],NONE);
    334 :≡ (Const 31,[],NONE);
    335 :≡ (Const 268435457,[],NONE);
    336 :≡ (Mult,[335; 334],SOME ⦕ 33; 108; 274; 333; 334; 335 ⦖);
    337 :≡ (Const 268435425,[],NONE);
    338 :≡ (Add,[337; 336],SOME ⦕ 33; 108; 274; 333; 336; 337 ⦖);
    makespace 16 ⦕ 33; 108; 274; 333; 338 ⦖;
    339 :≡ (WordFromInt,[338],NONE);
    340 :≡ (Cons 3,[339],NONE);
    341 :≡ (Cons 0,[],NONE);
    342 :≡ (Const 97,[],NONE);
    343 :≡ (Cons 0,[342; 341],NONE);
    344 :≡ (Cons 2,[343],NONE);
    345 :≡ (Cons 2,[344; 340],NONE);
    346 :≡ (Cons 3,[345; 333],NONE);
    347 :≡ (Const 159,[],NONE);
    348 :≡ (Const 268435457,[],NONE);
    349 :≡ (Mult,[348; 347],SOME ⦕ 33; 108; 274; 346; 347; 348 ⦖);
    350 :≡ (Const 268435297,[],NONE);
    351 :≡ (Add,[350; 349],SOME ⦕ 33; 108; 274; 346; 349; 350 ⦖);
    makespace 22 ⦕ 33; 108; 274; 346; 351 ⦖;
    352 :≡ (WordFromInt,[351],NONE);
    353 :≡ (Cons 3,[352],NONE);
    354 :≡ (Cons 0,[],NONE);
    355 :≡ (Const 116,[],NONE);
    356 :≡ (Cons 0,[355; 354],NONE);
    357 :≡ (Const 115,[],NONE);
    358 :≡ (Cons 0,[357; 356],NONE);
    359 :≡ (Const 111,[],NONE);
    360 :≡ (Cons 0,[359; 358],NONE);
    361 :≡ (Const 112,[],NONE);
    362 :≡ (Cons 0,[361; 360],NONE);
    363 :≡ (Const 116,[],NONE);
    364 :≡ (Cons 0,[363; 362],NONE);
    365 :≡ (Cons 2,[364],NONE);
    366 :≡ (Const 255,[],NONE);
    367 :≡ (Const 268435457,[],NONE);
    368 :≡ (Mult,[367; 366],SOME ⦕ 33; 108; 274; 346; 353; 365; 366; 367 ⦖);
    369 :≡ (Const 268434929,[],NONE);
    370 :≡ (Add,[369; 368],SOME ⦕ 33; 108; 274; 346; 353; 365; 368; 369 ⦖);
    371 :≡ (Const 268435457,[],NONE);
    372 :≡ (Mult,[371; 370],SOME ⦕ 33; 108; 274; 346; 353; 365; 370; 371 ⦖);
    373 :≡ (Const 272,[],NONE);
    374 :≡ (Add,[373; 372],SOME ⦕ 33; 108; 274; 346; 353; 365; 372; 373 ⦖);
    makespace 86 ⦕ 33; 108; 274; 346; 353; 365; 374 ⦖;
    375 :≡ (WordFromInt,[374],NONE);
    376 :≡ (Cons 3,[375],NONE);
    377 :≡ (Cons 3,[376; 365],NONE);
    378 :≡ (Cons 0,[],NONE);
    379 :≡ (Const 84,[],NONE);
    380 :≡ (Cons 0,[379; 378],NONE);
    381 :≡ (Cons 2,[380],NONE);
    382 :≡ (Cons 4,[381; 377],NONE);
    383 :≡ (Cons 0,[],NONE);
    384 :≡ (Const 116,[],NONE);
    385 :≡ (Cons 0,[384; 383],NONE);
    386 :≡ (Const 115,[],NONE);
    387 :≡ (Cons 0,[386; 385],NONE);
    388 :≡ (Const 111,[],NONE);
    389 :≡ (Cons 0,[388; 387],NONE);
    390 :≡ (Const 112,[],NONE);
    391 :≡ (Cons 0,[390; 389],NONE);
    392 :≡ (Const 118,[],NONE);
    393 :≡ (Cons 0,[392; 391],NONE);
    394 :≡ (Cons 2,[393],NONE);
    395 :≡ (Cons 3,[394; 382],NONE);
    396 :≡ (Cons 3,[395; 353],NONE);
    397 :≡ (Cons 4,[396; 346],NONE);
    398 :≡ (Cons 4,[397; 274],NONE);
    399 :≡ (Cons 0,[],NONE);
    400 :≡ (Const 107,[],NONE);
    401 :≡ (Cons 0,[400; 399],NONE);
    402 :≡ (Cons 2,[401],NONE);
    403 :≡ (Cons 0,[],NONE);
    404 :≡ (Const 107,[],NONE);
    405 :≡ (Cons 0,[404; 403],NONE);
    406 :≡ (Cons 2,[405],NONE);
    407 :≡ (Cons 3,[406; 402],NONE);
    408 :≡ (Cons 0,[],NONE);
    409 :≡ (Const 115,[],NONE);
    410 :≡ (Cons 0,[409; 408],NONE);
    411 :≡ (Const 112,[],NONE);
    412 :≡ (Cons 0,[411; 410],NONE);
    413 :≡ (Const 101,[],NONE);
    414 :≡ (Cons 0,[413; 412],NONE);
    415 :≡ (Cons 2,[414],NONE);
    416 :≡ (Cons 0,[],NONE);
    417 :≡ (Const 115,[],NONE);
    418 :≡ (Cons 0,[417; 416],NONE);
    419 :≡ (Const 112,[],NONE);
    420 :≡ (Cons 0,[419; 418],NONE);
    421 :≡ (Const 101,[],NONE);
    422 :≡ (Cons 0,[421; 420],NONE);
    423 :≡ (Cons 2,[422],NONE);
    424 :≡ (Cons 3,[423; 415],NONE);
    425 :≡ (Cons 3,[424; 407],NONE);
    426 :≡ (Const 1599,[],NONE);
    427 :≡ (Const 268435457,[],NONE);
    428 :≡ (Mult,[427; 426],SOME ⦕ 33; 108; 398; 425; 426; 427 ⦖);
    429 :≡ (Const 268433857,[],NONE);
    430 :≡ (Add,[429; 428],SOME ⦕ 33; 108; 398; 425; 428; 429 ⦖);
    makespace 5 ⦕ 33; 108; 398; 425; 430 ⦖;
    431 :≡ (WordFromInt,[430],NONE);
    432 :≡ (Cons 3,[431],NONE);
    433 :≡ (Const 15,[],NONE);
    434 :≡ (Const 268435457,[],NONE);
    435 :≡ (Mult,[434; 433],SOME ⦕ 33; 108; 398; 425; 432; 433; 434 ⦖);
    436 :≡ (Const 268435441,[],NONE);
    437 :≡ (Add,[436; 435],SOME ⦕ 33; 108; 398; 425; 432; 435; 436 ⦖);
    makespace 21 ⦕ 33; 108; 398; 425; 432; 437 ⦖;
    438 :≡ (WordFromInt,[437],NONE);
    439 :≡ (Cons 3,[438],NONE);
    440 :≡ (Cons 0,[],NONE);
    441 :≡ (Const 107,[],NONE);
    442 :≡ (Cons 0,[441; 440],NONE);
    443 :≡ (Cons 2,[442],NONE);
    444 :≡ (Cons 0,[],NONE);
    445 :≡ (Const 115,[],NONE);
    446 :≡ (Cons 0,[445; 444],NONE);
    447 :≡ (Const 112,[],NONE);
    448 :≡ (Cons 0,[447; 446],NONE);
    449 :≡ (Const 101,[],NONE);
    450 :≡ (Cons 0,[449; 448],NONE);
    451 :≡ (Cons 2,[450],NONE);
    452 :≡ (Const 31,[],NONE);
    453 :≡ (Const 268435457,[],NONE);
    454 :≡
    (Mult,[453; 452],SOME ⦕ 33; 108; 398; 425; 432; 439; 443; 451; 452; 453 ⦖);
    455 :≡ (Const 268435425,[],NONE);
    456 :≡
    (Add,[455; 454],SOME ⦕ 33; 108; 398; 425; 432; 439; 443; 451; 454; 455 ⦖);
    makespace 17 ⦕ 33; 108; 398; 425; 432; 439; 443; 451; 456 ⦖;
    457 :≡ (WordFromInt,[456],NONE);
    458 :≡ (Cons 3,[457],NONE);
    459 :≡ (Cons 3,[458; 451],NONE);
    460 :≡ (Cons 3,[459; 443],NONE);
    461 :≡ (Cons 3,[460; 439],NONE);
    462 :≡ (Cons 3,[461; 432],NONE);
    463 :≡ (Const 255,[],NONE);
    464 :≡ (Const 268435457,[],NONE);
    465 :≡ (Mult,[464; 463],SOME ⦕ 33; 108; 398; 425; 462; 463; 464 ⦖);
    466 :≡ (Const 268434929,[],NONE);
    467 :≡ (Add,[466; 465],SOME ⦕ 33; 108; 398; 425; 462; 465; 466 ⦖);
    468 :≡ (Const 268435457,[],NONE);
    469 :≡ (Mult,[468; 467],SOME ⦕ 33; 108; 398; 425; 462; 467; 468 ⦖);
    470 :≡ (Const 272,[],NONE);
    471 :≡ (Add,[470; 469],SOME ⦕ 33; 108; 398; 425; 462; 469; 470 ⦖);
    makespace 8 ⦕ 33; 108; 398; 425; 462; 471 ⦖;
    472 :≡ (WordFromInt,[471],NONE);
    473 :≡ (Cons 3,[472],NONE);
    474 :≡ (Cons 3,[473; 462],NONE);
    475 :≡ (Const 1599,[],NONE);
    476 :≡ (Const 268435457,[],NONE);
    477 :≡ (Mult,[476; 475],SOME ⦕ 33; 108; 398; 425; 474; 475; 476 ⦖);
    478 :≡ (Const 268433857,[],NONE);
    479 :≡ (Add,[478; 477],SOME ⦕ 33; 108; 398; 425; 474; 477; 478 ⦖);
    makespace 5 ⦕ 33; 108; 398; 425; 474; 479 ⦖;
    480 :≡ (WordFromInt,[479],NONE);
    481 :≡ (Cons 3,[480],NONE);
    482 :≡ (Const 15,[],NONE);
    483 :≡ (Const 268435457,[],NONE);
    484 :≡ (Mult,[483; 482],SOME ⦕ 33; 108; 398; 425; 474; 481; 482; 483 ⦖);
    485 :≡ (Const 268435441,[],NONE);
    486 :≡ (Add,[485; 484],SOME ⦕ 33; 108; 398; 425; 474; 481; 484; 485 ⦖);
    makespace 8 ⦕ 33; 108; 398; 425; 474; 481; 486 ⦖;
    487 :≡ (WordFromInt,[486],NONE);
    488 :≡ (Cons 3,[487],NONE);
    489 :≡ (Cons 3,[488; 481],NONE);
    490 :≡ (Const 1599,[],NONE);
    491 :≡ (Const 268435457,[],NONE);
    492 :≡ (Mult,[491; 490],SOME ⦕ 33; 108; 398; 425; 474; 489; 490; 491 ⦖);
    493 :≡ (Const 268433857,[],NONE);
    494 :≡ (Add,[493; 492],SOME ⦕ 33; 108; 398; 425; 474; 489; 492; 493 ⦖);
    makespace 5 ⦕ 33; 108; 398; 425; 474; 489; 494 ⦖;
    495 :≡ (WordFromInt,[494],NONE);
    496 :≡ (Cons 3,[495],NONE);
    497 :≡ (Const 15,[],NONE);
    498 :≡ (Const 268435457,[],NONE);
    499 :≡
    (Mult,[498; 497],SOME ⦕ 33; 108; 398; 425; 474; 489; 496; 497; 498 ⦖);
    500 :≡ (Const 268435441,[],NONE);
    501 :≡ (Add,[500; 499],SOME ⦕ 33; 108; 398; 425; 474; 489; 496; 499; 500 ⦖);
    makespace 26 ⦕ 33; 108; 398; 425; 474; 489; 496; 501 ⦖;
    502 :≡ (WordFromInt,[501],NONE);
    503 :≡ (Cons 3,[502],NONE);
    504 :≡ (Cons 3,[503; 496],NONE);
    505 :≡ (Cons 3,[504; 489],NONE);
    506 :≡ (Cons 4,[505; 474],NONE);
    507 :≡ (Cons 4,[506; 425],NONE);
    508 :≡ (Cons 3,[507; 398],NONE);
    509 :≡ (Cons 3,[508; 108],NONE);
    510 :≡ (Cons 1,[509; 33],NONE);
    511 :≡ (Const 159,[],NONE);
    512 :≡ (Const 268435457,[],NONE);
    513 :≡ (Mult,[512; 511],SOME ⦕ 510; 511; 512 ⦖);
    514 :≡ (Const 268435297,[],NONE);
    515 :≡ (Add,[514; 513],SOME ⦕ 510; 513; 514 ⦖);
    makespace 5 ⦕ 510; 515 ⦖;
    516 :≡ (WordFromInt,[515],NONE);
    517 :≡ (Cons 3,[516],NONE);
    518 :≡ (Const 159,[],NONE);
    519 :≡ (Const 268435457,[],NONE);
    520 :≡ (Mult,[519; 518],SOME ⦕ 510; 517; 518; 519 ⦖);
    521 :≡ (Const 268435297,[],NONE);
    522 :≡ (Add,[521; 520],SOME ⦕ 510; 517; 520; 521 ⦖);
    makespace 8 ⦕ 510; 517; 522 ⦖;
    523 :≡ (WordFromInt,[522],NONE);
    524 :≡ (Cons 3,[523],NONE);
    525 :≡ (Cons 3,[524; 517],NONE);
    526 :≡ (Const 1599,[],NONE);
    527 :≡ (Const 268435457,[],NONE);
    528 :≡ (Mult,[527; 526],SOME ⦕ 510; 525; 526; 527 ⦖);
    529 :≡ (Const 268433857,[],NONE);
    530 :≡ (Add,[529; 528],SOME ⦕ 510; 525; 528; 529 ⦖);
    makespace 5 ⦕ 510; 525; 530 ⦖;
    531 :≡ (WordFromInt,[530],NONE);
    532 :≡ (Cons 3,[531],NONE);
    533 :≡ (Const 1599,[],NONE);
    534 :≡ (Const 268435457,[],NONE);
    535 :≡ (Mult,[534; 533],SOME ⦕ 510; 525; 532; 533; 534 ⦖);
    536 :≡ (Const 268433857,[],NONE);
    537 :≡ (Add,[536; 535],SOME ⦕ 510; 525; 532; 535; 536 ⦖);
    makespace 19 ⦕ 510; 525; 532; 537 ⦖;
    538 :≡ (WordFromInt,[537],NONE);
    539 :≡ (Cons 3,[538],NONE);
    540 :≡ (Cons 3,[539; 532],NONE);
    541 :≡ (Cons 0,[],NONE);
    542 :≡ (Const 115,[],NONE);
    543 :≡ (Cons 0,[542; 541],NONE);
    544 :≡ (Const 112,[],NONE);
    545 :≡ (Cons 0,[544; 543],NONE);
    546 :≡ (Const 101,[],NONE);
    547 :≡ (Cons 0,[546; 545],NONE);
    548 :≡ (Cons 2,[547],NONE);
    549 :≡ (Const 159,[],NONE);
    550 :≡ (Const 268435457,[],NONE);
    551 :≡ (Mult,[550; 549],SOME ⦕ 510; 525; 540; 548; 549; 550 ⦖);
    552 :≡ (Const 268435297,[],NONE);
    553 :≡ (Add,[552; 551],SOME ⦕ 510; 525; 540; 548; 551; 552 ⦖);
    makespace 8 ⦕ 510; 525; 540; 548; 553 ⦖;
    554 :≡ (WordFromInt,[553],NONE);
    555 :≡ (Cons 3,[554],NONE);
    556 :≡ (Cons 3,[555; 548],NONE);
    557 :≡ (Const 255,[],NONE);
    558 :≡ (Const 268435457,[],NONE);
    559 :≡ (Mult,[558; 557],SOME ⦕ 510; 525; 540; 556; 557; 558 ⦖);
    560 :≡ (Const 268434929,[],NONE);
    561 :≡ (Add,[560; 559],SOME ⦕ 510; 525; 540; 556; 559; 560 ⦖);
    562 :≡ (Const 268435457,[],NONE);
    563 :≡ (Mult,[562; 561],SOME ⦕ 510; 525; 540; 556; 561; 562 ⦖);
    564 :≡ (Const 272,[],NONE);
    565 :≡ (Add,[564; 563],SOME ⦕ 510; 525; 540; 556; 563; 564 ⦖);
    makespace 42 ⦕ 510; 525; 540; 556; 565 ⦖;
    566 :≡ (WordFromInt,[565],NONE);
    567 :≡ (Cons 3,[566],NONE);
    568 :≡ (Cons 3,[567; 556],NONE);
    569 :≡ (Cons 0,[],NONE);
    570 :≡ (Const 116,[],NONE);
    571 :≡ (Cons 0,[570; 569],NONE);
    572 :≡ (Const 115,[],NONE);
    573 :≡ (Cons 0,[572; 571],NONE);
    574 :≡ (Const 111,[],NONE);
    575 :≡ (Cons 0,[574; 573],NONE);
    576 :≡ (Const 112,[],NONE);
    577 :≡ (Cons 0,[576; 575],NONE);
    578 :≡ (Const 103,[],NONE);
    579 :≡ (Cons 0,[578; 577],NONE);
    580 :≡ (Const 121,[],NONE);
    581 :≡ (Cons 0,[580; 579],NONE);
    582 :≡ (Cons 2,[581],NONE);
    583 :≡ (Cons 4,[582; 568],NONE);
    584 :≡ (Cons 3,[583; 540],NONE);
    585 :≡ (Cons 3,[584; 525],NONE);
    586 :≡ (Cons 0,[],NONE);
    587 :≡ (Const 65,[],NONE);
    588 :≡ (Cons 0,[587; 586],NONE);
    589 :≡ (Cons 2,[588],NONE);
    590 :≡ (Const 31,[],NONE);
    591 :≡ (Const 268435457,[],NONE);
    592 :≡ (Mult,[591; 590],SOME ⦕ 510; 585; 589; 590; 591 ⦖);
    593 :≡ (Const 268435425,[],NONE);
    594 :≡ (Add,[593; 592],SOME ⦕ 510; 585; 589; 592; 593 ⦖);
    makespace 25 ⦕ 510; 585; 589; 594 ⦖;
    595 :≡ (WordFromInt,[594],NONE);
    596 :≡ (Cons 3,[595],NONE);
    597 :≡ (Cons 3,[596; 589],NONE);
    598 :≡ (Cons 0,[],NONE);
    599 :≡ (Const 116,[],NONE);
    600 :≡ (Cons 0,[599; 598],NONE);
    601 :≡ (Const 115,[],NONE);
    602 :≡ (Cons 0,[601; 600],NONE);
    603 :≡ (Const 111,[],NONE);
    604 :≡ (Cons 0,[603; 602],NONE);
    605 :≡ (Const 112,[],NONE);
    606 :≡ (Cons 0,[605; 604],NONE);
    607 :≡ (Const 116,[],NONE);
    608 :≡ (Cons 0,[607; 606],NONE);
    609 :≡ (Cons 2,[608],NONE);
    610 :≡ (Const 255,[],NONE);
    611 :≡ (Const 268435457,[],NONE);
    612 :≡ (Mult,[611; 610],SOME ⦕ 510; 585; 597; 609; 610; 611 ⦖);
    613 :≡ (Const 268434929,[],NONE);
    614 :≡ (Add,[613; 612],SOME ⦕ 510; 585; 597; 609; 612; 613 ⦖);
    615 :≡ (Const 268435457,[],NONE);
    616 :≡ (Mult,[615; 614],SOME ⦕ 510; 585; 597; 609; 614; 615 ⦖);
    617 :≡ (Const 272,[],NONE);
    618 :≡ (Add,[617; 616],SOME ⦕ 510; 585; 597; 609; 616; 617 ⦖);
    makespace 24 ⦕ 510; 585; 597; 609; 618 ⦖;
    619 :≡ (WordFromInt,[618],NONE);
    620 :≡ (Cons 3,[619],NONE);
    621 :≡ (Cons 3,[620; 609],NONE);
    622 :≡ (Cons 0,[],NONE);
    623 :≡ (Const 84,[],NONE);
    624 :≡ (Cons 0,[623; 622],NONE);
    625 :≡ (Cons 2,[624],NONE);
    626 :≡ (Cons 4,[625; 621],NONE);
    627 :≡ (Cons 0,[],NONE);
    628 :≡ (Const 97,[],NONE);
    629 :≡ (Cons 0,[628; 627],NONE);
    630 :≡ (Cons 2,[629],NONE);
    631 :≡ (Cons 3,[630; 626],NONE);
    632 :≡ (Const 159,[],NONE);
    633 :≡ (Const 268435457,[],NONE);
    634 :≡ (Mult,[633; 632],SOME ⦕ 510; 585; 597; 631; 632; 633 ⦖);
    635 :≡ (Const 268435297,[],NONE);
    636 :≡ (Add,[635; 634],SOME ⦕ 510; 585; 597; 631; 634; 635 ⦖);
    makespace 45 ⦕ 510; 585; 597; 631; 636 ⦖;
    637 :≡ (WordFromInt,[636],NONE);
    638 :≡ (Cons 3,[637],NONE);
    639 :≡ (Cons 0,[],NONE);
    640 :≡ (Const 116,[],NONE);
    641 :≡ (Cons 0,[640; 639],NONE);
    642 :≡ (Const 115,[],NONE);
    643 :≡ (Cons 0,[642; 641],NONE);
    644 :≡ (Const 111,[],NONE);
    645 :≡ (Cons 0,[644; 643],NONE);
    646 :≡ (Const 112,[],NONE);
    647 :≡ (Cons 0,[646; 645],NONE);
    648 :≡ (Const 118,[],NONE);
    649 :≡ (Cons 0,[648; 647],NONE);
    650 :≡ (Cons 2,[649],NONE);
    651 :≡ (Cons 3,[650; 638],NONE);
    652 :≡ (Cons 4,[651; 631],NONE);
    653 :≡ (Cons 0,[],NONE);
    654 :≡ (Const 116,[],NONE);
    655 :≡ (Cons 0,[654; 653],NONE);
    656 :≡ (Const 115,[],NONE);
    657 :≡ (Cons 0,[656; 655],NONE);
    658 :≡ (Const 111,[],NONE);
    659 :≡ (Cons 0,[658; 657],NONE);
    660 :≡ (Const 112,[],NONE);
    661 :≡ (Cons 0,[660; 659],NONE);
    662 :≡ (Const 116,[],NONE);
    663 :≡ (Cons 0,[662; 661],NONE);
    664 :≡ (Cons 2,[663],NONE);
    665 :≡ (Const 255,[],NONE);
    666 :≡ (Const 268435457,[],NONE);
    667 :≡ (Mult,[666; 665],SOME ⦕ 510; 585; 597; 652; 664; 665; 666 ⦖);
    668 :≡ (Const 268434929,[],NONE);
    669 :≡ (Add,[668; 667],SOME ⦕ 510; 585; 597; 652; 664; 667; 668 ⦖);
    670 :≡ (Const 268435457,[],NONE);
    671 :≡ (Mult,[670; 669],SOME ⦕ 510; 585; 597; 652; 664; 669; 670 ⦖);
    672 :≡ (Const 272,[],NONE);
    673 :≡ (Add,[672; 671],SOME ⦕ 510; 585; 597; 652; 664; 671; 672 ⦖);
    makespace 24 ⦕ 510; 585; 597; 652; 664; 673 ⦖;
    674 :≡ (WordFromInt,[673],NONE);
    675 :≡ (Cons 3,[674],NONE);
    676 :≡ (Cons 3,[675; 664],NONE);
    677 :≡ (Cons 0,[],NONE);
    678 :≡ (Const 84,[],NONE);
    679 :≡ (Cons 0,[678; 677],NONE);
    680 :≡ (Cons 2,[679],NONE);
    681 :≡ (Cons 4,[680; 676],NONE);
    682 :≡ (Cons 0,[],NONE);
    683 :≡ (Const 97,[],NONE);
    684 :≡ (Cons 0,[683; 682],NONE);
    685 :≡ (Cons 2,[684],NONE);
    686 :≡ (Cons 3,[685; 681],NONE);
    687 :≡ (Const 159,[],NONE);
    688 :≡ (Const 268435457,[],NONE);
    689 :≡ (Mult,[688; 687],SOME ⦕ 510; 585; 597; 652; 686; 687; 688 ⦖);
    690 :≡ (Const 268435297,[],NONE);
    691 :≡ (Add,[690; 689],SOME ⦕ 510; 585; 597; 652; 686; 689; 690 ⦖);
    makespace 31 ⦕ 510; 585; 597; 652; 686; 691 ⦖;
    692 :≡ (WordFromInt,[691],NONE);
    693 :≡ (Cons 3,[692],NONE);
    694 :≡ (Cons 0,[],NONE);
    695 :≡ (Const 116,[],NONE);
    696 :≡ (Cons 0,[695; 694],NONE);
    697 :≡ (Const 115,[],NONE);
    698 :≡ (Cons 0,[697; 696],NONE);
    699 :≡ (Const 111,[],NONE);
    700 :≡ (Cons 0,[699; 698],NONE);
    701 :≡ (Const 112,[],NONE);
    702 :≡ (Cons 0,[701; 700],NONE);
    703 :≡ (Const 118,[],NONE);
    704 :≡ (Cons 0,[703; 702],NONE);
    705 :≡ (Cons 2,[704],NONE);
    706 :≡ (Cons 3,[705; 693],NONE);
    707 :≡ (Cons 4,[706; 686],NONE);
    708 :≡ (Cons 3,[707; 652],NONE);
    709 :≡ (Const 255,[],NONE);
    710 :≡ (Const 268435457,[],NONE);
    711 :≡ (Mult,[710; 709],SOME ⦕ 510; 585; 597; 708; 709; 710 ⦖);
    712 :≡ (Const 268434929,[],NONE);
    713 :≡ (Add,[712; 711],SOME ⦕ 510; 585; 597; 708; 711; 712 ⦖);
    714 :≡ (Const 268435457,[],NONE);
    715 :≡ (Mult,[714; 713],SOME ⦕ 510; 585; 597; 708; 713; 714 ⦖);
    716 :≡ (Const 272,[],NONE);
    717 :≡ (Add,[716; 715],SOME ⦕ 510; 585; 597; 708; 715; 716 ⦖);
    makespace 8 ⦕ 510; 585; 597; 708; 717 ⦖;
    718 :≡ (WordFromInt,[717],NONE);
    719 :≡ (Cons 3,[718],NONE);
    720 :≡ (Cons 3,[719; 708],NONE);
    721 :≡ (Const 159,[],NONE);
    722 :≡ (Const 268435457,[],NONE);
    723 :≡ (Mult,[722; 721],SOME ⦕ 510; 585; 597; 720; 721; 722 ⦖);
    724 :≡ (Const 268435297,[],NONE);
    725 :≡ (Add,[724; 723],SOME ⦕ 510; 585; 597; 720; 723; 724 ⦖);
    makespace 16 ⦕ 510; 585; 597; 720; 725 ⦖;
    726 :≡ (WordFromInt,[725],NONE);
    727 :≡ (Cons 3,[726],NONE);
    728 :≡ (Cons 0,[],NONE);
    729 :≡ (Const 108,[],NONE);
    730 :≡ (Cons 0,[729; 728],NONE);
    731 :≡ (Const 118,[],NONE);
    732 :≡ (Cons 0,[731; 730],NONE);
    733 :≡ (Cons 2,[732],NONE);
    734 :≡ (Cons 3,[733; 727],NONE);
    735 :≡ (Const 159,[],NONE);
    736 :≡ (Const 268435457,[],NONE);
    737 :≡ (Mult,[736; 735],SOME ⦕ 510; 585; 597; 720; 734; 735; 736 ⦖);
    738 :≡ (Const 268435297,[],NONE);
    739 :≡ (Add,[738; 737],SOME ⦕ 510; 585; 597; 720; 734; 737; 738 ⦖);
    makespace 42 ⦕ 510; 585; 597; 720; 734; 739 ⦖;
    740 :≡ (WordFromInt,[739],NONE);
    741 :≡ (Cons 3,[740],NONE);
    742 :≡ (Cons 0,[],NONE);
    743 :≡ (Const 108,[],NONE);
    744 :≡ (Cons 0,[743; 742],NONE);
    745 :≡ (Const 118,[],NONE);
    746 :≡ (Cons 0,[745; 744],NONE);
    747 :≡ (Cons 2,[746],NONE);
    748 :≡ (Cons 3,[747; 741],NONE);
    749 :≡ (Cons 3,[748; 734],NONE);
    750 :≡ (Cons 4,[749; 720],NONE);
    751 :≡ (Cons 2,[750; 597],NONE);
    752 :≡ (Cons 0,[],NONE);
    753 :≡ (Const 116,[],NONE);
    754 :≡ (Cons 0,[753; 752],NONE);
    755 :≡ (Const 115,[],NONE);
    756 :≡ (Cons 0,[755; 754],NONE);
    757 :≡ (Const 111,[],NONE);
    758 :≡ (Cons 0,[757; 756],NONE);
    759 :≡ (Const 112,[],NONE);
    760 :≡ (Cons 0,[759; 758],NONE);
    761 :≡ (Const 116,[],NONE);
    762 :≡ (Cons 0,[761; 760],NONE);
    763 :≡ (Cons 2,[762],NONE);
    764 :≡ (Const 255,[],NONE);
    765 :≡ (Const 268435457,[],NONE);
    766 :≡ (Mult,[765; 764],SOME ⦕ 510; 585; 751; 763; 764; 765 ⦖);
    767 :≡ (Const 268434929,[],NONE);
    768 :≡ (Add,[767; 766],SOME ⦕ 510; 585; 751; 763; 766; 767 ⦖);
    769 :≡ (Const 268435457,[],NONE);
    770 :≡ (Mult,[769; 768],SOME ⦕ 510; 585; 751; 763; 768; 769 ⦖);
    771 :≡ (Const 272,[],NONE);
    772 :≡ (Add,[771; 770],SOME ⦕ 510; 585; 751; 763; 770; 771 ⦖);
    makespace 33 ⦕ 510; 585; 751; 763; 772 ⦖;
    773 :≡ (WordFromInt,[772],NONE);
    774 :≡ (Cons 3,[773],NONE);
    775 :≡ (Cons 3,[774; 763],NONE);
    776 :≡ (Cons 0,[],NONE);
    777 :≡ (Const 84,[],NONE);
    778 :≡ (Cons 0,[777; 776],NONE);
    779 :≡ (Cons 2,[778],NONE);
    780 :≡ (Cons 4,[779; 775],NONE);
    781 :≡ (Cons 0,[],NONE);
    782 :≡ (Const 116,[],NONE);
    783 :≡ (Cons 0,[782; 781],NONE);
    784 :≡ (Const 115,[],NONE);
    785 :≡ (Cons 0,[784; 783],NONE);
    786 :≡ (Const 111,[],NONE);
    787 :≡ (Cons 0,[786; 785],NONE);
    788 :≡ (Const 112,[],NONE);
    789 :≡ (Cons 0,[788; 787],NONE);
    790 :≡ (Const 116,[],NONE);
    791 :≡ (Cons 0,[790; 789],NONE);
    792 :≡ (Cons 2,[791],NONE);
    793 :≡ (Const 255,[],NONE);
    794 :≡ (Const 268435457,[],NONE);
    795 :≡ (Mult,[794; 793],SOME ⦕ 510; 585; 751; 780; 792; 793; 794 ⦖);
    796 :≡ (Const 268434929,[],NONE);
    797 :≡ (Add,[796; 795],SOME ⦕ 510; 585; 751; 780; 792; 795; 796 ⦖);
    798 :≡ (Const 268435457,[],NONE);
    799 :≡ (Mult,[798; 797],SOME ⦕ 510; 585; 751; 780; 792; 797; 798 ⦖);
    800 :≡ (Const 272,[],NONE);
    801 :≡ (Add,[800; 799],SOME ⦕ 510; 585; 751; 780; 792; 799; 800 ⦖);
    makespace 19 ⦕ 510; 585; 751; 780; 792; 801 ⦖;
    802 :≡ (WordFromInt,[801],NONE);
    803 :≡ (Cons 3,[802],NONE);
    804 :≡ (Cons 3,[803; 792],NONE);
    805 :≡ (Cons 0,[],NONE);
    806 :≡ (Const 84,[],NONE);
    807 :≡ (Cons 0,[806; 805],NONE);
    808 :≡ (Cons 2,[807],NONE);
    809 :≡ (Cons 4,[808; 804],NONE);
    810 :≡ (Cons 3,[809; 780],NONE);
    811 :≡ (Const 31,[],NONE);
    812 :≡ (Const 268435457,[],NONE);
    813 :≡ (Mult,[812; 811],SOME ⦕ 510; 585; 751; 810; 811; 812 ⦖);
    814 :≡ (Const 268435425,[],NONE);
    815 :≡ (Add,[814; 813],SOME ⦕ 510; 585; 751; 810; 813; 814 ⦖);
    makespace 16 ⦕ 510; 585; 751; 810; 815 ⦖;
    816 :≡ (WordFromInt,[815],NONE);
    817 :≡ (Cons 3,[816],NONE);
    818 :≡ (Cons 0,[],NONE);
    819 :≡ (Const 97,[],NONE);
    820 :≡ (Cons 0,[819; 818],NONE);
    821 :≡ (Cons 2,[820],NONE);
    822 :≡ (Cons 2,[821; 817],NONE);
    823 :≡ (Cons 3,[822; 810],NONE);
    824 :≡ (Const 159,[],NONE);
    825 :≡ (Const 268435457,[],NONE);
    826 :≡ (Mult,[825; 824],SOME ⦕ 510; 585; 751; 823; 824; 825 ⦖);
    827 :≡ (Const 268435297,[],NONE);
    828 :≡ (Add,[827; 826],SOME ⦕ 510; 585; 751; 823; 826; 827 ⦖);
    makespace 22 ⦕ 510; 585; 751; 823; 828 ⦖;
    829 :≡ (WordFromInt,[828],NONE);
    830 :≡ (Cons 3,[829],NONE);
    831 :≡ (Cons 0,[],NONE);
    832 :≡ (Const 116,[],NONE);
    833 :≡ (Cons 0,[832; 831],NONE);
    834 :≡ (Const 115,[],NONE);
    835 :≡ (Cons 0,[834; 833],NONE);
    836 :≡ (Const 111,[],NONE);
    837 :≡ (Cons 0,[836; 835],NONE);
    838 :≡ (Const 112,[],NONE);
    839 :≡ (Cons 0,[838; 837],NONE);
    840 :≡ (Const 116,[],NONE);
    841 :≡ (Cons 0,[840; 839],NONE);
    842 :≡ (Cons 2,[841],NONE);
    843 :≡ (Const 255,[],NONE);
    844 :≡ (Const 268435457,[],NONE);
    845 :≡ (Mult,[844; 843],SOME ⦕ 510; 585; 751; 823; 830; 842; 843; 844 ⦖);
    846 :≡ (Const 268434929,[],NONE);
    847 :≡ (Add,[846; 845],SOME ⦕ 510; 585; 751; 823; 830; 842; 845; 846 ⦖);
    848 :≡ (Const 268435457,[],NONE);
    849 :≡ (Mult,[848; 847],SOME ⦕ 510; 585; 751; 823; 830; 842; 847; 848 ⦖);
    850 :≡ (Const 272,[],NONE);
    851 :≡ (Add,[850; 849],SOME ⦕ 510; 585; 751; 823; 830; 842; 849; 850 ⦖);
    makespace 86 ⦕ 510; 585; 751; 823; 830; 842; 851 ⦖;
    852 :≡ (WordFromInt,[851],NONE);
    853 :≡ (Cons 3,[852],NONE);
    854 :≡ (Cons 3,[853; 842],NONE);
    855 :≡ (Cons 0,[],NONE);
    856 :≡ (Const 84,[],NONE);
    857 :≡ (Cons 0,[856; 855],NONE);
    858 :≡ (Cons 2,[857],NONE);
    859 :≡ (Cons 4,[858; 854],NONE);
    860 :≡ (Cons 0,[],NONE);
    861 :≡ (Const 116,[],NONE);
    862 :≡ (Cons 0,[861; 860],NONE);
    863 :≡ (Const 115,[],NONE);
    864 :≡ (Cons 0,[863; 862],NONE);
    865 :≡ (Const 111,[],NONE);
    866 :≡ (Cons 0,[865; 864],NONE);
    867 :≡ (Const 112,[],NONE);
    868 :≡ (Cons 0,[867; 866],NONE);
    869 :≡ (Const 118,[],NONE);
    870 :≡ (Cons 0,[869; 868],NONE);
    871 :≡ (Cons 2,[870],NONE);
    872 :≡ (Cons 3,[871; 859],NONE);
    873 :≡ (Cons 3,[872; 830],NONE);
    874 :≡ (Cons 4,[873; 823],NONE);
    875 :≡ (Cons 4,[874; 751],NONE);
    876 :≡ (Cons 0,[],NONE);
    877 :≡ (Const 107,[],NONE);
    878 :≡ (Cons 0,[877; 876],NONE);
    879 :≡ (Cons 2,[878],NONE);
    880 :≡ (Cons 0,[],NONE);
    881 :≡ (Const 107,[],NONE);
    882 :≡ (Cons 0,[881; 880],NONE);
    883 :≡ (Cons 2,[882],NONE);
    884 :≡ (Cons 3,[883; 879],NONE);
    885 :≡ (Cons 0,[],NONE);
    886 :≡ (Const 115,[],NONE);
    887 :≡ (Cons 0,[886; 885],NONE);
    888 :≡ (Const 112,[],NONE);
    889 :≡ (Cons 0,[888; 887],NONE);
    890 :≡ (Const 101,[],NONE);
    891 :≡ (Cons 0,[890; 889],NONE);
    892 :≡ (Cons 2,[891],NONE);
    893 :≡ (Cons 0,[],NONE);
    894 :≡ (Const 115,[],NONE);
    895 :≡ (Cons 0,[894; 893],NONE);
    896 :≡ (Const 112,[],NONE);
    897 :≡ (Cons 0,[896; 895],NONE);
    898 :≡ (Const 101,[],NONE);
    899 :≡ (Cons 0,[898; 897],NONE);
    900 :≡ (Cons 2,[899],NONE);
    901 :≡ (Cons 3,[900; 892],NONE);
    902 :≡ (Cons 3,[901; 884],NONE);
    903 :≡ (Const 1599,[],NONE);
    904 :≡ (Const 268435457,[],NONE);
    905 :≡ (Mult,[904; 903],SOME ⦕ 510; 585; 875; 902; 903; 904 ⦖);
    906 :≡ (Const 268433857,[],NONE);
    907 :≡ (Add,[906; 905],SOME ⦕ 510; 585; 875; 902; 905; 906 ⦖);
    makespace 5 ⦕ 510; 585; 875; 902; 907 ⦖;
    908 :≡ (WordFromInt,[907],NONE);
    909 :≡ (Cons 3,[908],NONE);
    910 :≡ (Const 15,[],NONE);
    911 :≡ (Const 268435457,[],NONE);
    912 :≡ (Mult,[911; 910],SOME ⦕ 510; 585; 875; 902; 909; 910; 911 ⦖);
    913 :≡ (Const 268435441,[],NONE);
    914 :≡ (Add,[913; 912],SOME ⦕ 510; 585; 875; 902; 909; 912; 913 ⦖);
    makespace 21 ⦕ 510; 585; 875; 902; 909; 914 ⦖;
    915 :≡ (WordFromInt,[914],NONE);
    916 :≡ (Cons 3,[915],NONE);
    917 :≡ (Cons 0,[],NONE);
    918 :≡ (Const 107,[],NONE);
    919 :≡ (Cons 0,[918; 917],NONE);
    920 :≡ (Cons 2,[919],NONE);
    921 :≡ (Cons 0,[],NONE);
    922 :≡ (Const 115,[],NONE);
    923 :≡ (Cons 0,[922; 921],NONE);
    924 :≡ (Const 112,[],NONE);
    925 :≡ (Cons 0,[924; 923],NONE);
    926 :≡ (Const 101,[],NONE);
    927 :≡ (Cons 0,[926; 925],NONE);
    928 :≡ (Cons 2,[927],NONE);
    929 :≡ (Const 31,[],NONE);
    930 :≡ (Const 268435457,[],NONE);
    931 :≡
    (Mult,[930; 929],SOME ⦕ 510; 585; 875; 902; 909; 916; 920; 928; 929; 930 ⦖);
    932 :≡ (Const 268435425,[],NONE);
    933 :≡
    (Add,[932; 931],SOME ⦕ 510; 585; 875; 902; 909; 916; 920; 928; 931; 932 ⦖);
    makespace 17 ⦕ 510; 585; 875; 902; 909; 916; 920; 928; 933 ⦖;
    934 :≡ (WordFromInt,[933],NONE);
    935 :≡ (Cons 3,[934],NONE);
    936 :≡ (Cons 3,[935; 928],NONE);
    937 :≡ (Cons 3,[936; 920],NONE);
    938 :≡ (Cons 3,[937; 916],NONE);
    939 :≡ (Cons 3,[938; 909],NONE);
    940 :≡ (Const 1599,[],NONE);
    941 :≡ (Const 268435457,[],NONE);
    942 :≡ (Mult,[941; 940],SOME ⦕ 510; 585; 875; 902; 939; 940; 941 ⦖);
    943 :≡ (Const 268433857,[],NONE);
    944 :≡ (Add,[943; 942],SOME ⦕ 510; 585; 875; 902; 939; 942; 943 ⦖);
    makespace 5 ⦕ 510; 585; 875; 902; 939; 944 ⦖;
    945 :≡ (WordFromInt,[944],NONE);
    946 :≡ (Cons 3,[945],NONE);
    947 :≡ (Const 15,[],NONE);
    948 :≡ (Const 268435457,[],NONE);
    949 :≡ (Mult,[948; 947],SOME ⦕ 510; 585; 875; 902; 939; 946; 947; 948 ⦖);
    950 :≡ (Const 268435441,[],NONE);
    951 :≡ (Add,[950; 949],SOME ⦕ 510; 585; 875; 902; 939; 946; 949; 950 ⦖);
    makespace 8 ⦕ 510; 585; 875; 902; 939; 946; 951 ⦖;
    952 :≡ (WordFromInt,[951],NONE);
    953 :≡ (Cons 3,[952],NONE);
    954 :≡ (Cons 3,[953; 946],NONE);
    955 :≡ (Const 1599,[],NONE);
    956 :≡ (Const 268435457,[],NONE);
    957 :≡ (Mult,[956; 955],SOME ⦕ 510; 585; 875; 902; 939; 954; 955; 956 ⦖);
    958 :≡ (Const 268433857,[],NONE);
    959 :≡ (Add,[958; 957],SOME ⦕ 510; 585; 875; 902; 939; 954; 957; 958 ⦖);
    makespace 5 ⦕ 510; 585; 875; 902; 939; 954; 959 ⦖;
    960 :≡ (WordFromInt,[959],NONE);
    961 :≡ (Cons 3,[960],NONE);
    962 :≡ (Const 15,[],NONE);
    963 :≡ (Const 268435457,[],NONE);
    964 :≡
    (Mult,[963; 962],SOME ⦕ 510; 585; 875; 902; 939; 954; 961; 962; 963 ⦖);
    965 :≡ (Const 268435441,[],NONE);
    966 :≡
    (Add,[965; 964],SOME ⦕ 510; 585; 875; 902; 939; 954; 961; 964; 965 ⦖);
    makespace 26 ⦕ 510; 585; 875; 902; 939; 954; 961; 966 ⦖;
    967 :≡ (WordFromInt,[966],NONE);
    968 :≡ (Cons 3,[967],NONE);
    969 :≡ (Cons 3,[968; 961],NONE);
    970 :≡ (Cons 3,[969; 954],NONE);
    971 :≡ (Cons 4,[970; 939],NONE);
    972 :≡ (Cons 4,[971; 902],NONE);
    973 :≡ (Cons 3,[972; 875],NONE);
    974 :≡ (Cons 3,[973; 585],NONE);
    975 :≡ (Cons 1,[974; 510],NONE);
    976 :≡ (Const 159,[],NONE);
    977 :≡ (Const 268435457,[],NONE);
    978 :≡ (Mult,[977; 976],SOME ⦕ 975; 976; 977 ⦖);
    979 :≡ (Const 268435297,[],NONE);
    980 :≡ (Add,[979; 978],SOME ⦕ 975; 978; 979 ⦖);
    makespace 5 ⦕ 975; 980 ⦖;
    981 :≡ (WordFromInt,[980],NONE);
    982 :≡ (Cons 3,[981],NONE);
    983 :≡ (Const 159,[],NONE);
    984 :≡ (Const 268435457,[],NONE);
    985 :≡ (Mult,[984; 983],SOME ⦕ 975; 982; 983; 984 ⦖);
    986 :≡ (Const 268435297,[],NONE);
    987 :≡ (Add,[986; 985],SOME ⦕ 975; 982; 985; 986 ⦖);
    makespace 8 ⦕ 975; 982; 987 ⦖;
    988 :≡ (WordFromInt,[987],NONE);
    989 :≡ (Cons 3,[988],NONE);
    990 :≡ (Cons 3,[989; 982],NONE);
    991 :≡ (Const 1599,[],NONE);
    992 :≡ (Const 268435457,[],NONE);
    993 :≡ (Mult,[992; 991],SOME ⦕ 975; 990; 991; 992 ⦖);
    994 :≡ (Const 268433857,[],NONE);
    995 :≡ (Add,[994; 993],SOME ⦕ 975; 990; 993; 994 ⦖);
    makespace 5 ⦕ 975; 990; 995 ⦖;
    996 :≡ (WordFromInt,[995],NONE);
    997 :≡ (Cons 3,[996],NONE);
    998 :≡ (Const 1599,[],NONE);
    999 :≡ (Const 268435457,[],NONE);
    1000 :≡ (Mult,[999; 998],SOME ⦕ 975; 990; 997; 998; 999 ⦖);
    1001 :≡ (Const 268433857,[],NONE);
    1002 :≡ (Add,[1001; 1000],SOME ⦕ 975; 990; 997; 1000; 1001 ⦖);
    makespace 19 ⦕ 975; 990; 997; 1002 ⦖;
    1003 :≡ (WordFromInt,[1002],NONE);
    1004 :≡ (Cons 3,[1003],NONE);
    1005 :≡ (Cons 3,[1004; 997],NONE);
    1006 :≡ (Cons 0,[],NONE);
    1007 :≡ (Const 115,[],NONE);
    1008 :≡ (Cons 0,[1007; 1006],NONE);
    1009 :≡ (Const 112,[],NONE);
    1010 :≡ (Cons 0,[1009; 1008],NONE);
    1011 :≡ (Const 101,[],NONE);
    1012 :≡ (Cons 0,[1011; 1010],NONE);
    1013 :≡ (Cons 2,[1012],NONE);
    1014 :≡ (Const 159,[],NONE);
    1015 :≡ (Const 268435457,[],NONE);
    1016 :≡ (Mult,[1015; 1014],SOME ⦕ 975; 990; 1005; 1013; 1014; 1015 ⦖);
    1017 :≡ (Const 268435297,[],NONE);
    1018 :≡ (Add,[1017; 1016],SOME ⦕ 975; 990; 1005; 1013; 1016; 1017 ⦖);
    makespace 8 ⦕ 975; 990; 1005; 1013; 1018 ⦖;
    1019 :≡ (WordFromInt,[1018],NONE);
    1020 :≡ (Cons 3,[1019],NONE);
    1021 :≡ (Cons 3,[1020; 1013],NONE);
    1022 :≡ (Const 255,[],NONE);
    1023 :≡ (Const 268435457,[],NONE);
    1024 :≡ (Mult,[1023; 1022],SOME ⦕ 975; 990; 1005; 1021; 1022; 1023 ⦖);
    1025 :≡ (Const 268434929,[],NONE);
    1026 :≡ (Add,[1025; 1024],SOME ⦕ 975; 990; 1005; 1021; 1024; 1025 ⦖);
    1027 :≡ (Const 268435457,[],NONE);
    1028 :≡ (Mult,[1027; 1026],SOME ⦕ 975; 990; 1005; 1021; 1026; 1027 ⦖);
    1029 :≡ (Const 272,[],NONE);
    1030 :≡ (Add,[1029; 1028],SOME ⦕ 975; 990; 1005; 1021; 1028; 1029 ⦖);
    makespace 44 ⦕ 975; 990; 1005; 1021; 1030 ⦖;
    1031 :≡ (WordFromInt,[1030],NONE);
    1032 :≡ (Cons 3,[1031],NONE);
    1033 :≡ (Cons 3,[1032; 1021],NONE);
    1034 :≡ (Cons 0,[],NONE);
    1035 :≡ (Const 116,[],NONE);
    1036 :≡ (Cons 0,[1035; 1034],NONE);
    1037 :≡ (Const 115,[],NONE);
    1038 :≡ (Cons 0,[1037; 1036],NONE);
    1039 :≡ (Const 111,[],NONE);
    1040 :≡ (Cons 0,[1039; 1038],NONE);
    1041 :≡ (Const 112,[],NONE);
    1042 :≡ (Cons 0,[1041; 1040],NONE);
    1043 :≡ (Const 103,[],NONE);
    1044 :≡ (Cons 0,[1043; 1042],NONE);
    1045 :≡ (Const 120,[],NONE);
    1046 :≡ (Cons 0,[1045; 1044],NONE);
    1047 :≡ (Cons 2,[1046],NONE);
    1048 :≡ (Cons 1,[1047],NONE);
    1049 :≡ (Cons 4,[1048; 1033],NONE);
    1050 :≡ (Cons 3,[1049; 1005],NONE);
    1051 :≡ (Cons 3,[1050; 990],NONE);
    1052 :≡ (Cons 0,[],NONE);
    1053 :≡ (Const 65,[],NONE);
    1054 :≡ (Cons 0,[1053; 1052],NONE);
    1055 :≡ (Cons 2,[1054],NONE);
    1056 :≡ (Const 31,[],NONE);
    1057 :≡ (Const 268435457,[],NONE);
    1058 :≡ (Mult,[1057; 1056],SOME ⦕ 975; 1051; 1055; 1056; 1057 ⦖);
    1059 :≡ (Const 268435425,[],NONE);
    1060 :≡ (Add,[1059; 1058],SOME ⦕ 975; 1051; 1055; 1058; 1059 ⦖);
    makespace 25 ⦕ 975; 1051; 1055; 1060 ⦖;
    1061 :≡ (WordFromInt,[1060],NONE);
    1062 :≡ (Cons 3,[1061],NONE);
    1063 :≡ (Cons 3,[1062; 1055],NONE);
    1064 :≡ (Cons 0,[],NONE);
    1065 :≡ (Const 116,[],NONE);
    1066 :≡ (Cons 0,[1065; 1064],NONE);
    1067 :≡ (Const 115,[],NONE);
    1068 :≡ (Cons 0,[1067; 1066],NONE);
    1069 :≡ (Const 111,[],NONE);
    1070 :≡ (Cons 0,[1069; 1068],NONE);
    1071 :≡ (Const 112,[],NONE);
    1072 :≡ (Cons 0,[1071; 1070],NONE);
    1073 :≡ (Const 116,[],NONE);
    1074 :≡ (Cons 0,[1073; 1072],NONE);
    1075 :≡ (Cons 2,[1074],NONE);
    1076 :≡ (Const 255,[],NONE);
    1077 :≡ (Const 268435457,[],NONE);
    1078 :≡ (Mult,[1077; 1076],SOME ⦕ 975; 1051; 1063; 1075; 1076; 1077 ⦖);
    1079 :≡ (Const 268434929,[],NONE);
    1080 :≡ (Add,[1079; 1078],SOME ⦕ 975; 1051; 1063; 1075; 1078; 1079 ⦖);
    1081 :≡ (Const 268435457,[],NONE);
    1082 :≡ (Mult,[1081; 1080],SOME ⦕ 975; 1051; 1063; 1075; 1080; 1081 ⦖);
    1083 :≡ (Const 272,[],NONE);
    1084 :≡ (Add,[1083; 1082],SOME ⦕ 975; 1051; 1063; 1075; 1082; 1083 ⦖);
    makespace 24 ⦕ 975; 1051; 1063; 1075; 1084 ⦖;
    1085 :≡ (WordFromInt,[1084],NONE);
    1086 :≡ (Cons 3,[1085],NONE);
    1087 :≡ (Cons 3,[1086; 1075],NONE);
    1088 :≡ (Cons 0,[],NONE);
    1089 :≡ (Const 84,[],NONE);
    1090 :≡ (Cons 0,[1089; 1088],NONE);
    1091 :≡ (Cons 2,[1090],NONE);
    1092 :≡ (Cons 4,[1091; 1087],NONE);
    1093 :≡ (Cons 0,[],NONE);
    1094 :≡ (Const 97,[],NONE);
    1095 :≡ (Cons 0,[1094; 1093],NONE);
    1096 :≡ (Cons 2,[1095],NONE);
    1097 :≡ (Cons 3,[1096; 1092],NONE);
    1098 :≡ (Const 159,[],NONE);
    1099 :≡ (Const 268435457,[],NONE);
    1100 :≡ (Mult,[1099; 1098],SOME ⦕ 975; 1051; 1063; 1097; 1098; 1099 ⦖);
    1101 :≡ (Const 268435297,[],NONE);
    1102 :≡ (Add,[1101; 1100],SOME ⦕ 975; 1051; 1063; 1097; 1100; 1101 ⦖);
    makespace 45 ⦕ 975; 1051; 1063; 1097; 1102 ⦖;
    1103 :≡ (WordFromInt,[1102],NONE);
    1104 :≡ (Cons 3,[1103],NONE);
    1105 :≡ (Cons 0,[],NONE);
    1106 :≡ (Const 116,[],NONE);
    1107 :≡ (Cons 0,[1106; 1105],NONE);
    1108 :≡ (Const 115,[],NONE);
    1109 :≡ (Cons 0,[1108; 1107],NONE);
    1110 :≡ (Const 111,[],NONE);
    1111 :≡ (Cons 0,[1110; 1109],NONE);
    1112 :≡ (Const 112,[],NONE);
    1113 :≡ (Cons 0,[1112; 1111],NONE);
    1114 :≡ (Const 118,[],NONE);
    1115 :≡ (Cons 0,[1114; 1113],NONE);
    1116 :≡ (Cons 2,[1115],NONE);
    1117 :≡ (Cons 3,[1116; 1104],NONE);
    1118 :≡ (Cons 4,[1117; 1097],NONE);
    1119 :≡ (Cons 0,[],NONE);
    1120 :≡ (Const 116,[],NONE);
    1121 :≡ (Cons 0,[1120; 1119],NONE);
    1122 :≡ (Const 115,[],NONE);
    1123 :≡ (Cons 0,[1122; 1121],NONE);
    1124 :≡ (Const 111,[],NONE);
    1125 :≡ (Cons 0,[1124; 1123],NONE);
    1126 :≡ (Const 112,[],NONE);
    1127 :≡ (Cons 0,[1126; 1125],NONE);
    1128 :≡ (Const 116,[],NONE);
    1129 :≡ (Cons 0,[1128; 1127],NONE);
    1130 :≡ (Cons 2,[1129],NONE);
    1131 :≡ (Const 255,[],NONE);
    1132 :≡ (Const 268435457,[],NONE);
    1133 :≡
    (Mult,[1132; 1131],SOME ⦕ 975; 1051; 1063; 1118; 1130; 1131; 1132 ⦖);
    1134 :≡ (Const 268434929,[],NONE);
    1135 :≡ (Add,[1134; 1133],SOME ⦕ 975; 1051; 1063; 1118; 1130; 1133; 1134 ⦖);
    1136 :≡ (Const 268435457,[],NONE);
    1137 :≡
    (Mult,[1136; 1135],SOME ⦕ 975; 1051; 1063; 1118; 1130; 1135; 1136 ⦖);
    1138 :≡ (Const 272,[],NONE);
    1139 :≡ (Add,[1138; 1137],SOME ⦕ 975; 1051; 1063; 1118; 1130; 1137; 1138 ⦖);
    makespace 24 ⦕ 975; 1051; 1063; 1118; 1130; 1139 ⦖;
    1140 :≡ (WordFromInt,[1139],NONE);
    1141 :≡ (Cons 3,[1140],NONE);
    1142 :≡ (Cons 3,[1141; 1130],NONE);
    1143 :≡ (Cons 0,[],NONE);
    1144 :≡ (Const 84,[],NONE);
    1145 :≡ (Cons 0,[1144; 1143],NONE);
    1146 :≡ (Cons 2,[1145],NONE);
    1147 :≡ (Cons 4,[1146; 1142],NONE);
    1148 :≡ (Cons 0,[],NONE);
    1149 :≡ (Const 97,[],NONE);
    1150 :≡ (Cons 0,[1149; 1148],NONE);
    1151 :≡ (Cons 2,[1150],NONE);
    1152 :≡ (Cons 3,[1151; 1147],NONE);
    1153 :≡ (Const 159,[],NONE);
    1154 :≡ (Const 268435457,[],NONE);
    1155 :≡
    (Mult,[1154; 1153],SOME ⦕ 975; 1051; 1063; 1118; 1152; 1153; 1154 ⦖);
    1156 :≡ (Const 268435297,[],NONE);
    1157 :≡ (Add,[1156; 1155],SOME ⦕ 975; 1051; 1063; 1118; 1152; 1155; 1156 ⦖);
    makespace 31 ⦕ 975; 1051; 1063; 1118; 1152; 1157 ⦖;
    1158 :≡ (WordFromInt,[1157],NONE);
    1159 :≡ (Cons 3,[1158],NONE);
    1160 :≡ (Cons 0,[],NONE);
    1161 :≡ (Const 116,[],NONE);
    1162 :≡ (Cons 0,[1161; 1160],NONE);
    1163 :≡ (Const 115,[],NONE);
    1164 :≡ (Cons 0,[1163; 1162],NONE);
    1165 :≡ (Const 111,[],NONE);
    1166 :≡ (Cons 0,[1165; 1164],NONE);
    1167 :≡ (Const 112,[],NONE);
    1168 :≡ (Cons 0,[1167; 1166],NONE);
    1169 :≡ (Const 118,[],NONE);
    1170 :≡ (Cons 0,[1169; 1168],NONE);
    1171 :≡ (Cons 2,[1170],NONE);
    1172 :≡ (Cons 3,[1171; 1159],NONE);
    1173 :≡ (Cons 4,[1172; 1152],NONE);
    1174 :≡ (Cons 3,[1173; 1118],NONE);
    1175 :≡ (Const 255,[],NONE);
    1176 :≡ (Const 268435457,[],NONE);
    1177 :≡ (Mult,[1176; 1175],SOME ⦕ 975; 1051; 1063; 1174; 1175; 1176 ⦖);
    1178 :≡ (Const 268434929,[],NONE);
    1179 :≡ (Add,[1178; 1177],SOME ⦕ 975; 1051; 1063; 1174; 1177; 1178 ⦖);
    1180 :≡ (Const 268435457,[],NONE);
    1181 :≡ (Mult,[1180; 1179],SOME ⦕ 975; 1051; 1063; 1174; 1179; 1180 ⦖);
    1182 :≡ (Const 272,[],NONE);
    1183 :≡ (Add,[1182; 1181],SOME ⦕ 975; 1051; 1063; 1174; 1181; 1182 ⦖);
    makespace 8 ⦕ 975; 1051; 1063; 1174; 1183 ⦖;
    1184 :≡ (WordFromInt,[1183],NONE);
    1185 :≡ (Cons 3,[1184],NONE);
    1186 :≡ (Cons 3,[1185; 1174],NONE);
    1187 :≡ (Const 159,[],NONE);
    1188 :≡ (Const 268435457,[],NONE);
    1189 :≡ (Mult,[1188; 1187],SOME ⦕ 975; 1051; 1063; 1186; 1187; 1188 ⦖);
    1190 :≡ (Const 268435297,[],NONE);
    1191 :≡ (Add,[1190; 1189],SOME ⦕ 975; 1051; 1063; 1186; 1189; 1190 ⦖);
    makespace 16 ⦕ 975; 1051; 1063; 1186; 1191 ⦖;
    1192 :≡ (WordFromInt,[1191],NONE);
    1193 :≡ (Cons 3,[1192],NONE);
    1194 :≡ (Cons 0,[],NONE);
    1195 :≡ (Const 108,[],NONE);
    1196 :≡ (Cons 0,[1195; 1194],NONE);
    1197 :≡ (Const 118,[],NONE);
    1198 :≡ (Cons 0,[1197; 1196],NONE);
    1199 :≡ (Cons 2,[1198],NONE);
    1200 :≡ (Cons 3,[1199; 1193],NONE);
    1201 :≡ (Const 159,[],NONE);
    1202 :≡ (Const 268435457,[],NONE);
    1203 :≡
    (Mult,[1202; 1201],SOME ⦕ 975; 1051; 1063; 1186; 1200; 1201; 1202 ⦖);
    1204 :≡ (Const 268435297,[],NONE);
    1205 :≡ (Add,[1204; 1203],SOME ⦕ 975; 1051; 1063; 1186; 1200; 1203; 1204 ⦖);
    makespace 42 ⦕ 975; 1051; 1063; 1186; 1200; 1205 ⦖;
    1206 :≡ (WordFromInt,[1205],NONE);
    1207 :≡ (Cons 3,[1206],NONE);
    1208 :≡ (Cons 0,[],NONE);
    1209 :≡ (Const 108,[],NONE);
    1210 :≡ (Cons 0,[1209; 1208],NONE);
    1211 :≡ (Const 118,[],NONE);
    1212 :≡ (Cons 0,[1211; 1210],NONE);
    1213 :≡ (Cons 2,[1212],NONE);
    1214 :≡ (Cons 3,[1213; 1207],NONE);
    1215 :≡ (Cons 3,[1214; 1200],NONE);
    1216 :≡ (Cons 4,[1215; 1186],NONE);
    1217 :≡ (Cons 2,[1216; 1063],NONE);
    1218 :≡ (Cons 0,[],NONE);
    1219 :≡ (Const 116,[],NONE);
    1220 :≡ (Cons 0,[1219; 1218],NONE);
    1221 :≡ (Const 115,[],NONE);
    1222 :≡ (Cons 0,[1221; 1220],NONE);
    1223 :≡ (Const 111,[],NONE);
    1224 :≡ (Cons 0,[1223; 1222],NONE);
    1225 :≡ (Const 112,[],NONE);
    1226 :≡ (Cons 0,[1225; 1224],NONE);
    1227 :≡ (Const 116,[],NONE);
    1228 :≡ (Cons 0,[1227; 1226],NONE);
    1229 :≡ (Cons 2,[1228],NONE);
    1230 :≡ (Const 255,[],NONE);
    1231 :≡ (Const 268435457,[],NONE);
    1232 :≡ (Mult,[1231; 1230],SOME ⦕ 975; 1051; 1217; 1229; 1230; 1231 ⦖);
    1233 :≡ (Const 268434929,[],NONE);
    1234 :≡ (Add,[1233; 1232],SOME ⦕ 975; 1051; 1217; 1229; 1232; 1233 ⦖);
    1235 :≡ (Const 268435457,[],NONE);
    1236 :≡ (Mult,[1235; 1234],SOME ⦕ 975; 1051; 1217; 1229; 1234; 1235 ⦖);
    1237 :≡ (Const 272,[],NONE);
    1238 :≡ (Add,[1237; 1236],SOME ⦕ 975; 1051; 1217; 1229; 1236; 1237 ⦖);
    makespace 33 ⦕ 975; 1051; 1217; 1229; 1238 ⦖;
    1239 :≡ (WordFromInt,[1238],NONE);
    1240 :≡ (Cons 3,[1239],NONE);
    1241 :≡ (Cons 3,[1240; 1229],NONE);
    1242 :≡ (Cons 0,[],NONE);
    1243 :≡ (Const 84,[],NONE);
    1244 :≡ (Cons 0,[1243; 1242],NONE);
    1245 :≡ (Cons 2,[1244],NONE);
    1246 :≡ (Cons 4,[1245; 1241],NONE);
    1247 :≡ (Cons 0,[],NONE);
    1248 :≡ (Const 116,[],NONE);
    1249 :≡ (Cons 0,[1248; 1247],NONE);
    1250 :≡ (Const 115,[],NONE);
    1251 :≡ (Cons 0,[1250; 1249],NONE);
    1252 :≡ (Const 111,[],NONE);
    1253 :≡ (Cons 0,[1252; 1251],NONE);
    1254 :≡ (Const 112,[],NONE);
    1255 :≡ (Cons 0,[1254; 1253],NONE);
    1256 :≡ (Const 116,[],NONE);
    1257 :≡ (Cons 0,[1256; 1255],NONE);
    1258 :≡ (Cons 2,[1257],NONE);
    1259 :≡ (Const 255,[],NONE);
    1260 :≡ (Const 268435457,[],NONE);
    1261 :≡
    (Mult,[1260; 1259],SOME ⦕ 975; 1051; 1217; 1246; 1258; 1259; 1260 ⦖);
    1262 :≡ (Const 268434929,[],NONE);
    1263 :≡ (Add,[1262; 1261],SOME ⦕ 975; 1051; 1217; 1246; 1258; 1261; 1262 ⦖);
    1264 :≡ (Const 268435457,[],NONE);
    1265 :≡
    (Mult,[1264; 1263],SOME ⦕ 975; 1051; 1217; 1246; 1258; 1263; 1264 ⦖);
    1266 :≡ (Const 272,[],NONE);
    1267 :≡ (Add,[1266; 1265],SOME ⦕ 975; 1051; 1217; 1246; 1258; 1265; 1266 ⦖);
    makespace 19 ⦕ 975; 1051; 1217; 1246; 1258; 1267 ⦖;
    1268 :≡ (WordFromInt,[1267],NONE);
    1269 :≡ (Cons 3,[1268],NONE);
    1270 :≡ (Cons 3,[1269; 1258],NONE);
    1271 :≡ (Cons 0,[],NONE);
    1272 :≡ (Const 84,[],NONE);
    1273 :≡ (Cons 0,[1272; 1271],NONE);
    1274 :≡ (Cons 2,[1273],NONE);
    1275 :≡ (Cons 4,[1274; 1270],NONE);
    1276 :≡ (Cons 3,[1275; 1246],NONE);
    1277 :≡ (Const 31,[],NONE);
    1278 :≡ (Const 268435457,[],NONE);
    1279 :≡ (Mult,[1278; 1277],SOME ⦕ 975; 1051; 1217; 1276; 1277; 1278 ⦖);
    1280 :≡ (Const 268435425,[],NONE);
    1281 :≡ (Add,[1280; 1279],SOME ⦕ 975; 1051; 1217; 1276; 1279; 1280 ⦖);
    makespace 16 ⦕ 975; 1051; 1217; 1276; 1281 ⦖;
    1282 :≡ (WordFromInt,[1281],NONE);
    1283 :≡ (Cons 3,[1282],NONE);
    1284 :≡ (Cons 0,[],NONE);
    1285 :≡ (Const 97,[],NONE);
    1286 :≡ (Cons 0,[1285; 1284],NONE);
    1287 :≡ (Cons 2,[1286],NONE);
    1288 :≡ (Cons 2,[1287; 1283],NONE);
    1289 :≡ (Cons 3,[1288; 1276],NONE);
    1290 :≡ (Const 159,[],NONE);
    1291 :≡ (Const 268435457,[],NONE);
    1292 :≡ (Mult,[1291; 1290],SOME ⦕ 975; 1051; 1217; 1289; 1290; 1291 ⦖);
    1293 :≡ (Const 268435297,[],NONE);
    1294 :≡ (Add,[1293; 1292],SOME ⦕ 975; 1051; 1217; 1289; 1292; 1293 ⦖);
    makespace 22 ⦕ 975; 1051; 1217; 1289; 1294 ⦖;
    1295 :≡ (WordFromInt,[1294],NONE);
    1296 :≡ (Cons 3,[1295],NONE);
    1297 :≡ (Cons 0,[],NONE);
    1298 :≡ (Const 116,[],NONE);
    1299 :≡ (Cons 0,[1298; 1297],NONE);
    1300 :≡ (Const 115,[],NONE);
    1301 :≡ (Cons 0,[1300; 1299],NONE);
    1302 :≡ (Const 111,[],NONE);
    1303 :≡ (Cons 0,[1302; 1301],NONE);
    1304 :≡ (Const 112,[],NONE);
    1305 :≡ (Cons 0,[1304; 1303],NONE);
    1306 :≡ (Const 116,[],NONE);
    1307 :≡ (Cons 0,[1306; 1305],NONE);
    1308 :≡ (Cons 2,[1307],NONE);
    1309 :≡ (Const 255,[],NONE);
    1310 :≡ (Const 268435457,[],NONE);
    1311 :≡
    (Mult,[1310; 1309],SOME ⦕ 975; 1051; 1217; 1289; 1296; 1308; 1309; 1310 ⦖);
    1312 :≡ (Const 268434929,[],NONE);
    1313 :≡
    (Add,[1312; 1311],SOME ⦕ 975; 1051; 1217; 1289; 1296; 1308; 1311; 1312 ⦖);
    1314 :≡ (Const 268435457,[],NONE);
    1315 :≡
    (Mult,[1314; 1313],SOME ⦕ 975; 1051; 1217; 1289; 1296; 1308; 1313; 1314 ⦖);
    1316 :≡ (Const 272,[],NONE);
    1317 :≡
    (Add,[1316; 1315],SOME ⦕ 975; 1051; 1217; 1289; 1296; 1308; 1315; 1316 ⦖);
    makespace 86 ⦕ 975; 1051; 1217; 1289; 1296; 1308; 1317 ⦖;
    1318 :≡ (WordFromInt,[1317],NONE);
    1319 :≡ (Cons 3,[1318],NONE);
    1320 :≡ (Cons 3,[1319; 1308],NONE);
    1321 :≡ (Cons 0,[],NONE);
    1322 :≡ (Const 84,[],NONE);
    1323 :≡ (Cons 0,[1322; 1321],NONE);
    1324 :≡ (Cons 2,[1323],NONE);
    1325 :≡ (Cons 4,[1324; 1320],NONE);
    1326 :≡ (Cons 0,[],NONE);
    1327 :≡ (Const 116,[],NONE);
    1328 :≡ (Cons 0,[1327; 1326],NONE);
    1329 :≡ (Const 115,[],NONE);
    1330 :≡ (Cons 0,[1329; 1328],NONE);
    1331 :≡ (Const 111,[],NONE);
    1332 :≡ (Cons 0,[1331; 1330],NONE);
    1333 :≡ (Const 112,[],NONE);
    1334 :≡ (Cons 0,[1333; 1332],NONE);
    1335 :≡ (Const 118,[],NONE);
    1336 :≡ (Cons 0,[1335; 1334],NONE);
    1337 :≡ (Cons 2,[1336],NONE);
    1338 :≡ (Cons 3,[1337; 1325],NONE);
    1339 :≡ (Cons 3,[1338; 1296],NONE);
    1340 :≡ (Cons 4,[1339; 1289],NONE);
    1341 :≡ (Cons 4,[1340; 1217],NONE);
    1342 :≡ (Cons 0,[],NONE);
    1343 :≡ (Const 107,[],NONE);
    1344 :≡ (Cons 0,[1343; 1342],NONE);
    1345 :≡ (Cons 2,[1344],NONE);
    1346 :≡ (Cons 0,[],NONE);
    1347 :≡ (Const 107,[],NONE);
    1348 :≡ (Cons 0,[1347; 1346],NONE);
    1349 :≡ (Cons 2,[1348],NONE);
    1350 :≡ (Cons 3,[1349; 1345],NONE);
    1351 :≡ (Cons 0,[],NONE);
    1352 :≡ (Const 115,[],NONE);
    1353 :≡ (Cons 0,[1352; 1351],NONE);
    1354 :≡ (Const 112,[],NONE);
    1355 :≡ (Cons 0,[1354; 1353],NONE);
    1356 :≡ (Const 101,[],NONE);
    1357 :≡ (Cons 0,[1356; 1355],NONE);
    1358 :≡ (Cons 2,[1357],NONE);
    1359 :≡ (Cons 0,[],NONE);
    1360 :≡ (Const 115,[],NONE);
    1361 :≡ (Cons 0,[1360; 1359],NONE);
    1362 :≡ (Const 112,[],NONE);
    1363 :≡ (Cons 0,[1362; 1361],NONE);
    1364 :≡ (Const 101,[],NONE);
    1365 :≡ (Cons 0,[1364; 1363],NONE);
    1366 :≡ (Cons 2,[1365],NONE);
    1367 :≡ (Cons 3,[1366; 1358],NONE);
    1368 :≡ (Cons 3,[1367; 1350],NONE);
    1369 :≡ (Const 1599,[],NONE);
    1370 :≡ (Const 268435457,[],NONE);
    1371 :≡ (Mult,[1370; 1369],SOME ⦕ 975; 1051; 1341; 1368; 1369; 1370 ⦖);
    1372 :≡ (Const 268433857,[],NONE);
    1373 :≡ (Add,[1372; 1371],SOME ⦕ 975; 1051; 1341; 1368; 1371; 1372 ⦖);
    makespace 5 ⦕ 975; 1051; 1341; 1368; 1373 ⦖;
    1374 :≡ (WordFromInt,[1373],NONE);
    1375 :≡ (Cons 3,[1374],NONE);
    1376 :≡ (Const 15,[],NONE);
    1377 :≡ (Const 268435457,[],NONE);
    1378 :≡
    (Mult,[1377; 1376],SOME ⦕ 975; 1051; 1341; 1368; 1375; 1376; 1377 ⦖);
    1379 :≡ (Const 268435441,[],NONE);
    1380 :≡ (Add,[1379; 1378],SOME ⦕ 975; 1051; 1341; 1368; 1375; 1378; 1379 ⦖);
    makespace 21 ⦕ 975; 1051; 1341; 1368; 1375; 1380 ⦖;
    1381 :≡ (WordFromInt,[1380],NONE);
    1382 :≡ (Cons 3,[1381],NONE);
    1383 :≡ (Cons 0,[],NONE);
    1384 :≡ (Const 107,[],NONE);
    1385 :≡ (Cons 0,[1384; 1383],NONE);
    1386 :≡ (Cons 2,[1385],NONE);
    1387 :≡ (Cons 0,[],NONE);
    1388 :≡ (Const 115,[],NONE);
    1389 :≡ (Cons 0,[1388; 1387],NONE);
    1390 :≡ (Const 112,[],NONE);
    1391 :≡ (Cons 0,[1390; 1389],NONE);
    1392 :≡ (Const 101,[],NONE);
    1393 :≡ (Cons 0,[1392; 1391],NONE);
    1394 :≡ (Cons 2,[1393],NONE);
    1395 :≡ (Const 31,[],NONE);
    1396 :≡ (Const 268435457,[],NONE);
    1397 :≡
    (Mult,[1396; 1395],
     SOME ⦕ 975; 1051; 1341; 1368; 1375; 1382; 1386; 1394; 1395; 1396 ⦖);
    1398 :≡ (Const 268435425,[],NONE);
    1399 :≡
    (Add,[1398; 1397],
     SOME ⦕ 975; 1051; 1341; 1368; 1375; 1382; 1386; 1394; 1397; 1398 ⦖);
    makespace 17 ⦕ 975; 1051; 1341; 1368; 1375; 1382; 1386; 1394; 1399 ⦖;
    1400 :≡ (WordFromInt,[1399],NONE);
    1401 :≡ (Cons 3,[1400],NONE);
    1402 :≡ (Cons 3,[1401; 1394],NONE);
    1403 :≡ (Cons 3,[1402; 1386],NONE);
    1404 :≡ (Cons 3,[1403; 1382],NONE);
    1405 :≡ (Cons 3,[1404; 1375],NONE);
    1406 :≡ (Const 255,[],NONE);
    1407 :≡ (Const 268435457,[],NONE);
    1408 :≡
    (Mult,[1407; 1406],SOME ⦕ 975; 1051; 1341; 1368; 1405; 1406; 1407 ⦖);
    1409 :≡ (Const 268434929,[],NONE);
    1410 :≡ (Add,[1409; 1408],SOME ⦕ 975; 1051; 1341; 1368; 1405; 1408; 1409 ⦖);
    1411 :≡ (Const 268435457,[],NONE);
    1412 :≡
    (Mult,[1411; 1410],SOME ⦕ 975; 1051; 1341; 1368; 1405; 1410; 1411 ⦖);
    1413 :≡ (Const 272,[],NONE);
    1414 :≡ (Add,[1413; 1412],SOME ⦕ 975; 1051; 1341; 1368; 1405; 1412; 1413 ⦖);
    makespace 8 ⦕ 975; 1051; 1341; 1368; 1405; 1414 ⦖;
    1415 :≡ (WordFromInt,[1414],NONE);
    1416 :≡ (Cons 3,[1415],NONE);
    1417 :≡ (Cons 3,[1416; 1405],NONE);
    1418 :≡ (Const 1599,[],NONE);
    1419 :≡ (Const 268435457,[],NONE);
    1420 :≡
    (Mult,[1419; 1418],SOME ⦕ 975; 1051; 1341; 1368; 1417; 1418; 1419 ⦖);
    1421 :≡ (Const 268433857,[],NONE);
    1422 :≡ (Add,[1421; 1420],SOME ⦕ 975; 1051; 1341; 1368; 1417; 1420; 1421 ⦖);
    makespace 5 ⦕ 975; 1051; 1341; 1368; 1417; 1422 ⦖;
    1423 :≡ (WordFromInt,[1422],NONE);
    1424 :≡ (Cons 3,[1423],NONE);
    1425 :≡ (Const 15,[],NONE);
    1426 :≡ (Const 268435457,[],NONE);
    1427 :≡
    (Mult,[1426; 1425],SOME ⦕ 975; 1051; 1341; 1368; 1417; 1424; 1425; 1426 ⦖);
    1428 :≡ (Const 268435441,[],NONE);
    1429 :≡
    (Add,[1428; 1427],SOME ⦕ 975; 1051; 1341; 1368; 1417; 1424; 1427; 1428 ⦖);
    makespace 8 ⦕ 975; 1051; 1341; 1368; 1417; 1424; 1429 ⦖;
    1430 :≡ (WordFromInt,[1429],NONE);
    1431 :≡ (Cons 3,[1430],NONE);
    1432 :≡ (Cons 3,[1431; 1424],NONE);
    1433 :≡ (Const 1599,[],NONE);
    1434 :≡ (Const 268435457,[],NONE);
    1435 :≡
    (Mult,[1434; 1433],SOME ⦕ 975; 1051; 1341; 1368; 1417; 1432; 1433; 1434 ⦖);
    1436 :≡ (Const 268433857,[],NONE);
    1437 :≡
    (Add,[1436; 1435],SOME ⦕ 975; 1051; 1341; 1368; 1417; 1432; 1435; 1436 ⦖);
    makespace 5 ⦕ 975; 1051; 1341; 1368; 1417; 1432; 1437 ⦖;
    1438 :≡ (WordFromInt,[1437],NONE);
    1439 :≡ (Cons 3,[1438],NONE);
    1440 :≡ (Const 15,[],NONE);
    1441 :≡ (Const 268435457,[],NONE);
    1442 :≡
    (Mult,[1441; 1440],
     SOME ⦕ 975; 1051; 1341; 1368; 1417; 1432; 1439; 1440; 1441 ⦖);
    1443 :≡ (Const 268435441,[],NONE);
    1444 :≡
    (Add,[1443; 1442],
     SOME ⦕ 975; 1051; 1341; 1368; 1417; 1432; 1439; 1442; 1443 ⦖);
    makespace 26 ⦕ 975; 1051; 1341; 1368; 1417; 1432; 1439; 1444 ⦖;
    1445 :≡ (WordFromInt,[1444],NONE);
    1446 :≡ (Cons 3,[1445],NONE);
    1447 :≡ (Cons 3,[1446; 1439],NONE);
    1448 :≡ (Cons 3,[1447; 1432],NONE);
    1449 :≡ (Cons 4,[1448; 1417],NONE);
    1450 :≡ (Cons 4,[1449; 1368],NONE);
    1451 :≡ (Cons 3,[1450; 1341],NONE);
    1452 :≡ (Cons 3,[1451; 1051],NONE);
    1453 :≡ (Cons 1,[1452; 975],NONE);
    return 1453
  od

bvi_aux_5 [] =
  do
    call_bvi_aux_4 (0,LN) [] NONE;
    1 :≡ (Const 159,[],NONE);
    2 :≡ (Const 268435457,[],NONE);
    3 :≡ (Mult,[2; 1],SOME ⦕ 0; 1; 2 ⦖);
    4 :≡ (Const 268435297,[],NONE);
    5 :≡ (Add,[4; 3],SOME ⦕ 0; 3; 4 ⦖);
    makespace 5 ⦕ 0; 5 ⦖;
    6 :≡ (WordFromInt,[5],NONE);
    7 :≡ (Cons 3,[6],NONE);
    8 :≡ (Const 159,[],NONE);
    9 :≡ (Const 268435457,[],NONE);
    10 :≡ (Mult,[9; 8],SOME ⦕ 0; 7; 8; 9 ⦖);
    11 :≡ (Const 268435297,[],NONE);
    12 :≡ (Add,[11; 10],SOME ⦕ 0; 7; 10; 11 ⦖);
    makespace 8 ⦕ 0; 7; 12 ⦖;
    13 :≡ (WordFromInt,[12],NONE);
    14 :≡ (Cons 3,[13],NONE);
    15 :≡ (Cons 3,[14; 7],NONE);
    16 :≡ (Const 1599,[],NONE);
    17 :≡ (Const 268435457,[],NONE);
    18 :≡ (Mult,[17; 16],SOME ⦕ 0; 15; 16; 17 ⦖);
    19 :≡ (Const 268433857,[],NONE);
    20 :≡ (Add,[19; 18],SOME ⦕ 0; 15; 18; 19 ⦖);
    makespace 5 ⦕ 0; 15; 20 ⦖;
    21 :≡ (WordFromInt,[20],NONE);
    22 :≡ (Cons 3,[21],NONE);
    23 :≡ (Const 1599,[],NONE);
    24 :≡ (Const 268435457,[],NONE);
    25 :≡ (Mult,[24; 23],SOME ⦕ 0; 15; 22; 23; 24 ⦖);
    26 :≡ (Const 268433857,[],NONE);
    27 :≡ (Add,[26; 25],SOME ⦕ 0; 15; 22; 25; 26 ⦖);
    makespace 19 ⦕ 0; 15; 22; 27 ⦖;
    28 :≡ (WordFromInt,[27],NONE);
    29 :≡ (Cons 3,[28],NONE);
    30 :≡ (Cons 3,[29; 22],NONE);
    31 :≡ (Cons 0,[],NONE);
    32 :≡ (Const 115,[],NONE);
    33 :≡ (Cons 0,[32; 31],NONE);
    34 :≡ (Const 112,[],NONE);
    35 :≡ (Cons 0,[34; 33],NONE);
    36 :≡ (Const 101,[],NONE);
    37 :≡ (Cons 0,[36; 35],NONE);
    38 :≡ (Cons 2,[37],NONE);
    39 :≡ (Const 159,[],NONE);
    40 :≡ (Const 268435457,[],NONE);
    41 :≡ (Mult,[40; 39],SOME ⦕ 0; 15; 30; 38; 39; 40 ⦖);
    42 :≡ (Const 268435297,[],NONE);
    43 :≡ (Add,[42; 41],SOME ⦕ 0; 15; 30; 38; 41; 42 ⦖);
    makespace 8 ⦕ 0; 15; 30; 38; 43 ⦖;
    44 :≡ (WordFromInt,[43],NONE);
    45 :≡ (Cons 3,[44],NONE);
    46 :≡ (Cons 3,[45; 38],NONE);
    47 :≡ (Const 255,[],NONE);
    48 :≡ (Const 268435457,[],NONE);
    49 :≡ (Mult,[48; 47],SOME ⦕ 0; 15; 30; 46; 47; 48 ⦖);
    50 :≡ (Const 268434929,[],NONE);
    51 :≡ (Add,[50; 49],SOME ⦕ 0; 15; 30; 46; 49; 50 ⦖);
    52 :≡ (Const 268435457,[],NONE);
    53 :≡ (Mult,[52; 51],SOME ⦕ 0; 15; 30; 46; 51; 52 ⦖);
    54 :≡ (Const 272,[],NONE);
    55 :≡ (Add,[54; 53],SOME ⦕ 0; 15; 30; 46; 53; 54 ⦖);
    makespace 42 ⦕ 0; 15; 30; 46; 55 ⦖;
    56 :≡ (WordFromInt,[55],NONE);
    57 :≡ (Cons 3,[56],NONE);
    58 :≡ (Cons 3,[57; 46],NONE);
    59 :≡ (Cons 0,[],NONE);
    60 :≡ (Const 116,[],NONE);
    61 :≡ (Cons 0,[60; 59],NONE);
    62 :≡ (Const 115,[],NONE);
    63 :≡ (Cons 0,[62; 61],NONE);
    64 :≡ (Const 111,[],NONE);
    65 :≡ (Cons 0,[64; 63],NONE);
    66 :≡ (Const 112,[],NONE);
    67 :≡ (Cons 0,[66; 65],NONE);
    68 :≡ (Const 103,[],NONE);
    69 :≡ (Cons 0,[68; 67],NONE);
    70 :≡ (Const 120,[],NONE);
    71 :≡ (Cons 0,[70; 69],NONE);
    72 :≡ (Cons 2,[71],NONE);
    73 :≡ (Cons 4,[72; 58],NONE);
    74 :≡ (Cons 3,[73; 30],NONE);
    75 :≡ (Cons 3,[74; 15],NONE);
    76 :≡ (Cons 0,[],NONE);
    77 :≡ (Const 65,[],NONE);
    78 :≡ (Cons 0,[77; 76],NONE);
    79 :≡ (Cons 2,[78],NONE);
    80 :≡ (Const 31,[],NONE);
    81 :≡ (Const 268435457,[],NONE);
    82 :≡ (Mult,[81; 80],SOME ⦕ 0; 75; 79; 80; 81 ⦖);
    83 :≡ (Const 268435425,[],NONE);
    84 :≡ (Add,[83; 82],SOME ⦕ 0; 75; 79; 82; 83 ⦖);
    makespace 25 ⦕ 0; 75; 79; 84 ⦖;
    85 :≡ (WordFromInt,[84],NONE);
    86 :≡ (Cons 3,[85],NONE);
    87 :≡ (Cons 3,[86; 79],NONE);
    88 :≡ (Cons 0,[],NONE);
    89 :≡ (Const 116,[],NONE);
    90 :≡ (Cons 0,[89; 88],NONE);
    91 :≡ (Const 115,[],NONE);
    92 :≡ (Cons 0,[91; 90],NONE);
    93 :≡ (Const 111,[],NONE);
    94 :≡ (Cons 0,[93; 92],NONE);
    95 :≡ (Const 112,[],NONE);
    96 :≡ (Cons 0,[95; 94],NONE);
    97 :≡ (Const 116,[],NONE);
    98 :≡ (Cons 0,[97; 96],NONE);
    99 :≡ (Cons 2,[98],NONE);
    100 :≡ (Const 255,[],NONE);
    101 :≡ (Const 268435457,[],NONE);
    102 :≡ (Mult,[101; 100],SOME ⦕ 0; 75; 87; 99; 100; 101 ⦖);
    103 :≡ (Const 268434929,[],NONE);
    104 :≡ (Add,[103; 102],SOME ⦕ 0; 75; 87; 99; 102; 103 ⦖);
    105 :≡ (Const 268435457,[],NONE);
    106 :≡ (Mult,[105; 104],SOME ⦕ 0; 75; 87; 99; 104; 105 ⦖);
    107 :≡ (Const 272,[],NONE);
    108 :≡ (Add,[107; 106],SOME ⦕ 0; 75; 87; 99; 106; 107 ⦖);
    makespace 24 ⦕ 0; 75; 87; 99; 108 ⦖;
    109 :≡ (WordFromInt,[108],NONE);
    110 :≡ (Cons 3,[109],NONE);
    111 :≡ (Cons 3,[110; 99],NONE);
    112 :≡ (Cons 0,[],NONE);
    113 :≡ (Const 84,[],NONE);
    114 :≡ (Cons 0,[113; 112],NONE);
    115 :≡ (Cons 2,[114],NONE);
    116 :≡ (Cons 4,[115; 111],NONE);
    117 :≡ (Cons 0,[],NONE);
    118 :≡ (Const 97,[],NONE);
    119 :≡ (Cons 0,[118; 117],NONE);
    120 :≡ (Cons 2,[119],NONE);
    121 :≡ (Cons 3,[120; 116],NONE);
    122 :≡ (Const 159,[],NONE);
    123 :≡ (Const 268435457,[],NONE);
    124 :≡ (Mult,[123; 122],SOME ⦕ 0; 75; 87; 121; 122; 123 ⦖);
    125 :≡ (Const 268435297,[],NONE);
    126 :≡ (Add,[125; 124],SOME ⦕ 0; 75; 87; 121; 124; 125 ⦖);
    makespace 45 ⦕ 0; 75; 87; 121; 126 ⦖;
    127 :≡ (WordFromInt,[126],NONE);
    128 :≡ (Cons 3,[127],NONE);
    129 :≡ (Cons 0,[],NONE);
    130 :≡ (Const 116,[],NONE);
    131 :≡ (Cons 0,[130; 129],NONE);
    132 :≡ (Const 115,[],NONE);
    133 :≡ (Cons 0,[132; 131],NONE);
    134 :≡ (Const 111,[],NONE);
    135 :≡ (Cons 0,[134; 133],NONE);
    136 :≡ (Const 112,[],NONE);
    137 :≡ (Cons 0,[136; 135],NONE);
    138 :≡ (Const 118,[],NONE);
    139 :≡ (Cons 0,[138; 137],NONE);
    140 :≡ (Cons 2,[139],NONE);
    141 :≡ (Cons 3,[140; 128],NONE);
    142 :≡ (Cons 4,[141; 121],NONE);
    143 :≡ (Cons 0,[],NONE);
    144 :≡ (Const 116,[],NONE);
    145 :≡ (Cons 0,[144; 143],NONE);
    146 :≡ (Const 115,[],NONE);
    147 :≡ (Cons 0,[146; 145],NONE);
    148 :≡ (Const 111,[],NONE);
    149 :≡ (Cons 0,[148; 147],NONE);
    150 :≡ (Const 112,[],NONE);
    151 :≡ (Cons 0,[150; 149],NONE);
    152 :≡ (Const 116,[],NONE);
    153 :≡ (Cons 0,[152; 151],NONE);
    154 :≡ (Cons 2,[153],NONE);
    155 :≡ (Const 255,[],NONE);
    156 :≡ (Const 268435457,[],NONE);
    157 :≡ (Mult,[156; 155],SOME ⦕ 0; 75; 87; 142; 154; 155; 156 ⦖);
    158 :≡ (Const 268434929,[],NONE);
    159 :≡ (Add,[158; 157],SOME ⦕ 0; 75; 87; 142; 154; 157; 158 ⦖);
    160 :≡ (Const 268435457,[],NONE);
    161 :≡ (Mult,[160; 159],SOME ⦕ 0; 75; 87; 142; 154; 159; 160 ⦖);
    162 :≡ (Const 272,[],NONE);
    163 :≡ (Add,[162; 161],SOME ⦕ 0; 75; 87; 142; 154; 161; 162 ⦖);
    makespace 24 ⦕ 0; 75; 87; 142; 154; 163 ⦖;
    164 :≡ (WordFromInt,[163],NONE);
    165 :≡ (Cons 3,[164],NONE);
    166 :≡ (Cons 3,[165; 154],NONE);
    167 :≡ (Cons 0,[],NONE);
    168 :≡ (Const 84,[],NONE);
    169 :≡ (Cons 0,[168; 167],NONE);
    170 :≡ (Cons 2,[169],NONE);
    171 :≡ (Cons 4,[170; 166],NONE);
    172 :≡ (Cons 0,[],NONE);
    173 :≡ (Const 97,[],NONE);
    174 :≡ (Cons 0,[173; 172],NONE);
    175 :≡ (Cons 2,[174],NONE);
    176 :≡ (Cons 3,[175; 171],NONE);
    177 :≡ (Const 159,[],NONE);
    178 :≡ (Const 268435457,[],NONE);
    179 :≡ (Mult,[178; 177],SOME ⦕ 0; 75; 87; 142; 176; 177; 178 ⦖);
    180 :≡ (Const 268435297,[],NONE);
    181 :≡ (Add,[180; 179],SOME ⦕ 0; 75; 87; 142; 176; 179; 180 ⦖);
    makespace 31 ⦕ 0; 75; 87; 142; 176; 181 ⦖;
    182 :≡ (WordFromInt,[181],NONE);
    183 :≡ (Cons 3,[182],NONE);
    184 :≡ (Cons 0,[],NONE);
    185 :≡ (Const 116,[],NONE);
    186 :≡ (Cons 0,[185; 184],NONE);
    187 :≡ (Const 115,[],NONE);
    188 :≡ (Cons 0,[187; 186],NONE);
    189 :≡ (Const 111,[],NONE);
    190 :≡ (Cons 0,[189; 188],NONE);
    191 :≡ (Const 112,[],NONE);
    192 :≡ (Cons 0,[191; 190],NONE);
    193 :≡ (Const 118,[],NONE);
    194 :≡ (Cons 0,[193; 192],NONE);
    195 :≡ (Cons 2,[194],NONE);
    196 :≡ (Cons 3,[195; 183],NONE);
    197 :≡ (Cons 4,[196; 176],NONE);
    198 :≡ (Cons 3,[197; 142],NONE);
    199 :≡ (Const 255,[],NONE);
    200 :≡ (Const 268435457,[],NONE);
    201 :≡ (Mult,[200; 199],SOME ⦕ 0; 75; 87; 198; 199; 200 ⦖);
    202 :≡ (Const 268434929,[],NONE);
    203 :≡ (Add,[202; 201],SOME ⦕ 0; 75; 87; 198; 201; 202 ⦖);
    204 :≡ (Const 268435457,[],NONE);
    205 :≡ (Mult,[204; 203],SOME ⦕ 0; 75; 87; 198; 203; 204 ⦖);
    206 :≡ (Const 272,[],NONE);
    207 :≡ (Add,[206; 205],SOME ⦕ 0; 75; 87; 198; 205; 206 ⦖);
    makespace 8 ⦕ 0; 75; 87; 198; 207 ⦖;
    208 :≡ (WordFromInt,[207],NONE);
    209 :≡ (Cons 3,[208],NONE);
    210 :≡ (Cons 3,[209; 198],NONE);
    211 :≡ (Const 159,[],NONE);
    212 :≡ (Const 268435457,[],NONE);
    213 :≡ (Mult,[212; 211],SOME ⦕ 0; 75; 87; 210; 211; 212 ⦖);
    214 :≡ (Const 268435297,[],NONE);
    215 :≡ (Add,[214; 213],SOME ⦕ 0; 75; 87; 210; 213; 214 ⦖);
    makespace 16 ⦕ 0; 75; 87; 210; 215 ⦖;
    216 :≡ (WordFromInt,[215],NONE);
    217 :≡ (Cons 3,[216],NONE);
    218 :≡ (Cons 0,[],NONE);
    219 :≡ (Const 108,[],NONE);
    220 :≡ (Cons 0,[219; 218],NONE);
    221 :≡ (Const 118,[],NONE);
    222 :≡ (Cons 0,[221; 220],NONE);
    223 :≡ (Cons 2,[222],NONE);
    224 :≡ (Cons 3,[223; 217],NONE);
    225 :≡ (Const 159,[],NONE);
    226 :≡ (Const 268435457,[],NONE);
    227 :≡ (Mult,[226; 225],SOME ⦕ 0; 75; 87; 210; 224; 225; 226 ⦖);
    228 :≡ (Const 268435297,[],NONE);
    229 :≡ (Add,[228; 227],SOME ⦕ 0; 75; 87; 210; 224; 227; 228 ⦖);
    makespace 42 ⦕ 0; 75; 87; 210; 224; 229 ⦖;
    230 :≡ (WordFromInt,[229],NONE);
    231 :≡ (Cons 3,[230],NONE);
    232 :≡ (Cons 0,[],NONE);
    233 :≡ (Const 108,[],NONE);
    234 :≡ (Cons 0,[233; 232],NONE);
    235 :≡ (Const 118,[],NONE);
    236 :≡ (Cons 0,[235; 234],NONE);
    237 :≡ (Cons 2,[236],NONE);
    238 :≡ (Cons 3,[237; 231],NONE);
    239 :≡ (Cons 3,[238; 224],NONE);
    240 :≡ (Cons 4,[239; 210],NONE);
    241 :≡ (Cons 2,[240; 87],NONE);
    242 :≡ (Cons 0,[],NONE);
    243 :≡ (Const 116,[],NONE);
    244 :≡ (Cons 0,[243; 242],NONE);
    245 :≡ (Const 115,[],NONE);
    246 :≡ (Cons 0,[245; 244],NONE);
    247 :≡ (Const 111,[],NONE);
    248 :≡ (Cons 0,[247; 246],NONE);
    249 :≡ (Const 112,[],NONE);
    250 :≡ (Cons 0,[249; 248],NONE);
    251 :≡ (Const 116,[],NONE);
    252 :≡ (Cons 0,[251; 250],NONE);
    253 :≡ (Cons 2,[252],NONE);
    254 :≡ (Const 255,[],NONE);
    255 :≡ (Const 268435457,[],NONE);
    256 :≡ (Mult,[255; 254],SOME ⦕ 0; 75; 241; 253; 254; 255 ⦖);
    257 :≡ (Const 268434929,[],NONE);
    258 :≡ (Add,[257; 256],SOME ⦕ 0; 75; 241; 253; 256; 257 ⦖);
    259 :≡ (Const 268435457,[],NONE);
    260 :≡ (Mult,[259; 258],SOME ⦕ 0; 75; 241; 253; 258; 259 ⦖);
    261 :≡ (Const 272,[],NONE);
    262 :≡ (Add,[261; 260],SOME ⦕ 0; 75; 241; 253; 260; 261 ⦖);
    makespace 33 ⦕ 0; 75; 241; 253; 262 ⦖;
    263 :≡ (WordFromInt,[262],NONE);
    264 :≡ (Cons 3,[263],NONE);
    265 :≡ (Cons 3,[264; 253],NONE);
    266 :≡ (Cons 0,[],NONE);
    267 :≡ (Const 84,[],NONE);
    268 :≡ (Cons 0,[267; 266],NONE);
    269 :≡ (Cons 2,[268],NONE);
    270 :≡ (Cons 4,[269; 265],NONE);
    271 :≡ (Cons 0,[],NONE);
    272 :≡ (Const 116,[],NONE);
    273 :≡ (Cons 0,[272; 271],NONE);
    274 :≡ (Const 115,[],NONE);
    275 :≡ (Cons 0,[274; 273],NONE);
    276 :≡ (Const 111,[],NONE);
    277 :≡ (Cons 0,[276; 275],NONE);
    278 :≡ (Const 112,[],NONE);
    279 :≡ (Cons 0,[278; 277],NONE);
    280 :≡ (Const 116,[],NONE);
    281 :≡ (Cons 0,[280; 279],NONE);
    282 :≡ (Cons 2,[281],NONE);
    283 :≡ (Const 255,[],NONE);
    284 :≡ (Const 268435457,[],NONE);
    285 :≡ (Mult,[284; 283],SOME ⦕ 0; 75; 241; 270; 282; 283; 284 ⦖);
    286 :≡ (Const 268434929,[],NONE);
    287 :≡ (Add,[286; 285],SOME ⦕ 0; 75; 241; 270; 282; 285; 286 ⦖);
    288 :≡ (Const 268435457,[],NONE);
    289 :≡ (Mult,[288; 287],SOME ⦕ 0; 75; 241; 270; 282; 287; 288 ⦖);
    290 :≡ (Const 272,[],NONE);
    291 :≡ (Add,[290; 289],SOME ⦕ 0; 75; 241; 270; 282; 289; 290 ⦖);
    makespace 19 ⦕ 0; 75; 241; 270; 282; 291 ⦖;
    292 :≡ (WordFromInt,[291],NONE);
    293 :≡ (Cons 3,[292],NONE);
    294 :≡ (Cons 3,[293; 282],NONE);
    295 :≡ (Cons 0,[],NONE);
    296 :≡ (Const 84,[],NONE);
    297 :≡ (Cons 0,[296; 295],NONE);
    298 :≡ (Cons 2,[297],NONE);
    299 :≡ (Cons 4,[298; 294],NONE);
    300 :≡ (Cons 3,[299; 270],NONE);
    301 :≡ (Const 31,[],NONE);
    302 :≡ (Const 268435457,[],NONE);
    303 :≡ (Mult,[302; 301],SOME ⦕ 0; 75; 241; 300; 301; 302 ⦖);
    304 :≡ (Const 268435425,[],NONE);
    305 :≡ (Add,[304; 303],SOME ⦕ 0; 75; 241; 300; 303; 304 ⦖);
    makespace 16 ⦕ 0; 75; 241; 300; 305 ⦖;
    306 :≡ (WordFromInt,[305],NONE);
    307 :≡ (Cons 3,[306],NONE);
    308 :≡ (Cons 0,[],NONE);
    309 :≡ (Const 97,[],NONE);
    310 :≡ (Cons 0,[309; 308],NONE);
    311 :≡ (Cons 2,[310],NONE);
    312 :≡ (Cons 2,[311; 307],NONE);
    313 :≡ (Cons 3,[312; 300],NONE);
    314 :≡ (Const 159,[],NONE);
    315 :≡ (Const 268435457,[],NONE);
    316 :≡ (Mult,[315; 314],SOME ⦕ 0; 75; 241; 313; 314; 315 ⦖);
    317 :≡ (Const 268435297,[],NONE);
    318 :≡ (Add,[317; 316],SOME ⦕ 0; 75; 241; 313; 316; 317 ⦖);
    makespace 22 ⦕ 0; 75; 241; 313; 318 ⦖;
    319 :≡ (WordFromInt,[318],NONE);
    320 :≡ (Cons 3,[319],NONE);
    321 :≡ (Cons 0,[],NONE);
    322 :≡ (Const 116,[],NONE);
    323 :≡ (Cons 0,[322; 321],NONE);
    324 :≡ (Const 115,[],NONE);
    325 :≡ (Cons 0,[324; 323],NONE);
    326 :≡ (Const 111,[],NONE);
    327 :≡ (Cons 0,[326; 325],NONE);
    328 :≡ (Const 112,[],NONE);
    329 :≡ (Cons 0,[328; 327],NONE);
    330 :≡ (Const 116,[],NONE);
    331 :≡ (Cons 0,[330; 329],NONE);
    332 :≡ (Cons 2,[331],NONE);
    333 :≡ (Const 255,[],NONE);
    334 :≡ (Const 268435457,[],NONE);
    335 :≡ (Mult,[334; 333],SOME ⦕ 0; 75; 241; 313; 320; 332; 333; 334 ⦖);
    336 :≡ (Const 268434929,[],NONE);
    337 :≡ (Add,[336; 335],SOME ⦕ 0; 75; 241; 313; 320; 332; 335; 336 ⦖);
    338 :≡ (Const 268435457,[],NONE);
    339 :≡ (Mult,[338; 337],SOME ⦕ 0; 75; 241; 313; 320; 332; 337; 338 ⦖);
    340 :≡ (Const 272,[],NONE);
    341 :≡ (Add,[340; 339],SOME ⦕ 0; 75; 241; 313; 320; 332; 339; 340 ⦖);
    makespace 86 ⦕ 0; 75; 241; 313; 320; 332; 341 ⦖;
    342 :≡ (WordFromInt,[341],NONE);
    343 :≡ (Cons 3,[342],NONE);
    344 :≡ (Cons 3,[343; 332],NONE);
    345 :≡ (Cons 0,[],NONE);
    346 :≡ (Const 84,[],NONE);
    347 :≡ (Cons 0,[346; 345],NONE);
    348 :≡ (Cons 2,[347],NONE);
    349 :≡ (Cons 4,[348; 344],NONE);
    350 :≡ (Cons 0,[],NONE);
    351 :≡ (Const 116,[],NONE);
    352 :≡ (Cons 0,[351; 350],NONE);
    353 :≡ (Const 115,[],NONE);
    354 :≡ (Cons 0,[353; 352],NONE);
    355 :≡ (Const 111,[],NONE);
    356 :≡ (Cons 0,[355; 354],NONE);
    357 :≡ (Const 112,[],NONE);
    358 :≡ (Cons 0,[357; 356],NONE);
    359 :≡ (Const 118,[],NONE);
    360 :≡ (Cons 0,[359; 358],NONE);
    361 :≡ (Cons 2,[360],NONE);
    362 :≡ (Cons 3,[361; 349],NONE);
    363 :≡ (Cons 3,[362; 320],NONE);
    364 :≡ (Cons 4,[363; 313],NONE);
    365 :≡ (Cons 4,[364; 241],NONE);
    366 :≡ (Cons 0,[],NONE);
    367 :≡ (Const 107,[],NONE);
    368 :≡ (Cons 0,[367; 366],NONE);
    369 :≡ (Cons 2,[368],NONE);
    370 :≡ (Cons 0,[],NONE);
    371 :≡ (Const 107,[],NONE);
    372 :≡ (Cons 0,[371; 370],NONE);
    373 :≡ (Cons 2,[372],NONE);
    374 :≡ (Cons 3,[373; 369],NONE);
    375 :≡ (Cons 0,[],NONE);
    376 :≡ (Const 115,[],NONE);
    377 :≡ (Cons 0,[376; 375],NONE);
    378 :≡ (Const 112,[],NONE);
    379 :≡ (Cons 0,[378; 377],NONE);
    380 :≡ (Const 101,[],NONE);
    381 :≡ (Cons 0,[380; 379],NONE);
    382 :≡ (Cons 2,[381],NONE);
    383 :≡ (Cons 0,[],NONE);
    384 :≡ (Const 115,[],NONE);
    385 :≡ (Cons 0,[384; 383],NONE);
    386 :≡ (Const 112,[],NONE);
    387 :≡ (Cons 0,[386; 385],NONE);
    388 :≡ (Const 101,[],NONE);
    389 :≡ (Cons 0,[388; 387],NONE);
    390 :≡ (Cons 2,[389],NONE);
    391 :≡ (Cons 3,[390; 382],NONE);
    392 :≡ (Cons 3,[391; 374],NONE);
    393 :≡ (Const 1599,[],NONE);
    394 :≡ (Const 268435457,[],NONE);
    395 :≡ (Mult,[394; 393],SOME ⦕ 0; 75; 365; 392; 393; 394 ⦖);
    396 :≡ (Const 268433857,[],NONE);
    397 :≡ (Add,[396; 395],SOME ⦕ 0; 75; 365; 392; 395; 396 ⦖);
    makespace 5 ⦕ 0; 75; 365; 392; 397 ⦖;
    398 :≡ (WordFromInt,[397],NONE);
    399 :≡ (Cons 3,[398],NONE);
    400 :≡ (Const 15,[],NONE);
    401 :≡ (Const 268435457,[],NONE);
    402 :≡ (Mult,[401; 400],SOME ⦕ 0; 75; 365; 392; 399; 400; 401 ⦖);
    403 :≡ (Const 268435441,[],NONE);
    404 :≡ (Add,[403; 402],SOME ⦕ 0; 75; 365; 392; 399; 402; 403 ⦖);
    makespace 21 ⦕ 0; 75; 365; 392; 399; 404 ⦖;
    405 :≡ (WordFromInt,[404],NONE);
    406 :≡ (Cons 3,[405],NONE);
    407 :≡ (Cons 0,[],NONE);
    408 :≡ (Const 107,[],NONE);
    409 :≡ (Cons 0,[408; 407],NONE);
    410 :≡ (Cons 2,[409],NONE);
    411 :≡ (Cons 0,[],NONE);
    412 :≡ (Const 115,[],NONE);
    413 :≡ (Cons 0,[412; 411],NONE);
    414 :≡ (Const 112,[],NONE);
    415 :≡ (Cons 0,[414; 413],NONE);
    416 :≡ (Const 101,[],NONE);
    417 :≡ (Cons 0,[416; 415],NONE);
    418 :≡ (Cons 2,[417],NONE);
    419 :≡ (Const 31,[],NONE);
    420 :≡ (Const 268435457,[],NONE);
    421 :≡
    (Mult,[420; 419],SOME ⦕ 0; 75; 365; 392; 399; 406; 410; 418; 419; 420 ⦖);
    422 :≡ (Const 268435425,[],NONE);
    423 :≡
    (Add,[422; 421],SOME ⦕ 0; 75; 365; 392; 399; 406; 410; 418; 421; 422 ⦖);
    makespace 17 ⦕ 0; 75; 365; 392; 399; 406; 410; 418; 423 ⦖;
    424 :≡ (WordFromInt,[423],NONE);
    425 :≡ (Cons 3,[424],NONE);
    426 :≡ (Cons 3,[425; 418],NONE);
    427 :≡ (Cons 3,[426; 410],NONE);
    428 :≡ (Cons 3,[427; 406],NONE);
    429 :≡ (Cons 3,[428; 399],NONE);
    430 :≡ (Const 1599,[],NONE);
    431 :≡ (Const 268435457,[],NONE);
    432 :≡ (Mult,[431; 430],SOME ⦕ 0; 75; 365; 392; 429; 430; 431 ⦖);
    433 :≡ (Const 268433857,[],NONE);
    434 :≡ (Add,[433; 432],SOME ⦕ 0; 75; 365; 392; 429; 432; 433 ⦖);
    makespace 5 ⦕ 0; 75; 365; 392; 429; 434 ⦖;
    435 :≡ (WordFromInt,[434],NONE);
    436 :≡ (Cons 3,[435],NONE);
    437 :≡ (Const 15,[],NONE);
    438 :≡ (Const 268435457,[],NONE);
    439 :≡ (Mult,[438; 437],SOME ⦕ 0; 75; 365; 392; 429; 436; 437; 438 ⦖);
    440 :≡ (Const 268435441,[],NONE);
    441 :≡ (Add,[440; 439],SOME ⦕ 0; 75; 365; 392; 429; 436; 439; 440 ⦖);
    makespace 8 ⦕ 0; 75; 365; 392; 429; 436; 441 ⦖;
    442 :≡ (WordFromInt,[441],NONE);
    443 :≡ (Cons 3,[442],NONE);
    444 :≡ (Cons 3,[443; 436],NONE);
    445 :≡ (Const 1599,[],NONE);
    446 :≡ (Const 268435457,[],NONE);
    447 :≡ (Mult,[446; 445],SOME ⦕ 0; 75; 365; 392; 429; 444; 445; 446 ⦖);
    448 :≡ (Const 268433857,[],NONE);
    449 :≡ (Add,[448; 447],SOME ⦕ 0; 75; 365; 392; 429; 444; 447; 448 ⦖);
    makespace 5 ⦕ 0; 75; 365; 392; 429; 444; 449 ⦖;
    450 :≡ (WordFromInt,[449],NONE);
    451 :≡ (Cons 3,[450],NONE);
    452 :≡ (Const 15,[],NONE);
    453 :≡ (Const 268435457,[],NONE);
    454 :≡ (Mult,[453; 452],SOME ⦕ 0; 75; 365; 392; 429; 444; 451; 452; 453 ⦖);
    455 :≡ (Const 268435441,[],NONE);
    456 :≡ (Add,[455; 454],SOME ⦕ 0; 75; 365; 392; 429; 444; 451; 454; 455 ⦖);
    makespace 43 ⦕ 0; 75; 365; 392; 429; 444; 451; 456 ⦖;
    457 :≡ (WordFromInt,[456],NONE);
    458 :≡ (Cons 3,[457],NONE);
    459 :≡ (Cons 3,[458; 451],NONE);
    460 :≡ (Cons 3,[459; 444],NONE);
    461 :≡ (Cons 4,[460; 429],NONE);
    462 :≡ (Cons 4,[461; 392],NONE);
    463 :≡ (Cons 3,[462; 365],NONE);
    464 :≡ (Cons 3,[463; 75],NONE);
    465 :≡ (Cons 1,[464; 0],NONE);
    466 :≡ (Cons 0,[],NONE);
    467 :≡ (Const 116,[],NONE);
    468 :≡ (Cons 0,[467; 466],NONE);
    469 :≡ (Const 115,[],NONE);
    470 :≡ (Cons 0,[469; 468],NONE);
    471 :≡ (Const 111,[],NONE);
    472 :≡ (Cons 0,[471; 470],NONE);
    473 :≡ (Const 112,[],NONE);
    474 :≡ (Cons 0,[473; 472],NONE);
    475 :≡ (Const 118,[],NONE);
    476 :≡ (Cons 0,[475; 474],NONE);
    477 :≡ (Cons 2,[476],NONE);
    478 :≡ (Const 159,[],NONE);
    479 :≡ (Const 268435457,[],NONE);
    480 :≡ (Mult,[479; 478],SOME ⦕ 465; 477; 478; 479 ⦖);
    481 :≡ (Const 268435297,[],NONE);
    482 :≡ (Add,[481; 480],SOME ⦕ 465; 477; 480; 481 ⦖);
    makespace 38 ⦕ 465; 477; 482 ⦖;
    483 :≡ (WordFromInt,[482],NONE);
    484 :≡ (Cons 3,[483],NONE);
    485 :≡ (Cons 3,[484; 477],NONE);
    486 :≡ (Cons 0,[],NONE);
    487 :≡ (Const 116,[],NONE);
    488 :≡ (Cons 0,[487; 486],NONE);
    489 :≡ (Const 115,[],NONE);
    490 :≡ (Cons 0,[489; 488],NONE);
    491 :≡ (Const 111,[],NONE);
    492 :≡ (Cons 0,[491; 490],NONE);
    493 :≡ (Const 112,[],NONE);
    494 :≡ (Cons 0,[493; 492],NONE);
    495 :≡ (Const 116,[],NONE);
    496 :≡ (Cons 0,[495; 494],NONE);
    497 :≡ (Cons 2,[496],NONE);
    498 :≡ (Cons 0,[],NONE);
    499 :≡ (Const 97,[],NONE);
    500 :≡ (Cons 0,[499; 498],NONE);
    501 :≡ (Cons 2,[500],NONE);
    502 :≡ (Cons 3,[501; 497],NONE);
    503 :≡ (Cons 0,[],NONE);
    504 :≡ (Const 118,[],NONE);
    505 :≡ (Cons 0,[504; 503],NONE);
    506 :≡ (Cons 2,[505],NONE);
    507 :≡ (Const 159,[],NONE);
    508 :≡ (Const 268435457,[],NONE);
    509 :≡ (Mult,[508; 507],SOME ⦕ 465; 485; 502; 506; 507; 508 ⦖);
    510 :≡ (Const 268435297,[],NONE);
    511 :≡ (Add,[510; 509],SOME ⦕ 465; 485; 502; 506; 509; 510 ⦖);
    makespace 48 ⦕ 465; 485; 502; 506; 511 ⦖;
    512 :≡ (WordFromInt,[511],NONE);
    513 :≡ (Cons 3,[512],NONE);
    514 :≡ (Cons 3,[513; 506],NONE);
    515 :≡ (Cons 4,[514; 502],NONE);
    516 :≡ (Cons 3,[515; 485],NONE);
    517 :≡ (Cons 1,[516; 465],NONE);
    518 :≡ (Cons 0,[],NONE);
    519 :≡ (Const 116,[],NONE);
    520 :≡ (Cons 0,[519; 518],NONE);
    521 :≡ (Const 115,[],NONE);
    522 :≡ (Cons 0,[521; 520],NONE);
    523 :≡ (Const 111,[],NONE);
    524 :≡ (Cons 0,[523; 522],NONE);
    525 :≡ (Const 112,[],NONE);
    526 :≡ (Cons 0,[525; 524],NONE);
    527 :≡ (Const 118,[],NONE);
    528 :≡ (Cons 0,[527; 526],NONE);
    529 :≡ (Cons 2,[528],NONE);
    530 :≡ (Cons 0,[],NONE);
    531 :≡ (Const 108,[],NONE);
    532 :≡ (Cons 0,[531; 530],NONE);
    533 :≡ (Const 118,[],NONE);
    534 :≡ (Cons 0,[533; 532],NONE);
    535 :≡ (Cons 2,[534],NONE);
    536 :≡ (Cons 3,[535; 529],NONE);
    537 :≡ (Cons 1,[536; 517],NONE);
    538 :≡ (Const 159,[],NONE);
    539 :≡ (Const 268435457,[],NONE);
    540 :≡ (Mult,[539; 538],SOME ⦕ 537; 538; 539 ⦖);
    541 :≡ (Const 268435297,[],NONE);
    542 :≡ (Add,[541; 540],SOME ⦕ 537; 540; 541 ⦖);
    makespace 5 ⦕ 537; 542 ⦖;
    543 :≡ (WordFromInt,[542],NONE);
    544 :≡ (Cons 3,[543],NONE);
    545 :≡ (Const 159,[],NONE);
    546 :≡ (Const 268435457,[],NONE);
    547 :≡ (Mult,[546; 545],SOME ⦕ 537; 544; 545; 546 ⦖);
    548 :≡ (Const 268435297,[],NONE);
    549 :≡ (Add,[548; 547],SOME ⦕ 537; 544; 547; 548 ⦖);
    makespace 8 ⦕ 537; 544; 549 ⦖;
    550 :≡ (WordFromInt,[549],NONE);
    551 :≡ (Cons 3,[550],NONE);
    552 :≡ (Cons 3,[551; 544],NONE);
    553 :≡ (Const 1599,[],NONE);
    554 :≡ (Const 268435457,[],NONE);
    555 :≡ (Mult,[554; 553],SOME ⦕ 537; 552; 553; 554 ⦖);
    556 :≡ (Const 268433857,[],NONE);
    557 :≡ (Add,[556; 555],SOME ⦕ 537; 552; 555; 556 ⦖);
    makespace 5 ⦕ 537; 552; 557 ⦖;
    558 :≡ (WordFromInt,[557],NONE);
    559 :≡ (Cons 3,[558],NONE);
    560 :≡ (Const 1599,[],NONE);
    561 :≡ (Const 268435457,[],NONE);
    562 :≡ (Mult,[561; 560],SOME ⦕ 537; 552; 559; 560; 561 ⦖);
    563 :≡ (Const 268433857,[],NONE);
    564 :≡ (Add,[563; 562],SOME ⦕ 537; 552; 559; 562; 563 ⦖);
    makespace 19 ⦕ 537; 552; 559; 564 ⦖;
    565 :≡ (WordFromInt,[564],NONE);
    566 :≡ (Cons 3,[565],NONE);
    567 :≡ (Cons 3,[566; 559],NONE);
    568 :≡ (Cons 0,[],NONE);
    569 :≡ (Const 115,[],NONE);
    570 :≡ (Cons 0,[569; 568],NONE);
    571 :≡ (Const 112,[],NONE);
    572 :≡ (Cons 0,[571; 570],NONE);
    573 :≡ (Const 101,[],NONE);
    574 :≡ (Cons 0,[573; 572],NONE);
    575 :≡ (Cons 2,[574],NONE);
    576 :≡ (Const 159,[],NONE);
    577 :≡ (Const 268435457,[],NONE);
    578 :≡ (Mult,[577; 576],SOME ⦕ 537; 552; 567; 575; 576; 577 ⦖);
    579 :≡ (Const 268435297,[],NONE);
    580 :≡ (Add,[579; 578],SOME ⦕ 537; 552; 567; 575; 578; 579 ⦖);
    makespace 8 ⦕ 537; 552; 567; 575; 580 ⦖;
    581 :≡ (WordFromInt,[580],NONE);
    582 :≡ (Cons 3,[581],NONE);
    583 :≡ (Cons 3,[582; 575],NONE);
    584 :≡ (Const 255,[],NONE);
    585 :≡ (Const 268435457,[],NONE);
    586 :≡ (Mult,[585; 584],SOME ⦕ 537; 552; 567; 583; 584; 585 ⦖);
    587 :≡ (Const 268434929,[],NONE);
    588 :≡ (Add,[587; 586],SOME ⦕ 537; 552; 567; 583; 586; 587 ⦖);
    589 :≡ (Const 268435457,[],NONE);
    590 :≡ (Mult,[589; 588],SOME ⦕ 537; 552; 567; 583; 588; 589 ⦖);
    591 :≡ (Const 272,[],NONE);
    592 :≡ (Add,[591; 590],SOME ⦕ 537; 552; 567; 583; 590; 591 ⦖);
    makespace 42 ⦕ 537; 552; 567; 583; 592 ⦖;
    593 :≡ (WordFromInt,[592],NONE);
    594 :≡ (Cons 3,[593],NONE);
    595 :≡ (Cons 3,[594; 583],NONE);
    596 :≡ (Cons 0,[],NONE);
    597 :≡ (Const 116,[],NONE);
    598 :≡ (Cons 0,[597; 596],NONE);
    599 :≡ (Const 115,[],NONE);
    600 :≡ (Cons 0,[599; 598],NONE);
    601 :≡ (Const 111,[],NONE);
    602 :≡ (Cons 0,[601; 600],NONE);
    603 :≡ (Const 112,[],NONE);
    604 :≡ (Cons 0,[603; 602],NONE);
    605 :≡ (Const 103,[],NONE);
    606 :≡ (Cons 0,[605; 604],NONE);
    607 :≡ (Const 121,[],NONE);
    608 :≡ (Cons 0,[607; 606],NONE);
    609 :≡ (Cons 2,[608],NONE);
    610 :≡ (Cons 4,[609; 595],NONE);
    611 :≡ (Cons 3,[610; 567],NONE);
    612 :≡ (Cons 3,[611; 552],NONE);
    613 :≡ (Cons 0,[],NONE);
    614 :≡ (Const 66,[],NONE);
    615 :≡ (Cons 0,[614; 613],NONE);
    616 :≡ (Cons 2,[615],NONE);
    617 :≡ (Const 31,[],NONE);
    618 :≡ (Const 268435457,[],NONE);
    619 :≡ (Mult,[618; 617],SOME ⦕ 537; 612; 616; 617; 618 ⦖);
    620 :≡ (Const 268435425,[],NONE);
    621 :≡ (Add,[620; 619],SOME ⦕ 537; 612; 616; 619; 620 ⦖);
    makespace 16 ⦕ 537; 612; 616; 621 ⦖;
    622 :≡ (WordFromInt,[621],NONE);
    623 :≡ (Cons 3,[622],NONE);
    624 :≡ (Cons 3,[623; 616],NONE);
    625 :≡ (Cons 0,[],NONE);
    626 :≡ (Const 104,[],NONE);
    627 :≡ (Cons 0,[626; 625],NONE);
    628 :≡ (Const 118,[],NONE);
    629 :≡ (Cons 0,[628; 627],NONE);
    630 :≡ (Cons 2,[629],NONE);
    631 :≡ (Const 159,[],NONE);
    632 :≡ (Const 268435457,[],NONE);
    633 :≡ (Mult,[632; 631],SOME ⦕ 537; 612; 624; 630; 631; 632 ⦖);
    634 :≡ (Const 268435297,[],NONE);
    635 :≡ (Add,[634; 633],SOME ⦕ 537; 612; 624; 630; 633; 634 ⦖);
    makespace 16 ⦕ 537; 612; 624; 630; 635 ⦖;
    636 :≡ (WordFromInt,[635],NONE);
    637 :≡ (Cons 3,[636],NONE);
    638 :≡ (Cons 3,[637; 630],NONE);
    639 :≡ (Cons 0,[],NONE);
    640 :≡ (Const 104,[],NONE);
    641 :≡ (Cons 0,[640; 639],NONE);
    642 :≡ (Const 118,[],NONE);
    643 :≡ (Cons 0,[642; 641],NONE);
    644 :≡ (Cons 2,[643],NONE);
    645 :≡ (Const 159,[],NONE);
    646 :≡ (Const 268435457,[],NONE);
    647 :≡ (Mult,[646; 645],SOME ⦕ 537; 612; 624; 638; 644; 645; 646 ⦖);
    648 :≡ (Const 268435297,[],NONE);
    649 :≡ (Add,[648; 647],SOME ⦕ 537; 612; 624; 638; 644; 647; 648 ⦖);
    makespace 11 ⦕ 537; 612; 624; 638; 644; 649 ⦖;
    650 :≡ (WordFromInt,[649],NONE);
    651 :≡ (Cons 3,[650],NONE);
    652 :≡ (Cons 3,[651; 644],NONE);
    653 :≡ (Cons 3,[652; 638],NONE);
    654 :≡ (Const 255,[],NONE);
    655 :≡ (Const 268435457,[],NONE);
    656 :≡ (Mult,[655; 654],SOME ⦕ 537; 612; 624; 653; 654; 655 ⦖);
    657 :≡ (Const 268434929,[],NONE);
    658 :≡ (Add,[657; 656],SOME ⦕ 537; 612; 624; 653; 656; 657 ⦖);
    659 :≡ (Const 268435457,[],NONE);
    660 :≡ (Mult,[659; 658],SOME ⦕ 537; 612; 624; 653; 658; 659 ⦖);
    661 :≡ (Const 272,[],NONE);
    662 :≡ (Add,[661; 660],SOME ⦕ 537; 612; 624; 653; 660; 661 ⦖);
    makespace 25 ⦕ 537; 612; 624; 653; 662 ⦖;
    663 :≡ (WordFromInt,[662],NONE);
    664 :≡ (Cons 3,[663],NONE);
    665 :≡ (Cons 3,[664; 653],NONE);
    666 :≡ (Cons 0,[],NONE);
    667 :≡ (Const 116,[],NONE);
    668 :≡ (Cons 0,[667; 666],NONE);
    669 :≡ (Const 115,[],NONE);
    670 :≡ (Cons 0,[669; 668],NONE);
    671 :≡ (Const 111,[],NONE);
    672 :≡ (Cons 0,[671; 670],NONE);
    673 :≡ (Const 112,[],NONE);
    674 :≡ (Cons 0,[673; 672],NONE);
    675 :≡ (Const 116,[],NONE);
    676 :≡ (Cons 0,[675; 674],NONE);
    677 :≡ (Cons 2,[676],NONE);
    678 :≡ (Const 255,[],NONE);
    679 :≡ (Const 268435457,[],NONE);
    680 :≡ (Mult,[679; 678],SOME ⦕ 537; 612; 624; 665; 677; 678; 679 ⦖);
    681 :≡ (Const 268434929,[],NONE);
    682 :≡ (Add,[681; 680],SOME ⦕ 537; 612; 624; 665; 677; 680; 681 ⦖);
    683 :≡ (Const 268435457,[],NONE);
    684 :≡ (Mult,[683; 682],SOME ⦕ 537; 612; 624; 665; 677; 682; 683 ⦖);
    685 :≡ (Const 272,[],NONE);
    686 :≡ (Add,[685; 684],SOME ⦕ 537; 612; 624; 665; 677; 684; 685 ⦖);
    makespace 24 ⦕ 537; 612; 624; 665; 677; 686 ⦖;
    687 :≡ (WordFromInt,[686],NONE);
    688 :≡ (Cons 3,[687],NONE);
    689 :≡ (Cons 3,[688; 677],NONE);
    690 :≡ (Cons 0,[],NONE);
    691 :≡ (Const 84,[],NONE);
    692 :≡ (Cons 0,[691; 690],NONE);
    693 :≡ (Cons 2,[692],NONE);
    694 :≡ (Cons 4,[693; 689],NONE);
    695 :≡ (Cons 0,[],NONE);
    696 :≡ (Const 97,[],NONE);
    697 :≡ (Cons 0,[696; 695],NONE);
    698 :≡ (Cons 2,[697],NONE);
    699 :≡ (Cons 3,[698; 694],NONE);
    700 :≡ (Const 159,[],NONE);
    701 :≡ (Const 268435457,[],NONE);
    702 :≡ (Mult,[701; 700],SOME ⦕ 537; 612; 624; 665; 699; 700; 701 ⦖);
    703 :≡ (Const 268435297,[],NONE);
    704 :≡ (Add,[703; 702],SOME ⦕ 537; 612; 624; 665; 699; 702; 703 ⦖);
    makespace 45 ⦕ 537; 612; 624; 665; 699; 704 ⦖;
    705 :≡ (WordFromInt,[704],NONE);
    706 :≡ (Cons 3,[705],NONE);
    707 :≡ (Cons 0,[],NONE);
    708 :≡ (Const 116,[],NONE);
    709 :≡ (Cons 0,[708; 707],NONE);
    710 :≡ (Const 115,[],NONE);
    711 :≡ (Cons 0,[710; 709],NONE);
    712 :≡ (Const 111,[],NONE);
    713 :≡ (Cons 0,[712; 711],NONE);
    714 :≡ (Const 112,[],NONE);
    715 :≡ (Cons 0,[714; 713],NONE);
    716 :≡ (Const 118,[],NONE);
    717 :≡ (Cons 0,[716; 715],NONE);
    718 :≡ (Cons 2,[717],NONE);
    719 :≡ (Cons 3,[718; 706],NONE);
    720 :≡ (Cons 4,[719; 699],NONE);
    721 :≡ (Cons 0,[],NONE);
    722 :≡ (Const 116,[],NONE);
    723 :≡ (Cons 0,[722; 721],NONE);
    724 :≡ (Const 115,[],NONE);
    725 :≡ (Cons 0,[724; 723],NONE);
    726 :≡ (Const 111,[],NONE);
    727 :≡ (Cons 0,[726; 725],NONE);
    728 :≡ (Const 112,[],NONE);
    729 :≡ (Cons 0,[728; 727],NONE);
    730 :≡ (Const 116,[],NONE);
    731 :≡ (Cons 0,[730; 729],NONE);
    732 :≡ (Cons 2,[731],NONE);
    733 :≡ (Const 255,[],NONE);
    734 :≡ (Const 268435457,[],NONE);
    735 :≡ (Mult,[734; 733],SOME ⦕ 537; 612; 624; 665; 720; 732; 733; 734 ⦖);
    736 :≡ (Const 268434929,[],NONE);
    737 :≡ (Add,[736; 735],SOME ⦕ 537; 612; 624; 665; 720; 732; 735; 736 ⦖);
    738 :≡ (Const 268435457,[],NONE);
    739 :≡ (Mult,[738; 737],SOME ⦕ 537; 612; 624; 665; 720; 732; 737; 738 ⦖);
    740 :≡ (Const 272,[],NONE);
    741 :≡ (Add,[740; 739],SOME ⦕ 537; 612; 624; 665; 720; 732; 739; 740 ⦖);
    makespace 24 ⦕ 537; 612; 624; 665; 720; 732; 741 ⦖;
    742 :≡ (WordFromInt,[741],NONE);
    743 :≡ (Cons 3,[742],NONE);
    744 :≡ (Cons 3,[743; 732],NONE);
    745 :≡ (Cons 0,[],NONE);
    746 :≡ (Const 84,[],NONE);
    747 :≡ (Cons 0,[746; 745],NONE);
    748 :≡ (Cons 2,[747],NONE);
    749 :≡ (Cons 4,[748; 744],NONE);
    750 :≡ (Cons 0,[],NONE);
    751 :≡ (Const 97,[],NONE);
    752 :≡ (Cons 0,[751; 750],NONE);
    753 :≡ (Cons 2,[752],NONE);
    754 :≡ (Cons 3,[753; 749],NONE);
    755 :≡ (Const 159,[],NONE);
    756 :≡ (Const 268435457,[],NONE);
    757 :≡ (Mult,[756; 755],SOME ⦕ 537; 612; 624; 665; 720; 754; 755; 756 ⦖);
    758 :≡ (Const 268435297,[],NONE);
    759 :≡ (Add,[758; 757],SOME ⦕ 537; 612; 624; 665; 720; 754; 757; 758 ⦖);
    makespace 54 ⦕ 537; 612; 624; 665; 720; 754; 759 ⦖;
    760 :≡ (WordFromInt,[759],NONE);
    761 :≡ (Cons 3,[760],NONE);
    762 :≡ (Cons 0,[],NONE);
    763 :≡ (Const 116,[],NONE);
    764 :≡ (Cons 0,[763; 762],NONE);
    765 :≡ (Const 115,[],NONE);
    766 :≡ (Cons 0,[765; 764],NONE);
    767 :≡ (Const 111,[],NONE);
    768 :≡ (Cons 0,[767; 766],NONE);
    769 :≡ (Const 112,[],NONE);
    770 :≡ (Cons 0,[769; 768],NONE);
    771 :≡ (Const 118,[],NONE);
    772 :≡ (Cons 0,[771; 770],NONE);
    773 :≡ (Cons 2,[772],NONE);
    774 :≡ (Cons 3,[773; 761],NONE);
    775 :≡ (Cons 4,[774; 754],NONE);
    776 :≡ (Cons 3,[775; 720],NONE);
    777 :≡ (Cons 4,[776; 665],NONE);
    778 :≡ (Cons 2,[777; 624],NONE);
    779 :≡ (Cons 0,[],NONE);
    780 :≡ (Const 116,[],NONE);
    781 :≡ (Cons 0,[780; 779],NONE);
    782 :≡ (Const 115,[],NONE);
    783 :≡ (Cons 0,[782; 781],NONE);
    784 :≡ (Const 111,[],NONE);
    785 :≡ (Cons 0,[784; 783],NONE);
    786 :≡ (Const 112,[],NONE);
    787 :≡ (Cons 0,[786; 785],NONE);
    788 :≡ (Const 116,[],NONE);
    789 :≡ (Cons 0,[788; 787],NONE);
    790 :≡ (Cons 2,[789],NONE);
    791 :≡ (Const 255,[],NONE);
    792 :≡ (Const 268435457,[],NONE);
    793 :≡ (Mult,[792; 791],SOME ⦕ 537; 612; 778; 790; 791; 792 ⦖);
    794 :≡ (Const 268434929,[],NONE);
    795 :≡ (Add,[794; 793],SOME ⦕ 537; 612; 778; 790; 793; 794 ⦖);
    796 :≡ (Const 268435457,[],NONE);
    797 :≡ (Mult,[796; 795],SOME ⦕ 537; 612; 778; 790; 795; 796 ⦖);
    798 :≡ (Const 272,[],NONE);
    799 :≡ (Add,[798; 797],SOME ⦕ 537; 612; 778; 790; 797; 798 ⦖);
    makespace 33 ⦕ 537; 612; 778; 790; 799 ⦖;
    800 :≡ (WordFromInt,[799],NONE);
    801 :≡ (Cons 3,[800],NONE);
    802 :≡ (Cons 3,[801; 790],NONE);
    803 :≡ (Cons 0,[],NONE);
    804 :≡ (Const 84,[],NONE);
    805 :≡ (Cons 0,[804; 803],NONE);
    806 :≡ (Cons 2,[805],NONE);
    807 :≡ (Cons 4,[806; 802],NONE);
    808 :≡ (Cons 0,[],NONE);
    809 :≡ (Const 116,[],NONE);
    810 :≡ (Cons 0,[809; 808],NONE);
    811 :≡ (Const 115,[],NONE);
    812 :≡ (Cons 0,[811; 810],NONE);
    813 :≡ (Const 111,[],NONE);
    814 :≡ (Cons 0,[813; 812],NONE);
    815 :≡ (Const 112,[],NONE);
    816 :≡ (Cons 0,[815; 814],NONE);
    817 :≡ (Const 116,[],NONE);
    818 :≡ (Cons 0,[817; 816],NONE);
    819 :≡ (Cons 2,[818],NONE);
    820 :≡ (Const 255,[],NONE);
    821 :≡ (Const 268435457,[],NONE);
    822 :≡ (Mult,[821; 820],SOME ⦕ 537; 612; 778; 807; 819; 820; 821 ⦖);
    823 :≡ (Const 268434929,[],NONE);
    824 :≡ (Add,[823; 822],SOME ⦕ 537; 612; 778; 807; 819; 822; 823 ⦖);
    825 :≡ (Const 268435457,[],NONE);
    826 :≡ (Mult,[825; 824],SOME ⦕ 537; 612; 778; 807; 819; 824; 825 ⦖);
    827 :≡ (Const 272,[],NONE);
    828 :≡ (Add,[827; 826],SOME ⦕ 537; 612; 778; 807; 819; 826; 827 ⦖);
    makespace 19 ⦕ 537; 612; 778; 807; 819; 828 ⦖;
    829 :≡ (WordFromInt,[828],NONE);
    830 :≡ (Cons 3,[829],NONE);
    831 :≡ (Cons 3,[830; 819],NONE);
    832 :≡ (Cons 0,[],NONE);
    833 :≡ (Const 84,[],NONE);
    834 :≡ (Cons 0,[833; 832],NONE);
    835 :≡ (Cons 2,[834],NONE);
    836 :≡ (Cons 4,[835; 831],NONE);
    837 :≡ (Cons 3,[836; 807],NONE);
    838 :≡ (Const 31,[],NONE);
    839 :≡ (Const 268435457,[],NONE);
    840 :≡ (Mult,[839; 838],SOME ⦕ 537; 612; 778; 837; 838; 839 ⦖);
    841 :≡ (Const 268435425,[],NONE);
    842 :≡ (Add,[841; 840],SOME ⦕ 537; 612; 778; 837; 840; 841 ⦖);
    makespace 16 ⦕ 537; 612; 778; 837; 842 ⦖;
    843 :≡ (WordFromInt,[842],NONE);
    844 :≡ (Cons 3,[843],NONE);
    845 :≡ (Cons 0,[],NONE);
    846 :≡ (Const 97,[],NONE);
    847 :≡ (Cons 0,[846; 845],NONE);
    848 :≡ (Cons 2,[847],NONE);
    849 :≡ (Cons 2,[848; 844],NONE);
    850 :≡ (Cons 3,[849; 837],NONE);
    851 :≡ (Const 159,[],NONE);
    852 :≡ (Const 268435457,[],NONE);
    853 :≡ (Mult,[852; 851],SOME ⦕ 537; 612; 778; 850; 851; 852 ⦖);
    854 :≡ (Const 268435297,[],NONE);
    855 :≡ (Add,[854; 853],SOME ⦕ 537; 612; 778; 850; 853; 854 ⦖);
    makespace 22 ⦕ 537; 612; 778; 850; 855 ⦖;
    856 :≡ (WordFromInt,[855],NONE);
    857 :≡ (Cons 3,[856],NONE);
    858 :≡ (Cons 0,[],NONE);
    859 :≡ (Const 116,[],NONE);
    860 :≡ (Cons 0,[859; 858],NONE);
    861 :≡ (Const 115,[],NONE);
    862 :≡ (Cons 0,[861; 860],NONE);
    863 :≡ (Const 111,[],NONE);
    864 :≡ (Cons 0,[863; 862],NONE);
    865 :≡ (Const 112,[],NONE);
    866 :≡ (Cons 0,[865; 864],NONE);
    867 :≡ (Const 116,[],NONE);
    868 :≡ (Cons 0,[867; 866],NONE);
    869 :≡ (Cons 2,[868],NONE);
    870 :≡ (Const 255,[],NONE);
    871 :≡ (Const 268435457,[],NONE);
    872 :≡ (Mult,[871; 870],SOME ⦕ 537; 612; 778; 850; 857; 869; 870; 871 ⦖);
    873 :≡ (Const 268434929,[],NONE);
    874 :≡ (Add,[873; 872],SOME ⦕ 537; 612; 778; 850; 857; 869; 872; 873 ⦖);
    875 :≡ (Const 268435457,[],NONE);
    876 :≡ (Mult,[875; 874],SOME ⦕ 537; 612; 778; 850; 857; 869; 874; 875 ⦖);
    877 :≡ (Const 272,[],NONE);
    878 :≡ (Add,[877; 876],SOME ⦕ 537; 612; 778; 850; 857; 869; 876; 877 ⦖);
    makespace 86 ⦕ 537; 612; 778; 850; 857; 869; 878 ⦖;
    879 :≡ (WordFromInt,[878],NONE);
    880 :≡ (Cons 3,[879],NONE);
    881 :≡ (Cons 3,[880; 869],NONE);
    882 :≡ (Cons 0,[],NONE);
    883 :≡ (Const 84,[],NONE);
    884 :≡ (Cons 0,[883; 882],NONE);
    885 :≡ (Cons 2,[884],NONE);
    886 :≡ (Cons 4,[885; 881],NONE);
    887 :≡ (Cons 0,[],NONE);
    888 :≡ (Const 116,[],NONE);
    889 :≡ (Cons 0,[888; 887],NONE);
    890 :≡ (Const 115,[],NONE);
    891 :≡ (Cons 0,[890; 889],NONE);
    892 :≡ (Const 111,[],NONE);
    893 :≡ (Cons 0,[892; 891],NONE);
    894 :≡ (Const 112,[],NONE);
    895 :≡ (Cons 0,[894; 893],NONE);
    896 :≡ (Const 118,[],NONE);
    897 :≡ (Cons 0,[896; 895],NONE);
    898 :≡ (Cons 2,[897],NONE);
    899 :≡ (Cons 3,[898; 886],NONE);
    900 :≡ (Cons 3,[899; 857],NONE);
    901 :≡ (Cons 4,[900; 850],NONE);
    902 :≡ (Cons 4,[901; 778],NONE);
    903 :≡ (Cons 0,[],NONE);
    904 :≡ (Const 107,[],NONE);
    905 :≡ (Cons 0,[904; 903],NONE);
    906 :≡ (Cons 2,[905],NONE);
    907 :≡ (Cons 0,[],NONE);
    908 :≡ (Const 107,[],NONE);
    909 :≡ (Cons 0,[908; 907],NONE);
    910 :≡ (Cons 2,[909],NONE);
    911 :≡ (Cons 3,[910; 906],NONE);
    912 :≡ (Cons 0,[],NONE);
    913 :≡ (Const 115,[],NONE);
    914 :≡ (Cons 0,[913; 912],NONE);
    915 :≡ (Const 112,[],NONE);
    916 :≡ (Cons 0,[915; 914],NONE);
    917 :≡ (Const 101,[],NONE);
    918 :≡ (Cons 0,[917; 916],NONE);
    919 :≡ (Cons 2,[918],NONE);
    920 :≡ (Cons 0,[],NONE);
    921 :≡ (Const 115,[],NONE);
    922 :≡ (Cons 0,[921; 920],NONE);
    923 :≡ (Const 112,[],NONE);
    924 :≡ (Cons 0,[923; 922],NONE);
    925 :≡ (Const 101,[],NONE);
    926 :≡ (Cons 0,[925; 924],NONE);
    927 :≡ (Cons 2,[926],NONE);
    928 :≡ (Cons 3,[927; 919],NONE);
    929 :≡ (Cons 3,[928; 911],NONE);
    930 :≡ (Const 1599,[],NONE);
    931 :≡ (Const 268435457,[],NONE);
    932 :≡ (Mult,[931; 930],SOME ⦕ 537; 612; 902; 929; 930; 931 ⦖);
    933 :≡ (Const 268433857,[],NONE);
    934 :≡ (Add,[933; 932],SOME ⦕ 537; 612; 902; 929; 932; 933 ⦖);
    makespace 5 ⦕ 537; 612; 902; 929; 934 ⦖;
    935 :≡ (WordFromInt,[934],NONE);
    936 :≡ (Cons 3,[935],NONE);
    937 :≡ (Const 15,[],NONE);
    938 :≡ (Const 268435457,[],NONE);
    939 :≡ (Mult,[938; 937],SOME ⦕ 537; 612; 902; 929; 936; 937; 938 ⦖);
    940 :≡ (Const 268435441,[],NONE);
    941 :≡ (Add,[940; 939],SOME ⦕ 537; 612; 902; 929; 936; 939; 940 ⦖);
    makespace 21 ⦕ 537; 612; 902; 929; 936; 941 ⦖;
    942 :≡ (WordFromInt,[941],NONE);
    943 :≡ (Cons 3,[942],NONE);
    944 :≡ (Cons 0,[],NONE);
    945 :≡ (Const 107,[],NONE);
    946 :≡ (Cons 0,[945; 944],NONE);
    947 :≡ (Cons 2,[946],NONE);
    948 :≡ (Cons 0,[],NONE);
    949 :≡ (Const 115,[],NONE);
    950 :≡ (Cons 0,[949; 948],NONE);
    951 :≡ (Const 112,[],NONE);
    952 :≡ (Cons 0,[951; 950],NONE);
    953 :≡ (Const 101,[],NONE);
    954 :≡ (Cons 0,[953; 952],NONE);
    955 :≡ (Cons 2,[954],NONE);
    956 :≡ (Const 31,[],NONE);
    957 :≡ (Const 268435457,[],NONE);
    958 :≡
    (Mult,[957; 956],SOME ⦕ 537; 612; 902; 929; 936; 943; 947; 955; 956; 957 ⦖);
    959 :≡ (Const 268435425,[],NONE);
    960 :≡
    (Add,[959; 958],SOME ⦕ 537; 612; 902; 929; 936; 943; 947; 955; 958; 959 ⦖);
    makespace 17 ⦕ 537; 612; 902; 929; 936; 943; 947; 955; 960 ⦖;
    961 :≡ (WordFromInt,[960],NONE);
    962 :≡ (Cons 3,[961],NONE);
    963 :≡ (Cons 3,[962; 955],NONE);
    964 :≡ (Cons 3,[963; 947],NONE);
    965 :≡ (Cons 3,[964; 943],NONE);
    966 :≡ (Cons 3,[965; 936],NONE);
    967 :≡ (Const 255,[],NONE);
    968 :≡ (Const 268435457,[],NONE);
    969 :≡ (Mult,[968; 967],SOME ⦕ 537; 612; 902; 929; 966; 967; 968 ⦖);
    970 :≡ (Const 268434929,[],NONE);
    971 :≡ (Add,[970; 969],SOME ⦕ 537; 612; 902; 929; 966; 969; 970 ⦖);
    972 :≡ (Const 268435457,[],NONE);
    973 :≡ (Mult,[972; 971],SOME ⦕ 537; 612; 902; 929; 966; 971; 972 ⦖);
    974 :≡ (Const 272,[],NONE);
    975 :≡ (Add,[974; 973],SOME ⦕ 537; 612; 902; 929; 966; 973; 974 ⦖);
    makespace 8 ⦕ 537; 612; 902; 929; 966; 975 ⦖;
    976 :≡ (WordFromInt,[975],NONE);
    977 :≡ (Cons 3,[976],NONE);
    978 :≡ (Cons 3,[977; 966],NONE);
    979 :≡ (Const 1599,[],NONE);
    980 :≡ (Const 268435457,[],NONE);
    981 :≡ (Mult,[980; 979],SOME ⦕ 537; 612; 902; 929; 978; 979; 980 ⦖);
    982 :≡ (Const 268433857,[],NONE);
    983 :≡ (Add,[982; 981],SOME ⦕ 537; 612; 902; 929; 978; 981; 982 ⦖);
    makespace 5 ⦕ 537; 612; 902; 929; 978; 983 ⦖;
    984 :≡ (WordFromInt,[983],NONE);
    985 :≡ (Cons 3,[984],NONE);
    986 :≡ (Const 15,[],NONE);
    987 :≡ (Const 268435457,[],NONE);
    988 :≡ (Mult,[987; 986],SOME ⦕ 537; 612; 902; 929; 978; 985; 986; 987 ⦖);
    989 :≡ (Const 268435441,[],NONE);
    990 :≡ (Add,[989; 988],SOME ⦕ 537; 612; 902; 929; 978; 985; 988; 989 ⦖);
    makespace 8 ⦕ 537; 612; 902; 929; 978; 985; 990 ⦖;
    991 :≡ (WordFromInt,[990],NONE);
    992 :≡ (Cons 3,[991],NONE);
    993 :≡ (Cons 3,[992; 985],NONE);
    994 :≡ (Const 1599,[],NONE);
    995 :≡ (Const 268435457,[],NONE);
    996 :≡ (Mult,[995; 994],SOME ⦕ 537; 612; 902; 929; 978; 993; 994; 995 ⦖);
    997 :≡ (Const 268433857,[],NONE);
    998 :≡ (Add,[997; 996],SOME ⦕ 537; 612; 902; 929; 978; 993; 996; 997 ⦖);
    makespace 5 ⦕ 537; 612; 902; 929; 978; 993; 998 ⦖;
    999 :≡ (WordFromInt,[998],NONE);
    1000 :≡ (Cons 3,[999],NONE);
    1001 :≡ (Const 15,[],NONE);
    1002 :≡ (Const 268435457,[],NONE);
    1003 :≡
    (Mult,[1002; 1001],SOME ⦕ 537; 612; 902; 929; 978; 993; 1000; 1001; 1002 ⦖);
    1004 :≡ (Const 268435441,[],NONE);
    1005 :≡
    (Add,[1004; 1003],SOME ⦕ 537; 612; 902; 929; 978; 993; 1000; 1003; 1004 ⦖);
    makespace 26 ⦕ 537; 612; 902; 929; 978; 993; 1000; 1005 ⦖;
    1006 :≡ (WordFromInt,[1005],NONE);
    1007 :≡ (Cons 3,[1006],NONE);
    1008 :≡ (Cons 3,[1007; 1000],NONE);
    1009 :≡ (Cons 3,[1008; 993],NONE);
    1010 :≡ (Cons 4,[1009; 978],NONE);
    1011 :≡ (Cons 4,[1010; 929],NONE);
    1012 :≡ (Cons 3,[1011; 902],NONE);
    1013 :≡ (Cons 3,[1012; 612],NONE);
    1014 :≡ (Cons 1,[1013; 537],NONE);
    1015 :≡ (Const 159,[],NONE);
    1016 :≡ (Const 268435457,[],NONE);
    1017 :≡ (Mult,[1016; 1015],SOME ⦕ 1014; 1015; 1016 ⦖);
    1018 :≡ (Const 268435297,[],NONE);
    1019 :≡ (Add,[1018; 1017],SOME ⦕ 1014; 1017; 1018 ⦖);
    makespace 5 ⦕ 1014; 1019 ⦖;
    1020 :≡ (WordFromInt,[1019],NONE);
    1021 :≡ (Cons 3,[1020],NONE);
    1022 :≡ (Const 159,[],NONE);
    1023 :≡ (Const 268435457,[],NONE);
    1024 :≡ (Mult,[1023; 1022],SOME ⦕ 1014; 1021; 1022; 1023 ⦖);
    1025 :≡ (Const 268435297,[],NONE);
    1026 :≡ (Add,[1025; 1024],SOME ⦕ 1014; 1021; 1024; 1025 ⦖);
    makespace 8 ⦕ 1014; 1021; 1026 ⦖;
    1027 :≡ (WordFromInt,[1026],NONE);
    1028 :≡ (Cons 3,[1027],NONE);
    1029 :≡ (Cons 3,[1028; 1021],NONE);
    1030 :≡ (Const 1599,[],NONE);
    1031 :≡ (Const 268435457,[],NONE);
    1032 :≡ (Mult,[1031; 1030],SOME ⦕ 1014; 1029; 1030; 1031 ⦖);
    1033 :≡ (Const 268433857,[],NONE);
    1034 :≡ (Add,[1033; 1032],SOME ⦕ 1014; 1029; 1032; 1033 ⦖);
    makespace 5 ⦕ 1014; 1029; 1034 ⦖;
    1035 :≡ (WordFromInt,[1034],NONE);
    1036 :≡ (Cons 3,[1035],NONE);
    1037 :≡ (Const 1599,[],NONE);
    1038 :≡ (Const 268435457,[],NONE);
    1039 :≡ (Mult,[1038; 1037],SOME ⦕ 1014; 1029; 1036; 1037; 1038 ⦖);
    1040 :≡ (Const 268433857,[],NONE);
    1041 :≡ (Add,[1040; 1039],SOME ⦕ 1014; 1029; 1036; 1039; 1040 ⦖);
    makespace 19 ⦕ 1014; 1029; 1036; 1041 ⦖;
    1042 :≡ (WordFromInt,[1041],NONE);
    1043 :≡ (Cons 3,[1042],NONE);
    1044 :≡ (Cons 3,[1043; 1036],NONE);
    1045 :≡ (Cons 0,[],NONE);
    1046 :≡ (Const 115,[],NONE);
    1047 :≡ (Cons 0,[1046; 1045],NONE);
    1048 :≡ (Const 112,[],NONE);
    1049 :≡ (Cons 0,[1048; 1047],NONE);
    1050 :≡ (Const 101,[],NONE);
    1051 :≡ (Cons 0,[1050; 1049],NONE);
    1052 :≡ (Cons 2,[1051],NONE);
    1053 :≡ (Const 159,[],NONE);
    1054 :≡ (Const 268435457,[],NONE);
    1055 :≡ (Mult,[1054; 1053],SOME ⦕ 1014; 1029; 1044; 1052; 1053; 1054 ⦖);
    1056 :≡ (Const 268435297,[],NONE);
    1057 :≡ (Add,[1056; 1055],SOME ⦕ 1014; 1029; 1044; 1052; 1055; 1056 ⦖);
    makespace 8 ⦕ 1014; 1029; 1044; 1052; 1057 ⦖;
    1058 :≡ (WordFromInt,[1057],NONE);
    1059 :≡ (Cons 3,[1058],NONE);
    1060 :≡ (Cons 3,[1059; 1052],NONE);
    1061 :≡ (Const 255,[],NONE);
    1062 :≡ (Const 268435457,[],NONE);
    1063 :≡ (Mult,[1062; 1061],SOME ⦕ 1014; 1029; 1044; 1060; 1061; 1062 ⦖);
    1064 :≡ (Const 268434929,[],NONE);
    1065 :≡ (Add,[1064; 1063],SOME ⦕ 1014; 1029; 1044; 1060; 1063; 1064 ⦖);
    1066 :≡ (Const 268435457,[],NONE);
    1067 :≡ (Mult,[1066; 1065],SOME ⦕ 1014; 1029; 1044; 1060; 1065; 1066 ⦖);
    1068 :≡ (Const 272,[],NONE);
    1069 :≡ (Add,[1068; 1067],SOME ⦕ 1014; 1029; 1044; 1060; 1067; 1068 ⦖);
    makespace 42 ⦕ 1014; 1029; 1044; 1060; 1069 ⦖;
    1070 :≡ (WordFromInt,[1069],NONE);
    1071 :≡ (Cons 3,[1070],NONE);
    1072 :≡ (Cons 3,[1071; 1060],NONE);
    1073 :≡ (Cons 0,[],NONE);
    1074 :≡ (Const 116,[],NONE);
    1075 :≡ (Cons 0,[1074; 1073],NONE);
    1076 :≡ (Const 115,[],NONE);
    1077 :≡ (Cons 0,[1076; 1075],NONE);
    1078 :≡ (Const 111,[],NONE);
    1079 :≡ (Cons 0,[1078; 1077],NONE);
    1080 :≡ (Const 112,[],NONE);
    1081 :≡ (Cons 0,[1080; 1079],NONE);
    1082 :≡ (Const 103,[],NONE);
    1083 :≡ (Cons 0,[1082; 1081],NONE);
    1084 :≡ (Const 121,[],NONE);
    1085 :≡ (Cons 0,[1084; 1083],NONE);
    1086 :≡ (Cons 2,[1085],NONE);
    1087 :≡ (Cons 4,[1086; 1072],NONE);
    1088 :≡ (Cons 3,[1087; 1044],NONE);
    1089 :≡ (Cons 3,[1088; 1029],NONE);
    1090 :≡ (Cons 0,[],NONE);
    1091 :≡ (Const 66,[],NONE);
    1092 :≡ (Cons 0,[1091; 1090],NONE);
    1093 :≡ (Cons 2,[1092],NONE);
    1094 :≡ (Const 31,[],NONE);
    1095 :≡ (Const 268435457,[],NONE);
    1096 :≡ (Mult,[1095; 1094],SOME ⦕ 1014; 1089; 1093; 1094; 1095 ⦖);
    1097 :≡ (Const 268435425,[],NONE);
    1098 :≡ (Add,[1097; 1096],SOME ⦕ 1014; 1089; 1093; 1096; 1097 ⦖);
    makespace 16 ⦕ 1014; 1089; 1093; 1098 ⦖;
    1099 :≡ (WordFromInt,[1098],NONE);
    1100 :≡ (Cons 3,[1099],NONE);
    1101 :≡ (Cons 3,[1100; 1093],NONE);
    1102 :≡ (Cons 0,[],NONE);
    1103 :≡ (Const 104,[],NONE);
    1104 :≡ (Cons 0,[1103; 1102],NONE);
    1105 :≡ (Const 118,[],NONE);
    1106 :≡ (Cons 0,[1105; 1104],NONE);
    1107 :≡ (Cons 2,[1106],NONE);
    1108 :≡ (Const 159,[],NONE);
    1109 :≡ (Const 268435457,[],NONE);
    1110 :≡ (Mult,[1109; 1108],SOME ⦕ 1014; 1089; 1101; 1107; 1108; 1109 ⦖);
    1111 :≡ (Const 268435297,[],NONE);
    1112 :≡ (Add,[1111; 1110],SOME ⦕ 1014; 1089; 1101; 1107; 1110; 1111 ⦖);
    makespace 16 ⦕ 1014; 1089; 1101; 1107; 1112 ⦖;
    1113 :≡ (WordFromInt,[1112],NONE);
    1114 :≡ (Cons 3,[1113],NONE);
    1115 :≡ (Cons 3,[1114; 1107],NONE);
    1116 :≡ (Cons 0,[],NONE);
    1117 :≡ (Const 104,[],NONE);
    1118 :≡ (Cons 0,[1117; 1116],NONE);
    1119 :≡ (Const 118,[],NONE);
    1120 :≡ (Cons 0,[1119; 1118],NONE);
    1121 :≡ (Cons 2,[1120],NONE);
    1122 :≡ (Const 159,[],NONE);
    1123 :≡ (Const 268435457,[],NONE);
    1124 :≡
    (Mult,[1123; 1122],SOME ⦕ 1014; 1089; 1101; 1115; 1121; 1122; 1123 ⦖);
    1125 :≡ (Const 268435297,[],NONE);
    1126 :≡
    (Add,[1125; 1124],SOME ⦕ 1014; 1089; 1101; 1115; 1121; 1124; 1125 ⦖);
    makespace 11 ⦕ 1014; 1089; 1101; 1115; 1121; 1126 ⦖;
    1127 :≡ (WordFromInt,[1126],NONE);
    1128 :≡ (Cons 3,[1127],NONE);
    1129 :≡ (Cons 3,[1128; 1121],NONE);
    1130 :≡ (Cons 3,[1129; 1115],NONE);
    1131 :≡ (Const 255,[],NONE);
    1132 :≡ (Const 268435457,[],NONE);
    1133 :≡ (Mult,[1132; 1131],SOME ⦕ 1014; 1089; 1101; 1130; 1131; 1132 ⦖);
    1134 :≡ (Const 268434929,[],NONE);
    1135 :≡ (Add,[1134; 1133],SOME ⦕ 1014; 1089; 1101; 1130; 1133; 1134 ⦖);
    1136 :≡ (Const 268435457,[],NONE);
    1137 :≡ (Mult,[1136; 1135],SOME ⦕ 1014; 1089; 1101; 1130; 1135; 1136 ⦖);
    1138 :≡ (Const 272,[],NONE);
    1139 :≡ (Add,[1138; 1137],SOME ⦕ 1014; 1089; 1101; 1130; 1137; 1138 ⦖);
    makespace 25 ⦕ 1014; 1089; 1101; 1130; 1139 ⦖;
    1140 :≡ (WordFromInt,[1139],NONE);
    1141 :≡ (Cons 3,[1140],NONE);
    1142 :≡ (Cons 3,[1141; 1130],NONE);
    1143 :≡ (Cons 0,[],NONE);
    1144 :≡ (Const 116,[],NONE);
    1145 :≡ (Cons 0,[1144; 1143],NONE);
    1146 :≡ (Const 115,[],NONE);
    1147 :≡ (Cons 0,[1146; 1145],NONE);
    1148 :≡ (Const 111,[],NONE);
    1149 :≡ (Cons 0,[1148; 1147],NONE);
    1150 :≡ (Const 112,[],NONE);
    1151 :≡ (Cons 0,[1150; 1149],NONE);
    1152 :≡ (Const 116,[],NONE);
    1153 :≡ (Cons 0,[1152; 1151],NONE);
    1154 :≡ (Cons 2,[1153],NONE);
    1155 :≡ (Const 255,[],NONE);
    1156 :≡ (Const 268435457,[],NONE);
    1157 :≡
    (Mult,[1156; 1155],SOME ⦕ 1014; 1089; 1101; 1142; 1154; 1155; 1156 ⦖);
    1158 :≡ (Const 268434929,[],NONE);
    1159 :≡
    (Add,[1158; 1157],SOME ⦕ 1014; 1089; 1101; 1142; 1154; 1157; 1158 ⦖);
    1160 :≡ (Const 268435457,[],NONE);
    1161 :≡
    (Mult,[1160; 1159],SOME ⦕ 1014; 1089; 1101; 1142; 1154; 1159; 1160 ⦖);
    1162 :≡ (Const 272,[],NONE);
    1163 :≡
    (Add,[1162; 1161],SOME ⦕ 1014; 1089; 1101; 1142; 1154; 1161; 1162 ⦖);
    makespace 24 ⦕ 1014; 1089; 1101; 1142; 1154; 1163 ⦖;
    1164 :≡ (WordFromInt,[1163],NONE);
    1165 :≡ (Cons 3,[1164],NONE);
    1166 :≡ (Cons 3,[1165; 1154],NONE);
    1167 :≡ (Cons 0,[],NONE);
    1168 :≡ (Const 84,[],NONE);
    1169 :≡ (Cons 0,[1168; 1167],NONE);
    1170 :≡ (Cons 2,[1169],NONE);
    1171 :≡ (Cons 4,[1170; 1166],NONE);
    1172 :≡ (Cons 0,[],NONE);
    1173 :≡ (Const 97,[],NONE);
    1174 :≡ (Cons 0,[1173; 1172],NONE);
    1175 :≡ (Cons 2,[1174],NONE);
    1176 :≡ (Cons 3,[1175; 1171],NONE);
    1177 :≡ (Const 159,[],NONE);
    1178 :≡ (Const 268435457,[],NONE);
    1179 :≡
    (Mult,[1178; 1177],SOME ⦕ 1014; 1089; 1101; 1142; 1176; 1177; 1178 ⦖);
    1180 :≡ (Const 268435297,[],NONE);
    1181 :≡
    (Add,[1180; 1179],SOME ⦕ 1014; 1089; 1101; 1142; 1176; 1179; 1180 ⦖);
    makespace 45 ⦕ 1014; 1089; 1101; 1142; 1176; 1181 ⦖;
    1182 :≡ (WordFromInt,[1181],NONE);
    1183 :≡ (Cons 3,[1182],NONE);
    1184 :≡ (Cons 0,[],NONE);
    1185 :≡ (Const 116,[],NONE);
    1186 :≡ (Cons 0,[1185; 1184],NONE);
    1187 :≡ (Const 115,[],NONE);
    1188 :≡ (Cons 0,[1187; 1186],NONE);
    1189 :≡ (Const 111,[],NONE);
    1190 :≡ (Cons 0,[1189; 1188],NONE);
    1191 :≡ (Const 112,[],NONE);
    1192 :≡ (Cons 0,[1191; 1190],NONE);
    1193 :≡ (Const 118,[],NONE);
    1194 :≡ (Cons 0,[1193; 1192],NONE);
    1195 :≡ (Cons 2,[1194],NONE);
    1196 :≡ (Cons 3,[1195; 1183],NONE);
    1197 :≡ (Cons 4,[1196; 1176],NONE);
    1198 :≡ (Cons 0,[],NONE);
    1199 :≡ (Const 116,[],NONE);
    1200 :≡ (Cons 0,[1199; 1198],NONE);
    1201 :≡ (Const 115,[],NONE);
    1202 :≡ (Cons 0,[1201; 1200],NONE);
    1203 :≡ (Const 111,[],NONE);
    1204 :≡ (Cons 0,[1203; 1202],NONE);
    1205 :≡ (Const 112,[],NONE);
    1206 :≡ (Cons 0,[1205; 1204],NONE);
    1207 :≡ (Const 116,[],NONE);
    1208 :≡ (Cons 0,[1207; 1206],NONE);
    1209 :≡ (Cons 2,[1208],NONE);
    1210 :≡ (Const 255,[],NONE);
    1211 :≡ (Const 268435457,[],NONE);
    1212 :≡
    (Mult,[1211; 1210],SOME ⦕ 1014; 1089; 1101; 1142; 1197; 1209; 1210; 1211 ⦖);
    1213 :≡ (Const 268434929,[],NONE);
    1214 :≡
    (Add,[1213; 1212],SOME ⦕ 1014; 1089; 1101; 1142; 1197; 1209; 1212; 1213 ⦖);
    1215 :≡ (Const 268435457,[],NONE);
    1216 :≡
    (Mult,[1215; 1214],SOME ⦕ 1014; 1089; 1101; 1142; 1197; 1209; 1214; 1215 ⦖);
    1217 :≡ (Const 272,[],NONE);
    1218 :≡
    (Add,[1217; 1216],SOME ⦕ 1014; 1089; 1101; 1142; 1197; 1209; 1216; 1217 ⦖);
    makespace 24 ⦕ 1014; 1089; 1101; 1142; 1197; 1209; 1218 ⦖;
    1219 :≡ (WordFromInt,[1218],NONE);
    1220 :≡ (Cons 3,[1219],NONE);
    1221 :≡ (Cons 3,[1220; 1209],NONE);
    1222 :≡ (Cons 0,[],NONE);
    1223 :≡ (Const 84,[],NONE);
    1224 :≡ (Cons 0,[1223; 1222],NONE);
    1225 :≡ (Cons 2,[1224],NONE);
    1226 :≡ (Cons 4,[1225; 1221],NONE);
    1227 :≡ (Cons 0,[],NONE);
    1228 :≡ (Const 97,[],NONE);
    1229 :≡ (Cons 0,[1228; 1227],NONE);
    1230 :≡ (Cons 2,[1229],NONE);
    1231 :≡ (Cons 3,[1230; 1226],NONE);
    1232 :≡ (Const 159,[],NONE);
    1233 :≡ (Const 268435457,[],NONE);
    1234 :≡
    (Mult,[1233; 1232],SOME ⦕ 1014; 1089; 1101; 1142; 1197; 1231; 1232; 1233 ⦖);
    1235 :≡ (Const 268435297,[],NONE);
    1236 :≡
    (Add,[1235; 1234],SOME ⦕ 1014; 1089; 1101; 1142; 1197; 1231; 1234; 1235 ⦖);
    makespace 54 ⦕ 1014; 1089; 1101; 1142; 1197; 1231; 1236 ⦖;
    1237 :≡ (WordFromInt,[1236],NONE);
    1238 :≡ (Cons 3,[1237],NONE);
    1239 :≡ (Cons 0,[],NONE);
    1240 :≡ (Const 116,[],NONE);
    1241 :≡ (Cons 0,[1240; 1239],NONE);
    1242 :≡ (Const 115,[],NONE);
    1243 :≡ (Cons 0,[1242; 1241],NONE);
    1244 :≡ (Const 111,[],NONE);
    1245 :≡ (Cons 0,[1244; 1243],NONE);
    1246 :≡ (Const 112,[],NONE);
    1247 :≡ (Cons 0,[1246; 1245],NONE);
    1248 :≡ (Const 118,[],NONE);
    1249 :≡ (Cons 0,[1248; 1247],NONE);
    1250 :≡ (Cons 2,[1249],NONE);
    1251 :≡ (Cons 3,[1250; 1238],NONE);
    1252 :≡ (Cons 4,[1251; 1231],NONE);
    1253 :≡ (Cons 3,[1252; 1197],NONE);
    1254 :≡ (Cons 4,[1253; 1142],NONE);
    1255 :≡ (Cons 2,[1254; 1101],NONE);
    1256 :≡ (Cons 0,[],NONE);
    1257 :≡ (Const 116,[],NONE);
    1258 :≡ (Cons 0,[1257; 1256],NONE);
    1259 :≡ (Const 115,[],NONE);
    1260 :≡ (Cons 0,[1259; 1258],NONE);
    1261 :≡ (Const 111,[],NONE);
    1262 :≡ (Cons 0,[1261; 1260],NONE);
    1263 :≡ (Const 112,[],NONE);
    1264 :≡ (Cons 0,[1263; 1262],NONE);
    1265 :≡ (Const 116,[],NONE);
    1266 :≡ (Cons 0,[1265; 1264],NONE);
    1267 :≡ (Cons 2,[1266],NONE);
    1268 :≡ (Const 255,[],NONE);
    1269 :≡ (Const 268435457,[],NONE);
    1270 :≡ (Mult,[1269; 1268],SOME ⦕ 1014; 1089; 1255; 1267; 1268; 1269 ⦖);
    1271 :≡ (Const 268434929,[],NONE);
    1272 :≡ (Add,[1271; 1270],SOME ⦕ 1014; 1089; 1255; 1267; 1270; 1271 ⦖);
    1273 :≡ (Const 268435457,[],NONE);
    1274 :≡ (Mult,[1273; 1272],SOME ⦕ 1014; 1089; 1255; 1267; 1272; 1273 ⦖);
    1275 :≡ (Const 272,[],NONE);
    1276 :≡ (Add,[1275; 1274],SOME ⦕ 1014; 1089; 1255; 1267; 1274; 1275 ⦖);
    makespace 33 ⦕ 1014; 1089; 1255; 1267; 1276 ⦖;
    1277 :≡ (WordFromInt,[1276],NONE);
    1278 :≡ (Cons 3,[1277],NONE);
    1279 :≡ (Cons 3,[1278; 1267],NONE);
    1280 :≡ (Cons 0,[],NONE);
    1281 :≡ (Const 84,[],NONE);
    1282 :≡ (Cons 0,[1281; 1280],NONE);
    1283 :≡ (Cons 2,[1282],NONE);
    1284 :≡ (Cons 4,[1283; 1279],NONE);
    1285 :≡ (Cons 0,[],NONE);
    1286 :≡ (Const 116,[],NONE);
    1287 :≡ (Cons 0,[1286; 1285],NONE);
    1288 :≡ (Const 115,[],NONE);
    1289 :≡ (Cons 0,[1288; 1287],NONE);
    1290 :≡ (Const 111,[],NONE);
    1291 :≡ (Cons 0,[1290; 1289],NONE);
    1292 :≡ (Const 112,[],NONE);
    1293 :≡ (Cons 0,[1292; 1291],NONE);
    1294 :≡ (Const 116,[],NONE);
    1295 :≡ (Cons 0,[1294; 1293],NONE);
    1296 :≡ (Cons 2,[1295],NONE);
    1297 :≡ (Const 255,[],NONE);
    1298 :≡ (Const 268435457,[],NONE);
    1299 :≡
    (Mult,[1298; 1297],SOME ⦕ 1014; 1089; 1255; 1284; 1296; 1297; 1298 ⦖);
    1300 :≡ (Const 268434929,[],NONE);
    1301 :≡
    (Add,[1300; 1299],SOME ⦕ 1014; 1089; 1255; 1284; 1296; 1299; 1300 ⦖);
    1302 :≡ (Const 268435457,[],NONE);
    1303 :≡
    (Mult,[1302; 1301],SOME ⦕ 1014; 1089; 1255; 1284; 1296; 1301; 1302 ⦖);
    1304 :≡ (Const 272,[],NONE);
    1305 :≡
    (Add,[1304; 1303],SOME ⦕ 1014; 1089; 1255; 1284; 1296; 1303; 1304 ⦖);
    makespace 19 ⦕ 1014; 1089; 1255; 1284; 1296; 1305 ⦖;
    1306 :≡ (WordFromInt,[1305],NONE);
    1307 :≡ (Cons 3,[1306],NONE);
    1308 :≡ (Cons 3,[1307; 1296],NONE);
    1309 :≡ (Cons 0,[],NONE);
    1310 :≡ (Const 84,[],NONE);
    1311 :≡ (Cons 0,[1310; 1309],NONE);
    1312 :≡ (Cons 2,[1311],NONE);
    1313 :≡ (Cons 4,[1312; 1308],NONE);
    1314 :≡ (Cons 3,[1313; 1284],NONE);
    1315 :≡ (Const 31,[],NONE);
    1316 :≡ (Const 268435457,[],NONE);
    1317 :≡ (Mult,[1316; 1315],SOME ⦕ 1014; 1089; 1255; 1314; 1315; 1316 ⦖);
    1318 :≡ (Const 268435425,[],NONE);
    1319 :≡ (Add,[1318; 1317],SOME ⦕ 1014; 1089; 1255; 1314; 1317; 1318 ⦖);
    makespace 16 ⦕ 1014; 1089; 1255; 1314; 1319 ⦖;
    1320 :≡ (WordFromInt,[1319],NONE);
    1321 :≡ (Cons 3,[1320],NONE);
    1322 :≡ (Cons 0,[],NONE);
    1323 :≡ (Const 97,[],NONE);
    1324 :≡ (Cons 0,[1323; 1322],NONE);
    1325 :≡ (Cons 2,[1324],NONE);
    1326 :≡ (Cons 2,[1325; 1321],NONE);
    1327 :≡ (Cons 3,[1326; 1314],NONE);
    1328 :≡ (Const 159,[],NONE);
    1329 :≡ (Const 268435457,[],NONE);
    1330 :≡ (Mult,[1329; 1328],SOME ⦕ 1014; 1089; 1255; 1327; 1328; 1329 ⦖);
    1331 :≡ (Const 268435297,[],NONE);
    1332 :≡ (Add,[1331; 1330],SOME ⦕ 1014; 1089; 1255; 1327; 1330; 1331 ⦖);
    makespace 22 ⦕ 1014; 1089; 1255; 1327; 1332 ⦖;
    1333 :≡ (WordFromInt,[1332],NONE);
    1334 :≡ (Cons 3,[1333],NONE);
    1335 :≡ (Cons 0,[],NONE);
    1336 :≡ (Const 116,[],NONE);
    1337 :≡ (Cons 0,[1336; 1335],NONE);
    1338 :≡ (Const 115,[],NONE);
    1339 :≡ (Cons 0,[1338; 1337],NONE);
    1340 :≡ (Const 111,[],NONE);
    1341 :≡ (Cons 0,[1340; 1339],NONE);
    1342 :≡ (Const 112,[],NONE);
    1343 :≡ (Cons 0,[1342; 1341],NONE);
    1344 :≡ (Const 116,[],NONE);
    1345 :≡ (Cons 0,[1344; 1343],NONE);
    1346 :≡ (Cons 2,[1345],NONE);
    1347 :≡ (Const 255,[],NONE);
    1348 :≡ (Const 268435457,[],NONE);
    1349 :≡
    (Mult,[1348; 1347],SOME ⦕ 1014; 1089; 1255; 1327; 1334; 1346; 1347; 1348 ⦖);
    1350 :≡ (Const 268434929,[],NONE);
    1351 :≡
    (Add,[1350; 1349],SOME ⦕ 1014; 1089; 1255; 1327; 1334; 1346; 1349; 1350 ⦖);
    1352 :≡ (Const 268435457,[],NONE);
    1353 :≡
    (Mult,[1352; 1351],SOME ⦕ 1014; 1089; 1255; 1327; 1334; 1346; 1351; 1352 ⦖);
    1354 :≡ (Const 272,[],NONE);
    1355 :≡
    (Add,[1354; 1353],SOME ⦕ 1014; 1089; 1255; 1327; 1334; 1346; 1353; 1354 ⦖);
    makespace 86 ⦕ 1014; 1089; 1255; 1327; 1334; 1346; 1355 ⦖;
    1356 :≡ (WordFromInt,[1355],NONE);
    1357 :≡ (Cons 3,[1356],NONE);
    1358 :≡ (Cons 3,[1357; 1346],NONE);
    1359 :≡ (Cons 0,[],NONE);
    1360 :≡ (Const 84,[],NONE);
    1361 :≡ (Cons 0,[1360; 1359],NONE);
    1362 :≡ (Cons 2,[1361],NONE);
    1363 :≡ (Cons 4,[1362; 1358],NONE);
    1364 :≡ (Cons 0,[],NONE);
    1365 :≡ (Const 116,[],NONE);
    1366 :≡ (Cons 0,[1365; 1364],NONE);
    1367 :≡ (Const 115,[],NONE);
    1368 :≡ (Cons 0,[1367; 1366],NONE);
    1369 :≡ (Const 111,[],NONE);
    1370 :≡ (Cons 0,[1369; 1368],NONE);
    1371 :≡ (Const 112,[],NONE);
    1372 :≡ (Cons 0,[1371; 1370],NONE);
    1373 :≡ (Const 118,[],NONE);
    1374 :≡ (Cons 0,[1373; 1372],NONE);
    1375 :≡ (Cons 2,[1374],NONE);
    1376 :≡ (Cons 3,[1375; 1363],NONE);
    1377 :≡ (Cons 3,[1376; 1334],NONE);
    1378 :≡ (Cons 4,[1377; 1327],NONE);
    1379 :≡ (Cons 4,[1378; 1255],NONE);
    1380 :≡ (Cons 0,[],NONE);
    1381 :≡ (Const 107,[],NONE);
    1382 :≡ (Cons 0,[1381; 1380],NONE);
    1383 :≡ (Cons 2,[1382],NONE);
    1384 :≡ (Cons 0,[],NONE);
    1385 :≡ (Const 107,[],NONE);
    1386 :≡ (Cons 0,[1385; 1384],NONE);
    1387 :≡ (Cons 2,[1386],NONE);
    1388 :≡ (Cons 3,[1387; 1383],NONE);
    1389 :≡ (Cons 0,[],NONE);
    1390 :≡ (Const 115,[],NONE);
    1391 :≡ (Cons 0,[1390; 1389],NONE);
    1392 :≡ (Const 112,[],NONE);
    1393 :≡ (Cons 0,[1392; 1391],NONE);
    1394 :≡ (Const 101,[],NONE);
    1395 :≡ (Cons 0,[1394; 1393],NONE);
    1396 :≡ (Cons 2,[1395],NONE);
    1397 :≡ (Cons 0,[],NONE);
    1398 :≡ (Const 115,[],NONE);
    1399 :≡ (Cons 0,[1398; 1397],NONE);
    1400 :≡ (Const 112,[],NONE);
    1401 :≡ (Cons 0,[1400; 1399],NONE);
    1402 :≡ (Const 101,[],NONE);
    1403 :≡ (Cons 0,[1402; 1401],NONE);
    1404 :≡ (Cons 2,[1403],NONE);
    1405 :≡ (Cons 3,[1404; 1396],NONE);
    1406 :≡ (Cons 3,[1405; 1388],NONE);
    1407 :≡ (Const 1599,[],NONE);
    1408 :≡ (Const 268435457,[],NONE);
    1409 :≡ (Mult,[1408; 1407],SOME ⦕ 1014; 1089; 1379; 1406; 1407; 1408 ⦖);
    1410 :≡ (Const 268433857,[],NONE);
    1411 :≡ (Add,[1410; 1409],SOME ⦕ 1014; 1089; 1379; 1406; 1409; 1410 ⦖);
    makespace 5 ⦕ 1014; 1089; 1379; 1406; 1411 ⦖;
    1412 :≡ (WordFromInt,[1411],NONE);
    1413 :≡ (Cons 3,[1412],NONE);
    1414 :≡ (Const 15,[],NONE);
    1415 :≡ (Const 268435457,[],NONE);
    1416 :≡
    (Mult,[1415; 1414],SOME ⦕ 1014; 1089; 1379; 1406; 1413; 1414; 1415 ⦖);
    1417 :≡ (Const 268435441,[],NONE);
    1418 :≡
    (Add,[1417; 1416],SOME ⦕ 1014; 1089; 1379; 1406; 1413; 1416; 1417 ⦖);
    makespace 21 ⦕ 1014; 1089; 1379; 1406; 1413; 1418 ⦖;
    1419 :≡ (WordFromInt,[1418],NONE);
    1420 :≡ (Cons 3,[1419],NONE);
    1421 :≡ (Cons 0,[],NONE);
    1422 :≡ (Const 107,[],NONE);
    1423 :≡ (Cons 0,[1422; 1421],NONE);
    1424 :≡ (Cons 2,[1423],NONE);
    1425 :≡ (Cons 0,[],NONE);
    1426 :≡ (Const 115,[],NONE);
    1427 :≡ (Cons 0,[1426; 1425],NONE);
    1428 :≡ (Const 112,[],NONE);
    1429 :≡ (Cons 0,[1428; 1427],NONE);
    1430 :≡ (Const 101,[],NONE);
    1431 :≡ (Cons 0,[1430; 1429],NONE);
    1432 :≡ (Cons 2,[1431],NONE);
    1433 :≡ (Const 31,[],NONE);
    1434 :≡ (Const 268435457,[],NONE);
    1435 :≡
    (Mult,[1434; 1433],
     SOME ⦕ 1014; 1089; 1379; 1406; 1413; 1420; 1424; 1432; 1433; 1434 ⦖);
    1436 :≡ (Const 268435425,[],NONE);
    1437 :≡
    (Add,[1436; 1435],
     SOME ⦕ 1014; 1089; 1379; 1406; 1413; 1420; 1424; 1432; 1435; 1436 ⦖);
    makespace 17 ⦕ 1014; 1089; 1379; 1406; 1413; 1420; 1424; 1432; 1437 ⦖;
    1438 :≡ (WordFromInt,[1437],NONE);
    1439 :≡ (Cons 3,[1438],NONE);
    1440 :≡ (Cons 3,[1439; 1432],NONE);
    1441 :≡ (Cons 3,[1440; 1424],NONE);
    1442 :≡ (Cons 3,[1441; 1420],NONE);
    1443 :≡ (Cons 3,[1442; 1413],NONE);
    1444 :≡ (Const 1599,[],NONE);
    1445 :≡ (Const 268435457,[],NONE);
    1446 :≡
    (Mult,[1445; 1444],SOME ⦕ 1014; 1089; 1379; 1406; 1443; 1444; 1445 ⦖);
    1447 :≡ (Const 268433857,[],NONE);
    1448 :≡
    (Add,[1447; 1446],SOME ⦕ 1014; 1089; 1379; 1406; 1443; 1446; 1447 ⦖);
    makespace 5 ⦕ 1014; 1089; 1379; 1406; 1443; 1448 ⦖;
    1449 :≡ (WordFromInt,[1448],NONE);
    1450 :≡ (Cons 3,[1449],NONE);
    1451 :≡ (Const 15,[],NONE);
    1452 :≡ (Const 268435457,[],NONE);
    1453 :≡
    (Mult,[1452; 1451],SOME ⦕ 1014; 1089; 1379; 1406; 1443; 1450; 1451; 1452 ⦖);
    1454 :≡ (Const 268435441,[],NONE);
    1455 :≡
    (Add,[1454; 1453],SOME ⦕ 1014; 1089; 1379; 1406; 1443; 1450; 1453; 1454 ⦖);
    makespace 8 ⦕ 1014; 1089; 1379; 1406; 1443; 1450; 1455 ⦖;
    1456 :≡ (WordFromInt,[1455],NONE);
    1457 :≡ (Cons 3,[1456],NONE);
    1458 :≡ (Cons 3,[1457; 1450],NONE);
    1459 :≡ (Const 1599,[],NONE);
    1460 :≡ (Const 268435457,[],NONE);
    1461 :≡
    (Mult,[1460; 1459],SOME ⦕ 1014; 1089; 1379; 1406; 1443; 1458; 1459; 1460 ⦖);
    1462 :≡ (Const 268433857,[],NONE);
    1463 :≡
    (Add,[1462; 1461],SOME ⦕ 1014; 1089; 1379; 1406; 1443; 1458; 1461; 1462 ⦖);
    makespace 5 ⦕ 1014; 1089; 1379; 1406; 1443; 1458; 1463 ⦖;
    1464 :≡ (WordFromInt,[1463],NONE);
    1465 :≡ (Cons 3,[1464],NONE);
    1466 :≡ (Const 15,[],NONE);
    1467 :≡ (Const 268435457,[],NONE);
    1468 :≡
    (Mult,[1467; 1466],
     SOME ⦕ 1014; 1089; 1379; 1406; 1443; 1458; 1465; 1466; 1467 ⦖);
    1469 :≡ (Const 268435441,[],NONE);
    1470 :≡
    (Add,[1469; 1468],
     SOME ⦕ 1014; 1089; 1379; 1406; 1443; 1458; 1465; 1468; 1469 ⦖);
    makespace 26 ⦕ 1014; 1089; 1379; 1406; 1443; 1458; 1465; 1470 ⦖;
    1471 :≡ (WordFromInt,[1470],NONE);
    1472 :≡ (Cons 3,[1471],NONE);
    1473 :≡ (Cons 3,[1472; 1465],NONE);
    1474 :≡ (Cons 3,[1473; 1458],NONE);
    1475 :≡ (Cons 4,[1474; 1443],NONE);
    1476 :≡ (Cons 4,[1475; 1406],NONE);
    1477 :≡ (Cons 3,[1476; 1379],NONE);
    1478 :≡ (Cons 3,[1477; 1089],NONE);
    1479 :≡ (Cons 1,[1478; 1014],NONE);
    return 1479
  od

bvi_aux_6 [] =
  do
    call_bvi_aux_5 (0,LN) [] NONE;
    1 :≡ (Const 159,[],NONE);
    2 :≡ (Const 268435457,[],NONE);
    3 :≡ (Mult,[2; 1],SOME ⦕ 0; 1; 2 ⦖);
    4 :≡ (Const 268435297,[],NONE);
    5 :≡ (Add,[4; 3],SOME ⦕ 0; 3; 4 ⦖);
    makespace 5 ⦕ 0; 5 ⦖;
    6 :≡ (WordFromInt,[5],NONE);
    7 :≡ (Cons 3,[6],NONE);
    8 :≡ (Const 159,[],NONE);
    9 :≡ (Const 268435457,[],NONE);
    10 :≡ (Mult,[9; 8],SOME ⦕ 0; 7; 8; 9 ⦖);
    11 :≡ (Const 268435297,[],NONE);
    12 :≡ (Add,[11; 10],SOME ⦕ 0; 7; 10; 11 ⦖);
    makespace 8 ⦕ 0; 7; 12 ⦖;
    13 :≡ (WordFromInt,[12],NONE);
    14 :≡ (Cons 3,[13],NONE);
    15 :≡ (Cons 3,[14; 7],NONE);
    16 :≡ (Const 1599,[],NONE);
    17 :≡ (Const 268435457,[],NONE);
    18 :≡ (Mult,[17; 16],SOME ⦕ 0; 15; 16; 17 ⦖);
    19 :≡ (Const 268433857,[],NONE);
    20 :≡ (Add,[19; 18],SOME ⦕ 0; 15; 18; 19 ⦖);
    makespace 5 ⦕ 0; 15; 20 ⦖;
    21 :≡ (WordFromInt,[20],NONE);
    22 :≡ (Cons 3,[21],NONE);
    23 :≡ (Const 1599,[],NONE);
    24 :≡ (Const 268435457,[],NONE);
    25 :≡ (Mult,[24; 23],SOME ⦕ 0; 15; 22; 23; 24 ⦖);
    26 :≡ (Const 268433857,[],NONE);
    27 :≡ (Add,[26; 25],SOME ⦕ 0; 15; 22; 25; 26 ⦖);
    makespace 19 ⦕ 0; 15; 22; 27 ⦖;
    28 :≡ (WordFromInt,[27],NONE);
    29 :≡ (Cons 3,[28],NONE);
    30 :≡ (Cons 3,[29; 22],NONE);
    31 :≡ (Cons 0,[],NONE);
    32 :≡ (Const 115,[],NONE);
    33 :≡ (Cons 0,[32; 31],NONE);
    34 :≡ (Const 112,[],NONE);
    35 :≡ (Cons 0,[34; 33],NONE);
    36 :≡ (Const 101,[],NONE);
    37 :≡ (Cons 0,[36; 35],NONE);
    38 :≡ (Cons 2,[37],NONE);
    39 :≡ (Const 159,[],NONE);
    40 :≡ (Const 268435457,[],NONE);
    41 :≡ (Mult,[40; 39],SOME ⦕ 0; 15; 30; 38; 39; 40 ⦖);
    42 :≡ (Const 268435297,[],NONE);
    43 :≡ (Add,[42; 41],SOME ⦕ 0; 15; 30; 38; 41; 42 ⦖);
    makespace 8 ⦕ 0; 15; 30; 38; 43 ⦖;
    44 :≡ (WordFromInt,[43],NONE);
    45 :≡ (Cons 3,[44],NONE);
    46 :≡ (Cons 3,[45; 38],NONE);
    47 :≡ (Const 255,[],NONE);
    48 :≡ (Const 268435457,[],NONE);
    49 :≡ (Mult,[48; 47],SOME ⦕ 0; 15; 30; 46; 47; 48 ⦖);
    50 :≡ (Const 268434929,[],NONE);
    51 :≡ (Add,[50; 49],SOME ⦕ 0; 15; 30; 46; 49; 50 ⦖);
    52 :≡ (Const 268435457,[],NONE);
    53 :≡ (Mult,[52; 51],SOME ⦕ 0; 15; 30; 46; 51; 52 ⦖);
    54 :≡ (Const 272,[],NONE);
    55 :≡ (Add,[54; 53],SOME ⦕ 0; 15; 30; 46; 53; 54 ⦖);
    makespace 44 ⦕ 0; 15; 30; 46; 55 ⦖;
    56 :≡ (WordFromInt,[55],NONE);
    57 :≡ (Cons 3,[56],NONE);
    58 :≡ (Cons 3,[57; 46],NONE);
    59 :≡ (Cons 0,[],NONE);
    60 :≡ (Const 116,[],NONE);
    61 :≡ (Cons 0,[60; 59],NONE);
    62 :≡ (Const 115,[],NONE);
    63 :≡ (Cons 0,[62; 61],NONE);
    64 :≡ (Const 111,[],NONE);
    65 :≡ (Cons 0,[64; 63],NONE);
    66 :≡ (Const 112,[],NONE);
    67 :≡ (Cons 0,[66; 65],NONE);
    68 :≡ (Const 103,[],NONE);
    69 :≡ (Cons 0,[68; 67],NONE);
    70 :≡ (Const 120,[],NONE);
    71 :≡ (Cons 0,[70; 69],NONE);
    72 :≡ (Cons 2,[71],NONE);
    73 :≡ (Cons 1,[72],NONE);
    74 :≡ (Cons 4,[73; 58],NONE);
    75 :≡ (Cons 3,[74; 30],NONE);
    76 :≡ (Cons 3,[75; 15],NONE);
    77 :≡ (Cons 0,[],NONE);
    78 :≡ (Const 66,[],NONE);
    79 :≡ (Cons 0,[78; 77],NONE);
    80 :≡ (Cons 2,[79],NONE);
    81 :≡ (Const 31,[],NONE);
    82 :≡ (Const 268435457,[],NONE);
    83 :≡ (Mult,[82; 81],SOME ⦕ 0; 76; 80; 81; 82 ⦖);
    84 :≡ (Const 268435425,[],NONE);
    85 :≡ (Add,[84; 83],SOME ⦕ 0; 76; 80; 83; 84 ⦖);
    makespace 16 ⦕ 0; 76; 80; 85 ⦖;
    86 :≡ (WordFromInt,[85],NONE);
    87 :≡ (Cons 3,[86],NONE);
    88 :≡ (Cons 3,[87; 80],NONE);
    89 :≡ (Cons 0,[],NONE);
    90 :≡ (Const 104,[],NONE);
    91 :≡ (Cons 0,[90; 89],NONE);
    92 :≡ (Const 118,[],NONE);
    93 :≡ (Cons 0,[92; 91],NONE);
    94 :≡ (Cons 2,[93],NONE);
    95 :≡ (Const 159,[],NONE);
    96 :≡ (Const 268435457,[],NONE);
    97 :≡ (Mult,[96; 95],SOME ⦕ 0; 76; 88; 94; 95; 96 ⦖);
    98 :≡ (Const 268435297,[],NONE);
    99 :≡ (Add,[98; 97],SOME ⦕ 0; 76; 88; 94; 97; 98 ⦖);
    makespace 16 ⦕ 0; 76; 88; 94; 99 ⦖;
    100 :≡ (WordFromInt,[99],NONE);
    101 :≡ (Cons 3,[100],NONE);
    102 :≡ (Cons 3,[101; 94],NONE);
    103 :≡ (Cons 0,[],NONE);
    104 :≡ (Const 104,[],NONE);
    105 :≡ (Cons 0,[104; 103],NONE);
    106 :≡ (Const 118,[],NONE);
    107 :≡ (Cons 0,[106; 105],NONE);
    108 :≡ (Cons 2,[107],NONE);
    109 :≡ (Const 159,[],NONE);
    110 :≡ (Const 268435457,[],NONE);
    111 :≡ (Mult,[110; 109],SOME ⦕ 0; 76; 88; 102; 108; 109; 110 ⦖);
    112 :≡ (Const 268435297,[],NONE);
    113 :≡ (Add,[112; 111],SOME ⦕ 0; 76; 88; 102; 108; 111; 112 ⦖);
    makespace 11 ⦕ 0; 76; 88; 102; 108; 113 ⦖;
    114 :≡ (WordFromInt,[113],NONE);
    115 :≡ (Cons 3,[114],NONE);
    116 :≡ (Cons 3,[115; 108],NONE);
    117 :≡ (Cons 3,[116; 102],NONE);
    118 :≡ (Const 255,[],NONE);
    119 :≡ (Const 268435457,[],NONE);
    120 :≡ (Mult,[119; 118],SOME ⦕ 0; 76; 88; 117; 118; 119 ⦖);
    121 :≡ (Const 268434929,[],NONE);
    122 :≡ (Add,[121; 120],SOME ⦕ 0; 76; 88; 117; 120; 121 ⦖);
    123 :≡ (Const 268435457,[],NONE);
    124 :≡ (Mult,[123; 122],SOME ⦕ 0; 76; 88; 117; 122; 123 ⦖);
    125 :≡ (Const 272,[],NONE);
    126 :≡ (Add,[125; 124],SOME ⦕ 0; 76; 88; 117; 124; 125 ⦖);
    makespace 25 ⦕ 0; 76; 88; 117; 126 ⦖;
    127 :≡ (WordFromInt,[126],NONE);
    128 :≡ (Cons 3,[127],NONE);
    129 :≡ (Cons 3,[128; 117],NONE);
    130 :≡ (Cons 0,[],NONE);
    131 :≡ (Const 116,[],NONE);
    132 :≡ (Cons 0,[131; 130],NONE);
    133 :≡ (Const 115,[],NONE);
    134 :≡ (Cons 0,[133; 132],NONE);
    135 :≡ (Const 111,[],NONE);
    136 :≡ (Cons 0,[135; 134],NONE);
    137 :≡ (Const 112,[],NONE);
    138 :≡ (Cons 0,[137; 136],NONE);
    139 :≡ (Const 116,[],NONE);
    140 :≡ (Cons 0,[139; 138],NONE);
    141 :≡ (Cons 2,[140],NONE);
    142 :≡ (Const 255,[],NONE);
    143 :≡ (Const 268435457,[],NONE);
    144 :≡ (Mult,[143; 142],SOME ⦕ 0; 76; 88; 129; 141; 142; 143 ⦖);
    145 :≡ (Const 268434929,[],NONE);
    146 :≡ (Add,[145; 144],SOME ⦕ 0; 76; 88; 129; 141; 144; 145 ⦖);
    147 :≡ (Const 268435457,[],NONE);
    148 :≡ (Mult,[147; 146],SOME ⦕ 0; 76; 88; 129; 141; 146; 147 ⦖);
    149 :≡ (Const 272,[],NONE);
    150 :≡ (Add,[149; 148],SOME ⦕ 0; 76; 88; 129; 141; 148; 149 ⦖);
    makespace 24 ⦕ 0; 76; 88; 129; 141; 150 ⦖;
    151 :≡ (WordFromInt,[150],NONE);
    152 :≡ (Cons 3,[151],NONE);
    153 :≡ (Cons 3,[152; 141],NONE);
    154 :≡ (Cons 0,[],NONE);
    155 :≡ (Const 84,[],NONE);
    156 :≡ (Cons 0,[155; 154],NONE);
    157 :≡ (Cons 2,[156],NONE);
    158 :≡ (Cons 4,[157; 153],NONE);
    159 :≡ (Cons 0,[],NONE);
    160 :≡ (Const 97,[],NONE);
    161 :≡ (Cons 0,[160; 159],NONE);
    162 :≡ (Cons 2,[161],NONE);
    163 :≡ (Cons 3,[162; 158],NONE);
    164 :≡ (Const 159,[],NONE);
    165 :≡ (Const 268435457,[],NONE);
    166 :≡ (Mult,[165; 164],SOME ⦕ 0; 76; 88; 129; 163; 164; 165 ⦖);
    167 :≡ (Const 268435297,[],NONE);
    168 :≡ (Add,[167; 166],SOME ⦕ 0; 76; 88; 129; 163; 166; 167 ⦖);
    makespace 45 ⦕ 0; 76; 88; 129; 163; 168 ⦖;
    169 :≡ (WordFromInt,[168],NONE);
    170 :≡ (Cons 3,[169],NONE);
    171 :≡ (Cons 0,[],NONE);
    172 :≡ (Const 116,[],NONE);
    173 :≡ (Cons 0,[172; 171],NONE);
    174 :≡ (Const 115,[],NONE);
    175 :≡ (Cons 0,[174; 173],NONE);
    176 :≡ (Const 111,[],NONE);
    177 :≡ (Cons 0,[176; 175],NONE);
    178 :≡ (Const 112,[],NONE);
    179 :≡ (Cons 0,[178; 177],NONE);
    180 :≡ (Const 118,[],NONE);
    181 :≡ (Cons 0,[180; 179],NONE);
    182 :≡ (Cons 2,[181],NONE);
    183 :≡ (Cons 3,[182; 170],NONE);
    184 :≡ (Cons 4,[183; 163],NONE);
    185 :≡ (Cons 0,[],NONE);
    186 :≡ (Const 116,[],NONE);
    187 :≡ (Cons 0,[186; 185],NONE);
    188 :≡ (Const 115,[],NONE);
    189 :≡ (Cons 0,[188; 187],NONE);
    190 :≡ (Const 111,[],NONE);
    191 :≡ (Cons 0,[190; 189],NONE);
    192 :≡ (Const 112,[],NONE);
    193 :≡ (Cons 0,[192; 191],NONE);
    194 :≡ (Const 116,[],NONE);
    195 :≡ (Cons 0,[194; 193],NONE);
    196 :≡ (Cons 2,[195],NONE);
    197 :≡ (Const 255,[],NONE);
    198 :≡ (Const 268435457,[],NONE);
    199 :≡ (Mult,[198; 197],SOME ⦕ 0; 76; 88; 129; 184; 196; 197; 198 ⦖);
    200 :≡ (Const 268434929,[],NONE);
    201 :≡ (Add,[200; 199],SOME ⦕ 0; 76; 88; 129; 184; 196; 199; 200 ⦖);
    202 :≡ (Const 268435457,[],NONE);
    203 :≡ (Mult,[202; 201],SOME ⦕ 0; 76; 88; 129; 184; 196; 201; 202 ⦖);
    204 :≡ (Const 272,[],NONE);
    205 :≡ (Add,[204; 203],SOME ⦕ 0; 76; 88; 129; 184; 196; 203; 204 ⦖);
    makespace 24 ⦕ 0; 76; 88; 129; 184; 196; 205 ⦖;
    206 :≡ (WordFromInt,[205],NONE);
    207 :≡ (Cons 3,[206],NONE);
    208 :≡ (Cons 3,[207; 196],NONE);
    209 :≡ (Cons 0,[],NONE);
    210 :≡ (Const 84,[],NONE);
    211 :≡ (Cons 0,[210; 209],NONE);
    212 :≡ (Cons 2,[211],NONE);
    213 :≡ (Cons 4,[212; 208],NONE);
    214 :≡ (Cons 0,[],NONE);
    215 :≡ (Const 97,[],NONE);
    216 :≡ (Cons 0,[215; 214],NONE);
    217 :≡ (Cons 2,[216],NONE);
    218 :≡ (Cons 3,[217; 213],NONE);
    219 :≡ (Const 159,[],NONE);
    220 :≡ (Const 268435457,[],NONE);
    221 :≡ (Mult,[220; 219],SOME ⦕ 0; 76; 88; 129; 184; 218; 219; 220 ⦖);
    222 :≡ (Const 268435297,[],NONE);
    223 :≡ (Add,[222; 221],SOME ⦕ 0; 76; 88; 129; 184; 218; 221; 222 ⦖);
    makespace 54 ⦕ 0; 76; 88; 129; 184; 218; 223 ⦖;
    224 :≡ (WordFromInt,[223],NONE);
    225 :≡ (Cons 3,[224],NONE);
    226 :≡ (Cons 0,[],NONE);
    227 :≡ (Const 116,[],NONE);
    228 :≡ (Cons 0,[227; 226],NONE);
    229 :≡ (Const 115,[],NONE);
    230 :≡ (Cons 0,[229; 228],NONE);
    231 :≡ (Const 111,[],NONE);
    232 :≡ (Cons 0,[231; 230],NONE);
    233 :≡ (Const 112,[],NONE);
    234 :≡ (Cons 0,[233; 232],NONE);
    235 :≡ (Const 118,[],NONE);
    236 :≡ (Cons 0,[235; 234],NONE);
    237 :≡ (Cons 2,[236],NONE);
    238 :≡ (Cons 3,[237; 225],NONE);
    239 :≡ (Cons 4,[238; 218],NONE);
    240 :≡ (Cons 3,[239; 184],NONE);
    241 :≡ (Cons 4,[240; 129],NONE);
    242 :≡ (Cons 2,[241; 88],NONE);
    243 :≡ (Cons 0,[],NONE);
    244 :≡ (Const 116,[],NONE);
    245 :≡ (Cons 0,[244; 243],NONE);
    246 :≡ (Const 115,[],NONE);
    247 :≡ (Cons 0,[246; 245],NONE);
    248 :≡ (Const 111,[],NONE);
    249 :≡ (Cons 0,[248; 247],NONE);
    250 :≡ (Const 112,[],NONE);
    251 :≡ (Cons 0,[250; 249],NONE);
    252 :≡ (Const 116,[],NONE);
    253 :≡ (Cons 0,[252; 251],NONE);
    254 :≡ (Cons 2,[253],NONE);
    255 :≡ (Const 255,[],NONE);
    256 :≡ (Const 268435457,[],NONE);
    257 :≡ (Mult,[256; 255],SOME ⦕ 0; 76; 242; 254; 255; 256 ⦖);
    258 :≡ (Const 268434929,[],NONE);
    259 :≡ (Add,[258; 257],SOME ⦕ 0; 76; 242; 254; 257; 258 ⦖);
    260 :≡ (Const 268435457,[],NONE);
    261 :≡ (Mult,[260; 259],SOME ⦕ 0; 76; 242; 254; 259; 260 ⦖);
    262 :≡ (Const 272,[],NONE);
    263 :≡ (Add,[262; 261],SOME ⦕ 0; 76; 242; 254; 261; 262 ⦖);
    makespace 33 ⦕ 0; 76; 242; 254; 263 ⦖;
    264 :≡ (WordFromInt,[263],NONE);
    265 :≡ (Cons 3,[264],NONE);
    266 :≡ (Cons 3,[265; 254],NONE);
    267 :≡ (Cons 0,[],NONE);
    268 :≡ (Const 84,[],NONE);
    269 :≡ (Cons 0,[268; 267],NONE);
    270 :≡ (Cons 2,[269],NONE);
    271 :≡ (Cons 4,[270; 266],NONE);
    272 :≡ (Cons 0,[],NONE);
    273 :≡ (Const 116,[],NONE);
    274 :≡ (Cons 0,[273; 272],NONE);
    275 :≡ (Const 115,[],NONE);
    276 :≡ (Cons 0,[275; 274],NONE);
    277 :≡ (Const 111,[],NONE);
    278 :≡ (Cons 0,[277; 276],NONE);
    279 :≡ (Const 112,[],NONE);
    280 :≡ (Cons 0,[279; 278],NONE);
    281 :≡ (Const 116,[],NONE);
    282 :≡ (Cons 0,[281; 280],NONE);
    283 :≡ (Cons 2,[282],NONE);
    284 :≡ (Const 255,[],NONE);
    285 :≡ (Const 268435457,[],NONE);
    286 :≡ (Mult,[285; 284],SOME ⦕ 0; 76; 242; 271; 283; 284; 285 ⦖);
    287 :≡ (Const 268434929,[],NONE);
    288 :≡ (Add,[287; 286],SOME ⦕ 0; 76; 242; 271; 283; 286; 287 ⦖);
    289 :≡ (Const 268435457,[],NONE);
    290 :≡ (Mult,[289; 288],SOME ⦕ 0; 76; 242; 271; 283; 288; 289 ⦖);
    291 :≡ (Const 272,[],NONE);
    292 :≡ (Add,[291; 290],SOME ⦕ 0; 76; 242; 271; 283; 290; 291 ⦖);
    makespace 19 ⦕ 0; 76; 242; 271; 283; 292 ⦖;
    293 :≡ (WordFromInt,[292],NONE);
    294 :≡ (Cons 3,[293],NONE);
    295 :≡ (Cons 3,[294; 283],NONE);
    296 :≡ (Cons 0,[],NONE);
    297 :≡ (Const 84,[],NONE);
    298 :≡ (Cons 0,[297; 296],NONE);
    299 :≡ (Cons 2,[298],NONE);
    300 :≡ (Cons 4,[299; 295],NONE);
    301 :≡ (Cons 3,[300; 271],NONE);
    302 :≡ (Const 31,[],NONE);
    303 :≡ (Const 268435457,[],NONE);
    304 :≡ (Mult,[303; 302],SOME ⦕ 0; 76; 242; 301; 302; 303 ⦖);
    305 :≡ (Const 268435425,[],NONE);
    306 :≡ (Add,[305; 304],SOME ⦕ 0; 76; 242; 301; 304; 305 ⦖);
    makespace 16 ⦕ 0; 76; 242; 301; 306 ⦖;
    307 :≡ (WordFromInt,[306],NONE);
    308 :≡ (Cons 3,[307],NONE);
    309 :≡ (Cons 0,[],NONE);
    310 :≡ (Const 97,[],NONE);
    311 :≡ (Cons 0,[310; 309],NONE);
    312 :≡ (Cons 2,[311],NONE);
    313 :≡ (Cons 2,[312; 308],NONE);
    314 :≡ (Cons 3,[313; 301],NONE);
    315 :≡ (Const 159,[],NONE);
    316 :≡ (Const 268435457,[],NONE);
    317 :≡ (Mult,[316; 315],SOME ⦕ 0; 76; 242; 314; 315; 316 ⦖);
    318 :≡ (Const 268435297,[],NONE);
    319 :≡ (Add,[318; 317],SOME ⦕ 0; 76; 242; 314; 317; 318 ⦖);
    makespace 22 ⦕ 0; 76; 242; 314; 319 ⦖;
    320 :≡ (WordFromInt,[319],NONE);
    321 :≡ (Cons 3,[320],NONE);
    322 :≡ (Cons 0,[],NONE);
    323 :≡ (Const 116,[],NONE);
    324 :≡ (Cons 0,[323; 322],NONE);
    325 :≡ (Const 115,[],NONE);
    326 :≡ (Cons 0,[325; 324],NONE);
    327 :≡ (Const 111,[],NONE);
    328 :≡ (Cons 0,[327; 326],NONE);
    329 :≡ (Const 112,[],NONE);
    330 :≡ (Cons 0,[329; 328],NONE);
    331 :≡ (Const 116,[],NONE);
    332 :≡ (Cons 0,[331; 330],NONE);
    333 :≡ (Cons 2,[332],NONE);
    334 :≡ (Const 255,[],NONE);
    335 :≡ (Const 268435457,[],NONE);
    336 :≡ (Mult,[335; 334],SOME ⦕ 0; 76; 242; 314; 321; 333; 334; 335 ⦖);
    337 :≡ (Const 268434929,[],NONE);
    338 :≡ (Add,[337; 336],SOME ⦕ 0; 76; 242; 314; 321; 333; 336; 337 ⦖);
    339 :≡ (Const 268435457,[],NONE);
    340 :≡ (Mult,[339; 338],SOME ⦕ 0; 76; 242; 314; 321; 333; 338; 339 ⦖);
    341 :≡ (Const 272,[],NONE);
    342 :≡ (Add,[341; 340],SOME ⦕ 0; 76; 242; 314; 321; 333; 340; 341 ⦖);
    makespace 86 ⦕ 0; 76; 242; 314; 321; 333; 342 ⦖;
    343 :≡ (WordFromInt,[342],NONE);
    344 :≡ (Cons 3,[343],NONE);
    345 :≡ (Cons 3,[344; 333],NONE);
    346 :≡ (Cons 0,[],NONE);
    347 :≡ (Const 84,[],NONE);
    348 :≡ (Cons 0,[347; 346],NONE);
    349 :≡ (Cons 2,[348],NONE);
    350 :≡ (Cons 4,[349; 345],NONE);
    351 :≡ (Cons 0,[],NONE);
    352 :≡ (Const 116,[],NONE);
    353 :≡ (Cons 0,[352; 351],NONE);
    354 :≡ (Const 115,[],NONE);
    355 :≡ (Cons 0,[354; 353],NONE);
    356 :≡ (Const 111,[],NONE);
    357 :≡ (Cons 0,[356; 355],NONE);
    358 :≡ (Const 112,[],NONE);
    359 :≡ (Cons 0,[358; 357],NONE);
    360 :≡ (Const 118,[],NONE);
    361 :≡ (Cons 0,[360; 359],NONE);
    362 :≡ (Cons 2,[361],NONE);
    363 :≡ (Cons 3,[362; 350],NONE);
    364 :≡ (Cons 3,[363; 321],NONE);
    365 :≡ (Cons 4,[364; 314],NONE);
    366 :≡ (Cons 4,[365; 242],NONE);
    367 :≡ (Cons 0,[],NONE);
    368 :≡ (Const 107,[],NONE);
    369 :≡ (Cons 0,[368; 367],NONE);
    370 :≡ (Cons 2,[369],NONE);
    371 :≡ (Cons 0,[],NONE);
    372 :≡ (Const 107,[],NONE);
    373 :≡ (Cons 0,[372; 371],NONE);
    374 :≡ (Cons 2,[373],NONE);
    375 :≡ (Cons 3,[374; 370],NONE);
    376 :≡ (Cons 0,[],NONE);
    377 :≡ (Const 115,[],NONE);
    378 :≡ (Cons 0,[377; 376],NONE);
    379 :≡ (Const 112,[],NONE);
    380 :≡ (Cons 0,[379; 378],NONE);
    381 :≡ (Const 101,[],NONE);
    382 :≡ (Cons 0,[381; 380],NONE);
    383 :≡ (Cons 2,[382],NONE);
    384 :≡ (Cons 0,[],NONE);
    385 :≡ (Const 115,[],NONE);
    386 :≡ (Cons 0,[385; 384],NONE);
    387 :≡ (Const 112,[],NONE);
    388 :≡ (Cons 0,[387; 386],NONE);
    389 :≡ (Const 101,[],NONE);
    390 :≡ (Cons 0,[389; 388],NONE);
    391 :≡ (Cons 2,[390],NONE);
    392 :≡ (Cons 3,[391; 383],NONE);
    393 :≡ (Cons 3,[392; 375],NONE);
    394 :≡ (Const 1599,[],NONE);
    395 :≡ (Const 268435457,[],NONE);
    396 :≡ (Mult,[395; 394],SOME ⦕ 0; 76; 366; 393; 394; 395 ⦖);
    397 :≡ (Const 268433857,[],NONE);
    398 :≡ (Add,[397; 396],SOME ⦕ 0; 76; 366; 393; 396; 397 ⦖);
    makespace 5 ⦕ 0; 76; 366; 393; 398 ⦖;
    399 :≡ (WordFromInt,[398],NONE);
    400 :≡ (Cons 3,[399],NONE);
    401 :≡ (Const 15,[],NONE);
    402 :≡ (Const 268435457,[],NONE);
    403 :≡ (Mult,[402; 401],SOME ⦕ 0; 76; 366; 393; 400; 401; 402 ⦖);
    404 :≡ (Const 268435441,[],NONE);
    405 :≡ (Add,[404; 403],SOME ⦕ 0; 76; 366; 393; 400; 403; 404 ⦖);
    makespace 21 ⦕ 0; 76; 366; 393; 400; 405 ⦖;
    406 :≡ (WordFromInt,[405],NONE);
    407 :≡ (Cons 3,[406],NONE);
    408 :≡ (Cons 0,[],NONE);
    409 :≡ (Const 107,[],NONE);
    410 :≡ (Cons 0,[409; 408],NONE);
    411 :≡ (Cons 2,[410],NONE);
    412 :≡ (Cons 0,[],NONE);
    413 :≡ (Const 115,[],NONE);
    414 :≡ (Cons 0,[413; 412],NONE);
    415 :≡ (Const 112,[],NONE);
    416 :≡ (Cons 0,[415; 414],NONE);
    417 :≡ (Const 101,[],NONE);
    418 :≡ (Cons 0,[417; 416],NONE);
    419 :≡ (Cons 2,[418],NONE);
    420 :≡ (Const 31,[],NONE);
    421 :≡ (Const 268435457,[],NONE);
    422 :≡
    (Mult,[421; 420],SOME ⦕ 0; 76; 366; 393; 400; 407; 411; 419; 420; 421 ⦖);
    423 :≡ (Const 268435425,[],NONE);
    424 :≡
    (Add,[423; 422],SOME ⦕ 0; 76; 366; 393; 400; 407; 411; 419; 422; 423 ⦖);
    makespace 17 ⦕ 0; 76; 366; 393; 400; 407; 411; 419; 424 ⦖;
    425 :≡ (WordFromInt,[424],NONE);
    426 :≡ (Cons 3,[425],NONE);
    427 :≡ (Cons 3,[426; 419],NONE);
    428 :≡ (Cons 3,[427; 411],NONE);
    429 :≡ (Cons 3,[428; 407],NONE);
    430 :≡ (Cons 3,[429; 400],NONE);
    431 :≡ (Const 255,[],NONE);
    432 :≡ (Const 268435457,[],NONE);
    433 :≡ (Mult,[432; 431],SOME ⦕ 0; 76; 366; 393; 430; 431; 432 ⦖);
    434 :≡ (Const 268434929,[],NONE);
    435 :≡ (Add,[434; 433],SOME ⦕ 0; 76; 366; 393; 430; 433; 434 ⦖);
    436 :≡ (Const 268435457,[],NONE);
    437 :≡ (Mult,[436; 435],SOME ⦕ 0; 76; 366; 393; 430; 435; 436 ⦖);
    438 :≡ (Const 272,[],NONE);
    439 :≡ (Add,[438; 437],SOME ⦕ 0; 76; 366; 393; 430; 437; 438 ⦖);
    makespace 8 ⦕ 0; 76; 366; 393; 430; 439 ⦖;
    440 :≡ (WordFromInt,[439],NONE);
    441 :≡ (Cons 3,[440],NONE);
    442 :≡ (Cons 3,[441; 430],NONE);
    443 :≡ (Const 1599,[],NONE);
    444 :≡ (Const 268435457,[],NONE);
    445 :≡ (Mult,[444; 443],SOME ⦕ 0; 76; 366; 393; 442; 443; 444 ⦖);
    446 :≡ (Const 268433857,[],NONE);
    447 :≡ (Add,[446; 445],SOME ⦕ 0; 76; 366; 393; 442; 445; 446 ⦖);
    makespace 5 ⦕ 0; 76; 366; 393; 442; 447 ⦖;
    448 :≡ (WordFromInt,[447],NONE);
    449 :≡ (Cons 3,[448],NONE);
    450 :≡ (Const 15,[],NONE);
    451 :≡ (Const 268435457,[],NONE);
    452 :≡ (Mult,[451; 450],SOME ⦕ 0; 76; 366; 393; 442; 449; 450; 451 ⦖);
    453 :≡ (Const 268435441,[],NONE);
    454 :≡ (Add,[453; 452],SOME ⦕ 0; 76; 366; 393; 442; 449; 452; 453 ⦖);
    makespace 8 ⦕ 0; 76; 366; 393; 442; 449; 454 ⦖;
    455 :≡ (WordFromInt,[454],NONE);
    456 :≡ (Cons 3,[455],NONE);
    457 :≡ (Cons 3,[456; 449],NONE);
    458 :≡ (Const 1599,[],NONE);
    459 :≡ (Const 268435457,[],NONE);
    460 :≡ (Mult,[459; 458],SOME ⦕ 0; 76; 366; 393; 442; 457; 458; 459 ⦖);
    461 :≡ (Const 268433857,[],NONE);
    462 :≡ (Add,[461; 460],SOME ⦕ 0; 76; 366; 393; 442; 457; 460; 461 ⦖);
    makespace 5 ⦕ 0; 76; 366; 393; 442; 457; 462 ⦖;
    463 :≡ (WordFromInt,[462],NONE);
    464 :≡ (Cons 3,[463],NONE);
    465 :≡ (Const 15,[],NONE);
    466 :≡ (Const 268435457,[],NONE);
    467 :≡ (Mult,[466; 465],SOME ⦕ 0; 76; 366; 393; 442; 457; 464; 465; 466 ⦖);
    468 :≡ (Const 268435441,[],NONE);
    469 :≡ (Add,[468; 467],SOME ⦕ 0; 76; 366; 393; 442; 457; 464; 467; 468 ⦖);
    makespace 26 ⦕ 0; 76; 366; 393; 442; 457; 464; 469 ⦖;
    470 :≡ (WordFromInt,[469],NONE);
    471 :≡ (Cons 3,[470],NONE);
    472 :≡ (Cons 3,[471; 464],NONE);
    473 :≡ (Cons 3,[472; 457],NONE);
    474 :≡ (Cons 4,[473; 442],NONE);
    475 :≡ (Cons 4,[474; 393],NONE);
    476 :≡ (Cons 3,[475; 366],NONE);
    477 :≡ (Cons 3,[476; 76],NONE);
    478 :≡ (Cons 1,[477; 0],NONE);
    479 :≡ (Const 159,[],NONE);
    480 :≡ (Const 268435457,[],NONE);
    481 :≡ (Mult,[480; 479],SOME ⦕ 478; 479; 480 ⦖);
    482 :≡ (Const 268435297,[],NONE);
    483 :≡ (Add,[482; 481],SOME ⦕ 478; 481; 482 ⦖);
    makespace 5 ⦕ 478; 483 ⦖;
    484 :≡ (WordFromInt,[483],NONE);
    485 :≡ (Cons 3,[484],NONE);
    486 :≡ (Const 159,[],NONE);
    487 :≡ (Const 268435457,[],NONE);
    488 :≡ (Mult,[487; 486],SOME ⦕ 478; 485; 486; 487 ⦖);
    489 :≡ (Const 268435297,[],NONE);
    490 :≡ (Add,[489; 488],SOME ⦕ 478; 485; 488; 489 ⦖);
    makespace 8 ⦕ 478; 485; 490 ⦖;
    491 :≡ (WordFromInt,[490],NONE);
    492 :≡ (Cons 3,[491],NONE);
    493 :≡ (Cons 3,[492; 485],NONE);
    494 :≡ (Const 1599,[],NONE);
    495 :≡ (Const 268435457,[],NONE);
    496 :≡ (Mult,[495; 494],SOME ⦕ 478; 493; 494; 495 ⦖);
    497 :≡ (Const 268433857,[],NONE);
    498 :≡ (Add,[497; 496],SOME ⦕ 478; 493; 496; 497 ⦖);
    makespace 5 ⦕ 478; 493; 498 ⦖;
    499 :≡ (WordFromInt,[498],NONE);
    500 :≡ (Cons 3,[499],NONE);
    501 :≡ (Const 1599,[],NONE);
    502 :≡ (Const 268435457,[],NONE);
    503 :≡ (Mult,[502; 501],SOME ⦕ 478; 493; 500; 501; 502 ⦖);
    504 :≡ (Const 268433857,[],NONE);
    505 :≡ (Add,[504; 503],SOME ⦕ 478; 493; 500; 503; 504 ⦖);
    makespace 19 ⦕ 478; 493; 500; 505 ⦖;
    506 :≡ (WordFromInt,[505],NONE);
    507 :≡ (Cons 3,[506],NONE);
    508 :≡ (Cons 3,[507; 500],NONE);
    509 :≡ (Cons 0,[],NONE);
    510 :≡ (Const 115,[],NONE);
    511 :≡ (Cons 0,[510; 509],NONE);
    512 :≡ (Const 112,[],NONE);
    513 :≡ (Cons 0,[512; 511],NONE);
    514 :≡ (Const 101,[],NONE);
    515 :≡ (Cons 0,[514; 513],NONE);
    516 :≡ (Cons 2,[515],NONE);
    517 :≡ (Const 159,[],NONE);
    518 :≡ (Const 268435457,[],NONE);
    519 :≡ (Mult,[518; 517],SOME ⦕ 478; 493; 508; 516; 517; 518 ⦖);
    520 :≡ (Const 268435297,[],NONE);
    521 :≡ (Add,[520; 519],SOME ⦕ 478; 493; 508; 516; 519; 520 ⦖);
    makespace 8 ⦕ 478; 493; 508; 516; 521 ⦖;
    522 :≡ (WordFromInt,[521],NONE);
    523 :≡ (Cons 3,[522],NONE);
    524 :≡ (Cons 3,[523; 516],NONE);
    525 :≡ (Const 255,[],NONE);
    526 :≡ (Const 268435457,[],NONE);
    527 :≡ (Mult,[526; 525],SOME ⦕ 478; 493; 508; 524; 525; 526 ⦖);
    528 :≡ (Const 268434929,[],NONE);
    529 :≡ (Add,[528; 527],SOME ⦕ 478; 493; 508; 524; 527; 528 ⦖);
    530 :≡ (Const 268435457,[],NONE);
    531 :≡ (Mult,[530; 529],SOME ⦕ 478; 493; 508; 524; 529; 530 ⦖);
    532 :≡ (Const 272,[],NONE);
    533 :≡ (Add,[532; 531],SOME ⦕ 478; 493; 508; 524; 531; 532 ⦖);
    makespace 42 ⦕ 478; 493; 508; 524; 533 ⦖;
    534 :≡ (WordFromInt,[533],NONE);
    535 :≡ (Cons 3,[534],NONE);
    536 :≡ (Cons 3,[535; 524],NONE);
    537 :≡ (Cons 0,[],NONE);
    538 :≡ (Const 116,[],NONE);
    539 :≡ (Cons 0,[538; 537],NONE);
    540 :≡ (Const 115,[],NONE);
    541 :≡ (Cons 0,[540; 539],NONE);
    542 :≡ (Const 111,[],NONE);
    543 :≡ (Cons 0,[542; 541],NONE);
    544 :≡ (Const 112,[],NONE);
    545 :≡ (Cons 0,[544; 543],NONE);
    546 :≡ (Const 103,[],NONE);
    547 :≡ (Cons 0,[546; 545],NONE);
    548 :≡ (Const 120,[],NONE);
    549 :≡ (Cons 0,[548; 547],NONE);
    550 :≡ (Cons 2,[549],NONE);
    551 :≡ (Cons 4,[550; 536],NONE);
    552 :≡ (Cons 3,[551; 508],NONE);
    553 :≡ (Cons 3,[552; 493],NONE);
    554 :≡ (Cons 0,[],NONE);
    555 :≡ (Const 66,[],NONE);
    556 :≡ (Cons 0,[555; 554],NONE);
    557 :≡ (Cons 2,[556],NONE);
    558 :≡ (Const 31,[],NONE);
    559 :≡ (Const 268435457,[],NONE);
    560 :≡ (Mult,[559; 558],SOME ⦕ 478; 553; 557; 558; 559 ⦖);
    561 :≡ (Const 268435425,[],NONE);
    562 :≡ (Add,[561; 560],SOME ⦕ 478; 553; 557; 560; 561 ⦖);
    makespace 16 ⦕ 478; 553; 557; 562 ⦖;
    563 :≡ (WordFromInt,[562],NONE);
    564 :≡ (Cons 3,[563],NONE);
    565 :≡ (Cons 3,[564; 557],NONE);
    566 :≡ (Cons 0,[],NONE);
    567 :≡ (Const 104,[],NONE);
    568 :≡ (Cons 0,[567; 566],NONE);
    569 :≡ (Const 118,[],NONE);
    570 :≡ (Cons 0,[569; 568],NONE);
    571 :≡ (Cons 2,[570],NONE);
    572 :≡ (Const 159,[],NONE);
    573 :≡ (Const 268435457,[],NONE);
    574 :≡ (Mult,[573; 572],SOME ⦕ 478; 553; 565; 571; 572; 573 ⦖);
    575 :≡ (Const 268435297,[],NONE);
    576 :≡ (Add,[575; 574],SOME ⦕ 478; 553; 565; 571; 574; 575 ⦖);
    makespace 16 ⦕ 478; 553; 565; 571; 576 ⦖;
    577 :≡ (WordFromInt,[576],NONE);
    578 :≡ (Cons 3,[577],NONE);
    579 :≡ (Cons 3,[578; 571],NONE);
    580 :≡ (Cons 0,[],NONE);
    581 :≡ (Const 104,[],NONE);
    582 :≡ (Cons 0,[581; 580],NONE);
    583 :≡ (Const 118,[],NONE);
    584 :≡ (Cons 0,[583; 582],NONE);
    585 :≡ (Cons 2,[584],NONE);
    586 :≡ (Const 159,[],NONE);
    587 :≡ (Const 268435457,[],NONE);
    588 :≡ (Mult,[587; 586],SOME ⦕ 478; 553; 565; 579; 585; 586; 587 ⦖);
    589 :≡ (Const 268435297,[],NONE);
    590 :≡ (Add,[589; 588],SOME ⦕ 478; 553; 565; 579; 585; 588; 589 ⦖);
    makespace 11 ⦕ 478; 553; 565; 579; 585; 590 ⦖;
    591 :≡ (WordFromInt,[590],NONE);
    592 :≡ (Cons 3,[591],NONE);
    593 :≡ (Cons 3,[592; 585],NONE);
    594 :≡ (Cons 3,[593; 579],NONE);
    595 :≡ (Const 255,[],NONE);
    596 :≡ (Const 268435457,[],NONE);
    597 :≡ (Mult,[596; 595],SOME ⦕ 478; 553; 565; 594; 595; 596 ⦖);
    598 :≡ (Const 268434929,[],NONE);
    599 :≡ (Add,[598; 597],SOME ⦕ 478; 553; 565; 594; 597; 598 ⦖);
    600 :≡ (Const 268435457,[],NONE);
    601 :≡ (Mult,[600; 599],SOME ⦕ 478; 553; 565; 594; 599; 600 ⦖);
    602 :≡ (Const 272,[],NONE);
    603 :≡ (Add,[602; 601],SOME ⦕ 478; 553; 565; 594; 601; 602 ⦖);
    makespace 25 ⦕ 478; 553; 565; 594; 603 ⦖;
    604 :≡ (WordFromInt,[603],NONE);
    605 :≡ (Cons 3,[604],NONE);
    606 :≡ (Cons 3,[605; 594],NONE);
    607 :≡ (Cons 0,[],NONE);
    608 :≡ (Const 116,[],NONE);
    609 :≡ (Cons 0,[608; 607],NONE);
    610 :≡ (Const 115,[],NONE);
    611 :≡ (Cons 0,[610; 609],NONE);
    612 :≡ (Const 111,[],NONE);
    613 :≡ (Cons 0,[612; 611],NONE);
    614 :≡ (Const 112,[],NONE);
    615 :≡ (Cons 0,[614; 613],NONE);
    616 :≡ (Const 116,[],NONE);
    617 :≡ (Cons 0,[616; 615],NONE);
    618 :≡ (Cons 2,[617],NONE);
    619 :≡ (Const 255,[],NONE);
    620 :≡ (Const 268435457,[],NONE);
    621 :≡ (Mult,[620; 619],SOME ⦕ 478; 553; 565; 606; 618; 619; 620 ⦖);
    622 :≡ (Const 268434929,[],NONE);
    623 :≡ (Add,[622; 621],SOME ⦕ 478; 553; 565; 606; 618; 621; 622 ⦖);
    624 :≡ (Const 268435457,[],NONE);
    625 :≡ (Mult,[624; 623],SOME ⦕ 478; 553; 565; 606; 618; 623; 624 ⦖);
    626 :≡ (Const 272,[],NONE);
    627 :≡ (Add,[626; 625],SOME ⦕ 478; 553; 565; 606; 618; 625; 626 ⦖);
    makespace 24 ⦕ 478; 553; 565; 606; 618; 627 ⦖;
    628 :≡ (WordFromInt,[627],NONE);
    629 :≡ (Cons 3,[628],NONE);
    630 :≡ (Cons 3,[629; 618],NONE);
    631 :≡ (Cons 0,[],NONE);
    632 :≡ (Const 84,[],NONE);
    633 :≡ (Cons 0,[632; 631],NONE);
    634 :≡ (Cons 2,[633],NONE);
    635 :≡ (Cons 4,[634; 630],NONE);
    636 :≡ (Cons 0,[],NONE);
    637 :≡ (Const 97,[],NONE);
    638 :≡ (Cons 0,[637; 636],NONE);
    639 :≡ (Cons 2,[638],NONE);
    640 :≡ (Cons 3,[639; 635],NONE);
    641 :≡ (Const 159,[],NONE);
    642 :≡ (Const 268435457,[],NONE);
    643 :≡ (Mult,[642; 641],SOME ⦕ 478; 553; 565; 606; 640; 641; 642 ⦖);
    644 :≡ (Const 268435297,[],NONE);
    645 :≡ (Add,[644; 643],SOME ⦕ 478; 553; 565; 606; 640; 643; 644 ⦖);
    makespace 45 ⦕ 478; 553; 565; 606; 640; 645 ⦖;
    646 :≡ (WordFromInt,[645],NONE);
    647 :≡ (Cons 3,[646],NONE);
    648 :≡ (Cons 0,[],NONE);
    649 :≡ (Const 116,[],NONE);
    650 :≡ (Cons 0,[649; 648],NONE);
    651 :≡ (Const 115,[],NONE);
    652 :≡ (Cons 0,[651; 650],NONE);
    653 :≡ (Const 111,[],NONE);
    654 :≡ (Cons 0,[653; 652],NONE);
    655 :≡ (Const 112,[],NONE);
    656 :≡ (Cons 0,[655; 654],NONE);
    657 :≡ (Const 118,[],NONE);
    658 :≡ (Cons 0,[657; 656],NONE);
    659 :≡ (Cons 2,[658],NONE);
    660 :≡ (Cons 3,[659; 647],NONE);
    661 :≡ (Cons 4,[660; 640],NONE);
    662 :≡ (Cons 0,[],NONE);
    663 :≡ (Const 116,[],NONE);
    664 :≡ (Cons 0,[663; 662],NONE);
    665 :≡ (Const 115,[],NONE);
    666 :≡ (Cons 0,[665; 664],NONE);
    667 :≡ (Const 111,[],NONE);
    668 :≡ (Cons 0,[667; 666],NONE);
    669 :≡ (Const 112,[],NONE);
    670 :≡ (Cons 0,[669; 668],NONE);
    671 :≡ (Const 116,[],NONE);
    672 :≡ (Cons 0,[671; 670],NONE);
    673 :≡ (Cons 2,[672],NONE);
    674 :≡ (Const 255,[],NONE);
    675 :≡ (Const 268435457,[],NONE);
    676 :≡ (Mult,[675; 674],SOME ⦕ 478; 553; 565; 606; 661; 673; 674; 675 ⦖);
    677 :≡ (Const 268434929,[],NONE);
    678 :≡ (Add,[677; 676],SOME ⦕ 478; 553; 565; 606; 661; 673; 676; 677 ⦖);
    679 :≡ (Const 268435457,[],NONE);
    680 :≡ (Mult,[679; 678],SOME ⦕ 478; 553; 565; 606; 661; 673; 678; 679 ⦖);
    681 :≡ (Const 272,[],NONE);
    682 :≡ (Add,[681; 680],SOME ⦕ 478; 553; 565; 606; 661; 673; 680; 681 ⦖);
    makespace 24 ⦕ 478; 553; 565; 606; 661; 673; 682 ⦖;
    683 :≡ (WordFromInt,[682],NONE);
    684 :≡ (Cons 3,[683],NONE);
    685 :≡ (Cons 3,[684; 673],NONE);
    686 :≡ (Cons 0,[],NONE);
    687 :≡ (Const 84,[],NONE);
    688 :≡ (Cons 0,[687; 686],NONE);
    689 :≡ (Cons 2,[688],NONE);
    690 :≡ (Cons 4,[689; 685],NONE);
    691 :≡ (Cons 0,[],NONE);
    692 :≡ (Const 97,[],NONE);
    693 :≡ (Cons 0,[692; 691],NONE);
    694 :≡ (Cons 2,[693],NONE);
    695 :≡ (Cons 3,[694; 690],NONE);
    696 :≡ (Const 159,[],NONE);
    697 :≡ (Const 268435457,[],NONE);
    698 :≡ (Mult,[697; 696],SOME ⦕ 478; 553; 565; 606; 661; 695; 696; 697 ⦖);
    699 :≡ (Const 268435297,[],NONE);
    700 :≡ (Add,[699; 698],SOME ⦕ 478; 553; 565; 606; 661; 695; 698; 699 ⦖);
    makespace 54 ⦕ 478; 553; 565; 606; 661; 695; 700 ⦖;
    701 :≡ (WordFromInt,[700],NONE);
    702 :≡ (Cons 3,[701],NONE);
    703 :≡ (Cons 0,[],NONE);
    704 :≡ (Const 116,[],NONE);
    705 :≡ (Cons 0,[704; 703],NONE);
    706 :≡ (Const 115,[],NONE);
    707 :≡ (Cons 0,[706; 705],NONE);
    708 :≡ (Const 111,[],NONE);
    709 :≡ (Cons 0,[708; 707],NONE);
    710 :≡ (Const 112,[],NONE);
    711 :≡ (Cons 0,[710; 709],NONE);
    712 :≡ (Const 118,[],NONE);
    713 :≡ (Cons 0,[712; 711],NONE);
    714 :≡ (Cons 2,[713],NONE);
    715 :≡ (Cons 3,[714; 702],NONE);
    716 :≡ (Cons 4,[715; 695],NONE);
    717 :≡ (Cons 3,[716; 661],NONE);
    718 :≡ (Cons 4,[717; 606],NONE);
    719 :≡ (Cons 2,[718; 565],NONE);
    720 :≡ (Cons 0,[],NONE);
    721 :≡ (Const 116,[],NONE);
    722 :≡ (Cons 0,[721; 720],NONE);
    723 :≡ (Const 115,[],NONE);
    724 :≡ (Cons 0,[723; 722],NONE);
    725 :≡ (Const 111,[],NONE);
    726 :≡ (Cons 0,[725; 724],NONE);
    727 :≡ (Const 112,[],NONE);
    728 :≡ (Cons 0,[727; 726],NONE);
    729 :≡ (Const 116,[],NONE);
    730 :≡ (Cons 0,[729; 728],NONE);
    731 :≡ (Cons 2,[730],NONE);
    732 :≡ (Const 255,[],NONE);
    733 :≡ (Const 268435457,[],NONE);
    734 :≡ (Mult,[733; 732],SOME ⦕ 478; 553; 719; 731; 732; 733 ⦖);
    735 :≡ (Const 268434929,[],NONE);
    736 :≡ (Add,[735; 734],SOME ⦕ 478; 553; 719; 731; 734; 735 ⦖);
    737 :≡ (Const 268435457,[],NONE);
    738 :≡ (Mult,[737; 736],SOME ⦕ 478; 553; 719; 731; 736; 737 ⦖);
    739 :≡ (Const 272,[],NONE);
    740 :≡ (Add,[739; 738],SOME ⦕ 478; 553; 719; 731; 738; 739 ⦖);
    makespace 33 ⦕ 478; 553; 719; 731; 740 ⦖;
    741 :≡ (WordFromInt,[740],NONE);
    742 :≡ (Cons 3,[741],NONE);
    743 :≡ (Cons 3,[742; 731],NONE);
    744 :≡ (Cons 0,[],NONE);
    745 :≡ (Const 84,[],NONE);
    746 :≡ (Cons 0,[745; 744],NONE);
    747 :≡ (Cons 2,[746],NONE);
    748 :≡ (Cons 4,[747; 743],NONE);
    749 :≡ (Cons 0,[],NONE);
    750 :≡ (Const 116,[],NONE);
    751 :≡ (Cons 0,[750; 749],NONE);
    752 :≡ (Const 115,[],NONE);
    753 :≡ (Cons 0,[752; 751],NONE);
    754 :≡ (Const 111,[],NONE);
    755 :≡ (Cons 0,[754; 753],NONE);
    756 :≡ (Const 112,[],NONE);
    757 :≡ (Cons 0,[756; 755],NONE);
    758 :≡ (Const 116,[],NONE);
    759 :≡ (Cons 0,[758; 757],NONE);
    760 :≡ (Cons 2,[759],NONE);
    761 :≡ (Const 255,[],NONE);
    762 :≡ (Const 268435457,[],NONE);
    763 :≡ (Mult,[762; 761],SOME ⦕ 478; 553; 719; 748; 760; 761; 762 ⦖);
    764 :≡ (Const 268434929,[],NONE);
    765 :≡ (Add,[764; 763],SOME ⦕ 478; 553; 719; 748; 760; 763; 764 ⦖);
    766 :≡ (Const 268435457,[],NONE);
    767 :≡ (Mult,[766; 765],SOME ⦕ 478; 553; 719; 748; 760; 765; 766 ⦖);
    768 :≡ (Const 272,[],NONE);
    769 :≡ (Add,[768; 767],SOME ⦕ 478; 553; 719; 748; 760; 767; 768 ⦖);
    makespace 19 ⦕ 478; 553; 719; 748; 760; 769 ⦖;
    770 :≡ (WordFromInt,[769],NONE);
    771 :≡ (Cons 3,[770],NONE);
    772 :≡ (Cons 3,[771; 760],NONE);
    773 :≡ (Cons 0,[],NONE);
    774 :≡ (Const 84,[],NONE);
    775 :≡ (Cons 0,[774; 773],NONE);
    776 :≡ (Cons 2,[775],NONE);
    777 :≡ (Cons 4,[776; 772],NONE);
    778 :≡ (Cons 3,[777; 748],NONE);
    779 :≡ (Const 31,[],NONE);
    780 :≡ (Const 268435457,[],NONE);
    781 :≡ (Mult,[780; 779],SOME ⦕ 478; 553; 719; 778; 779; 780 ⦖);
    782 :≡ (Const 268435425,[],NONE);
    783 :≡ (Add,[782; 781],SOME ⦕ 478; 553; 719; 778; 781; 782 ⦖);
    makespace 16 ⦕ 478; 553; 719; 778; 783 ⦖;
    784 :≡ (WordFromInt,[783],NONE);
    785 :≡ (Cons 3,[784],NONE);
    786 :≡ (Cons 0,[],NONE);
    787 :≡ (Const 97,[],NONE);
    788 :≡ (Cons 0,[787; 786],NONE);
    789 :≡ (Cons 2,[788],NONE);
    790 :≡ (Cons 2,[789; 785],NONE);
    791 :≡ (Cons 3,[790; 778],NONE);
    792 :≡ (Const 159,[],NONE);
    793 :≡ (Const 268435457,[],NONE);
    794 :≡ (Mult,[793; 792],SOME ⦕ 478; 553; 719; 791; 792; 793 ⦖);
    795 :≡ (Const 268435297,[],NONE);
    796 :≡ (Add,[795; 794],SOME ⦕ 478; 553; 719; 791; 794; 795 ⦖);
    makespace 22 ⦕ 478; 553; 719; 791; 796 ⦖;
    797 :≡ (WordFromInt,[796],NONE);
    798 :≡ (Cons 3,[797],NONE);
    799 :≡ (Cons 0,[],NONE);
    800 :≡ (Const 116,[],NONE);
    801 :≡ (Cons 0,[800; 799],NONE);
    802 :≡ (Const 115,[],NONE);
    803 :≡ (Cons 0,[802; 801],NONE);
    804 :≡ (Const 111,[],NONE);
    805 :≡ (Cons 0,[804; 803],NONE);
    806 :≡ (Const 112,[],NONE);
    807 :≡ (Cons 0,[806; 805],NONE);
    808 :≡ (Const 116,[],NONE);
    809 :≡ (Cons 0,[808; 807],NONE);
    810 :≡ (Cons 2,[809],NONE);
    811 :≡ (Const 255,[],NONE);
    812 :≡ (Const 268435457,[],NONE);
    813 :≡ (Mult,[812; 811],SOME ⦕ 478; 553; 719; 791; 798; 810; 811; 812 ⦖);
    814 :≡ (Const 268434929,[],NONE);
    815 :≡ (Add,[814; 813],SOME ⦕ 478; 553; 719; 791; 798; 810; 813; 814 ⦖);
    816 :≡ (Const 268435457,[],NONE);
    817 :≡ (Mult,[816; 815],SOME ⦕ 478; 553; 719; 791; 798; 810; 815; 816 ⦖);
    818 :≡ (Const 272,[],NONE);
    819 :≡ (Add,[818; 817],SOME ⦕ 478; 553; 719; 791; 798; 810; 817; 818 ⦖);
    makespace 86 ⦕ 478; 553; 719; 791; 798; 810; 819 ⦖;
    820 :≡ (WordFromInt,[819],NONE);
    821 :≡ (Cons 3,[820],NONE);
    822 :≡ (Cons 3,[821; 810],NONE);
    823 :≡ (Cons 0,[],NONE);
    824 :≡ (Const 84,[],NONE);
    825 :≡ (Cons 0,[824; 823],NONE);
    826 :≡ (Cons 2,[825],NONE);
    827 :≡ (Cons 4,[826; 822],NONE);
    828 :≡ (Cons 0,[],NONE);
    829 :≡ (Const 116,[],NONE);
    830 :≡ (Cons 0,[829; 828],NONE);
    831 :≡ (Const 115,[],NONE);
    832 :≡ (Cons 0,[831; 830],NONE);
    833 :≡ (Const 111,[],NONE);
    834 :≡ (Cons 0,[833; 832],NONE);
    835 :≡ (Const 112,[],NONE);
    836 :≡ (Cons 0,[835; 834],NONE);
    837 :≡ (Const 118,[],NONE);
    838 :≡ (Cons 0,[837; 836],NONE);
    839 :≡ (Cons 2,[838],NONE);
    840 :≡ (Cons 3,[839; 827],NONE);
    841 :≡ (Cons 3,[840; 798],NONE);
    842 :≡ (Cons 4,[841; 791],NONE);
    843 :≡ (Cons 4,[842; 719],NONE);
    844 :≡ (Cons 0,[],NONE);
    845 :≡ (Const 107,[],NONE);
    846 :≡ (Cons 0,[845; 844],NONE);
    847 :≡ (Cons 2,[846],NONE);
    848 :≡ (Cons 0,[],NONE);
    849 :≡ (Const 107,[],NONE);
    850 :≡ (Cons 0,[849; 848],NONE);
    851 :≡ (Cons 2,[850],NONE);
    852 :≡ (Cons 3,[851; 847],NONE);
    853 :≡ (Cons 0,[],NONE);
    854 :≡ (Const 115,[],NONE);
    855 :≡ (Cons 0,[854; 853],NONE);
    856 :≡ (Const 112,[],NONE);
    857 :≡ (Cons 0,[856; 855],NONE);
    858 :≡ (Const 101,[],NONE);
    859 :≡ (Cons 0,[858; 857],NONE);
    860 :≡ (Cons 2,[859],NONE);
    861 :≡ (Cons 0,[],NONE);
    862 :≡ (Const 115,[],NONE);
    863 :≡ (Cons 0,[862; 861],NONE);
    864 :≡ (Const 112,[],NONE);
    865 :≡ (Cons 0,[864; 863],NONE);
    866 :≡ (Const 101,[],NONE);
    867 :≡ (Cons 0,[866; 865],NONE);
    868 :≡ (Cons 2,[867],NONE);
    869 :≡ (Cons 3,[868; 860],NONE);
    870 :≡ (Cons 3,[869; 852],NONE);
    871 :≡ (Const 1599,[],NONE);
    872 :≡ (Const 268435457,[],NONE);
    873 :≡ (Mult,[872; 871],SOME ⦕ 478; 553; 843; 870; 871; 872 ⦖);
    874 :≡ (Const 268433857,[],NONE);
    875 :≡ (Add,[874; 873],SOME ⦕ 478; 553; 843; 870; 873; 874 ⦖);
    makespace 5 ⦕ 478; 553; 843; 870; 875 ⦖;
    876 :≡ (WordFromInt,[875],NONE);
    877 :≡ (Cons 3,[876],NONE);
    878 :≡ (Const 15,[],NONE);
    879 :≡ (Const 268435457,[],NONE);
    880 :≡ (Mult,[879; 878],SOME ⦕ 478; 553; 843; 870; 877; 878; 879 ⦖);
    881 :≡ (Const 268435441,[],NONE);
    882 :≡ (Add,[881; 880],SOME ⦕ 478; 553; 843; 870; 877; 880; 881 ⦖);
    makespace 21 ⦕ 478; 553; 843; 870; 877; 882 ⦖;
    883 :≡ (WordFromInt,[882],NONE);
    884 :≡ (Cons 3,[883],NONE);
    885 :≡ (Cons 0,[],NONE);
    886 :≡ (Const 107,[],NONE);
    887 :≡ (Cons 0,[886; 885],NONE);
    888 :≡ (Cons 2,[887],NONE);
    889 :≡ (Cons 0,[],NONE);
    890 :≡ (Const 115,[],NONE);
    891 :≡ (Cons 0,[890; 889],NONE);
    892 :≡ (Const 112,[],NONE);
    893 :≡ (Cons 0,[892; 891],NONE);
    894 :≡ (Const 101,[],NONE);
    895 :≡ (Cons 0,[894; 893],NONE);
    896 :≡ (Cons 2,[895],NONE);
    897 :≡ (Const 31,[],NONE);
    898 :≡ (Const 268435457,[],NONE);
    899 :≡
    (Mult,[898; 897],SOME ⦕ 478; 553; 843; 870; 877; 884; 888; 896; 897; 898 ⦖);
    900 :≡ (Const 268435425,[],NONE);
    901 :≡
    (Add,[900; 899],SOME ⦕ 478; 553; 843; 870; 877; 884; 888; 896; 899; 900 ⦖);
    makespace 17 ⦕ 478; 553; 843; 870; 877; 884; 888; 896; 901 ⦖;
    902 :≡ (WordFromInt,[901],NONE);
    903 :≡ (Cons 3,[902],NONE);
    904 :≡ (Cons 3,[903; 896],NONE);
    905 :≡ (Cons 3,[904; 888],NONE);
    906 :≡ (Cons 3,[905; 884],NONE);
    907 :≡ (Cons 3,[906; 877],NONE);
    908 :≡ (Const 1599,[],NONE);
    909 :≡ (Const 268435457,[],NONE);
    910 :≡ (Mult,[909; 908],SOME ⦕ 478; 553; 843; 870; 907; 908; 909 ⦖);
    911 :≡ (Const 268433857,[],NONE);
    912 :≡ (Add,[911; 910],SOME ⦕ 478; 553; 843; 870; 907; 910; 911 ⦖);
    makespace 5 ⦕ 478; 553; 843; 870; 907; 912 ⦖;
    913 :≡ (WordFromInt,[912],NONE);
    914 :≡ (Cons 3,[913],NONE);
    915 :≡ (Const 15,[],NONE);
    916 :≡ (Const 268435457,[],NONE);
    917 :≡ (Mult,[916; 915],SOME ⦕ 478; 553; 843; 870; 907; 914; 915; 916 ⦖);
    918 :≡ (Const 268435441,[],NONE);
    919 :≡ (Add,[918; 917],SOME ⦕ 478; 553; 843; 870; 907; 914; 917; 918 ⦖);
    makespace 8 ⦕ 478; 553; 843; 870; 907; 914; 919 ⦖;
    920 :≡ (WordFromInt,[919],NONE);
    921 :≡ (Cons 3,[920],NONE);
    922 :≡ (Cons 3,[921; 914],NONE);
    923 :≡ (Const 1599,[],NONE);
    924 :≡ (Const 268435457,[],NONE);
    925 :≡ (Mult,[924; 923],SOME ⦕ 478; 553; 843; 870; 907; 922; 923; 924 ⦖);
    926 :≡ (Const 268433857,[],NONE);
    927 :≡ (Add,[926; 925],SOME ⦕ 478; 553; 843; 870; 907; 922; 925; 926 ⦖);
    makespace 5 ⦕ 478; 553; 843; 870; 907; 922; 927 ⦖;
    928 :≡ (WordFromInt,[927],NONE);
    929 :≡ (Cons 3,[928],NONE);
    930 :≡ (Const 15,[],NONE);
    931 :≡ (Const 268435457,[],NONE);
    932 :≡
    (Mult,[931; 930],SOME ⦕ 478; 553; 843; 870; 907; 922; 929; 930; 931 ⦖);
    933 :≡ (Const 268435441,[],NONE);
    934 :≡
    (Add,[933; 932],SOME ⦕ 478; 553; 843; 870; 907; 922; 929; 932; 933 ⦖);
    makespace 56 ⦕ 478; 553; 843; 870; 907; 922; 929; 934 ⦖;
    935 :≡ (WordFromInt,[934],NONE);
    936 :≡ (Cons 3,[935],NONE);
    937 :≡ (Cons 3,[936; 929],NONE);
    938 :≡ (Cons 3,[937; 922],NONE);
    939 :≡ (Cons 4,[938; 907],NONE);
    940 :≡ (Cons 4,[939; 870],NONE);
    941 :≡ (Cons 3,[940; 843],NONE);
    942 :≡ (Cons 3,[941; 553],NONE);
    943 :≡ (Cons 1,[942; 478],NONE);
    944 :≡ (Cons 0,[],NONE);
    945 :≡ (Const 116,[],NONE);
    946 :≡ (Cons 0,[945; 944],NONE);
    947 :≡ (Const 115,[],NONE);
    948 :≡ (Cons 0,[947; 946],NONE);
    949 :≡ (Const 111,[],NONE);
    950 :≡ (Cons 0,[949; 948],NONE);
    951 :≡ (Const 112,[],NONE);
    952 :≡ (Cons 0,[951; 950],NONE);
    953 :≡ (Const 116,[],NONE);
    954 :≡ (Cons 0,[953; 952],NONE);
    955 :≡ (Cons 2,[954],NONE);
    956 :≡ (Cons 0,[],NONE);
    957 :≡ (Const 97,[],NONE);
    958 :≡ (Cons 0,[957; 956],NONE);
    959 :≡ (Cons 2,[958],NONE);
    960 :≡ (Cons 3,[959; 955],NONE);
    961 :≡ (Cons 0,[],NONE);
    962 :≡ (Const 118,[],NONE);
    963 :≡ (Cons 0,[962; 961],NONE);
    964 :≡ (Cons 2,[963],NONE);
    965 :≡ (Const 159,[],NONE);
    966 :≡ (Const 268435457,[],NONE);
    967 :≡ (Mult,[966; 965],SOME ⦕ 943; 960; 964; 965; 966 ⦖);
    968 :≡ (Const 268435297,[],NONE);
    969 :≡ (Add,[968; 967],SOME ⦕ 943; 960; 964; 967; 968 ⦖);
    makespace 28 ⦕ 943; 960; 964; 969 ⦖;
    970 :≡ (WordFromInt,[969],NONE);
    971 :≡ (Cons 3,[970],NONE);
    972 :≡ (Cons 3,[971; 964],NONE);
    973 :≡ (Cons 4,[972; 960],NONE);
    974 :≡ (Cons 0,[],NONE);
    975 :≡ (Const 116,[],NONE);
    976 :≡ (Cons 0,[975; 974],NONE);
    977 :≡ (Const 115,[],NONE);
    978 :≡ (Cons 0,[977; 976],NONE);
    979 :≡ (Const 111,[],NONE);
    980 :≡ (Cons 0,[979; 978],NONE);
    981 :≡ (Const 112,[],NONE);
    982 :≡ (Cons 0,[981; 980],NONE);
    983 :≡ (Const 118,[],NONE);
    984 :≡ (Cons 0,[983; 982],NONE);
    985 :≡ (Cons 2,[984],NONE);
    986 :≡ (Const 159,[],NONE);
    987 :≡ (Const 268435457,[],NONE);
    988 :≡ (Mult,[987; 986],SOME ⦕ 943; 973; 985; 986; 987 ⦖);
    989 :≡ (Const 268435297,[],NONE);
    990 :≡ (Add,[989; 988],SOME ⦕ 943; 973; 985; 988; 989 ⦖);
    makespace 45 ⦕ 943; 973; 985; 990 ⦖;
    991 :≡ (WordFromInt,[990],NONE);
    992 :≡ (Cons 3,[991],NONE);
    993 :≡ (Cons 3,[992; 985],NONE);
    994 :≡ (Cons 3,[993; 973],NONE);
    995 :≡ (Cons 1,[994; 943],NONE);
    996 :≡ (Cons 0,[],NONE);
    997 :≡ (Const 104,[],NONE);
    998 :≡ (Cons 0,[997; 996],NONE);
    999 :≡ (Const 118,[],NONE);
    1000 :≡ (Cons 0,[999; 998],NONE);
    1001 :≡ (Cons 2,[1000],NONE);
    1002 :≡ (Cons 0,[],NONE);
    1003 :≡ (Const 116,[],NONE);
    1004 :≡ (Cons 0,[1003; 1002],NONE);
    1005 :≡ (Const 115,[],NONE);
    1006 :≡ (Cons 0,[1005; 1004],NONE);
    1007 :≡ (Const 111,[],NONE);
    1008 :≡ (Cons 0,[1007; 1006],NONE);
    1009 :≡ (Const 112,[],NONE);
    1010 :≡ (Cons 0,[1009; 1008],NONE);
    1011 :≡ (Const 118,[],NONE);
    1012 :≡ (Cons 0,[1011; 1010],NONE);
    1013 :≡ (Cons 2,[1012],NONE);
    1014 :≡ (Cons 3,[1013; 1001],NONE);
    1015 :≡ (Cons 1,[1014; 995],NONE);
    1016 :≡ (Const 159,[],NONE);
    1017 :≡ (Const 268435457,[],NONE);
    1018 :≡ (Mult,[1017; 1016],SOME ⦕ 1015; 1016; 1017 ⦖);
    1019 :≡ (Const 268435297,[],NONE);
    1020 :≡ (Add,[1019; 1018],SOME ⦕ 1015; 1018; 1019 ⦖);
    makespace 5 ⦕ 1015; 1020 ⦖;
    1021 :≡ (WordFromInt,[1020],NONE);
    1022 :≡ (Cons 3,[1021],NONE);
    1023 :≡ (Const 159,[],NONE);
    1024 :≡ (Const 268435457,[],NONE);
    1025 :≡ (Mult,[1024; 1023],SOME ⦕ 1015; 1022; 1023; 1024 ⦖);
    1026 :≡ (Const 268435297,[],NONE);
    1027 :≡ (Add,[1026; 1025],SOME ⦕ 1015; 1022; 1025; 1026 ⦖);
    makespace 19 ⦕ 1015; 1022; 1027 ⦖;
    1028 :≡ (WordFromInt,[1027],NONE);
    1029 :≡ (Cons 3,[1028],NONE);
    1030 :≡ (Cons 3,[1029; 1022],NONE);
    1031 :≡ (Cons 0,[],NONE);
    1032 :≡ (Const 115,[],NONE);
    1033 :≡ (Cons 0,[1032; 1031],NONE);
    1034 :≡ (Const 112,[],NONE);
    1035 :≡ (Cons 0,[1034; 1033],NONE);
    1036 :≡ (Const 101,[],NONE);
    1037 :≡ (Cons 0,[1036; 1035],NONE);
    1038 :≡ (Cons 2,[1037],NONE);
    1039 :≡ (Const 1599,[],NONE);
    1040 :≡ (Const 268435457,[],NONE);
    1041 :≡ (Mult,[1040; 1039],SOME ⦕ 1015; 1030; 1038; 1039; 1040 ⦖);
    1042 :≡ (Const 268433857,[],NONE);
    1043 :≡ (Add,[1042; 1041],SOME ⦕ 1015; 1030; 1038; 1041; 1042 ⦖);
    makespace 5 ⦕ 1015; 1030; 1038; 1043 ⦖;
    1044 :≡ (WordFromInt,[1043],NONE);
    1045 :≡ (Cons 3,[1044],NONE);
    1046 :≡ (Const 31,[],NONE);
    1047 :≡ (Const 268435457,[],NONE);
    1048 :≡ (Mult,[1047; 1046],SOME ⦕ 1015; 1030; 1038; 1045; 1046; 1047 ⦖);
    1049 :≡ (Const 268435425,[],NONE);
    1050 :≡ (Add,[1049; 1048],SOME ⦕ 1015; 1030; 1038; 1045; 1048; 1049 ⦖);
    makespace 50 ⦕ 1015; 1030; 1038; 1045; 1050 ⦖;
    1051 :≡ (WordFromInt,[1050],NONE);
    1052 :≡ (Cons 3,[1051],NONE);
    1053 :≡ (Cons 3,[1052; 1045],NONE);
    1054 :≡ (Cons 3,[1053; 1038],NONE);
    1055 :≡ (Cons 0,[],NONE);
    1056 :≡ (Const 115,[],NONE);
    1057 :≡ (Cons 0,[1056; 1055],NONE);
    1058 :≡ (Const 112,[],NONE);
    1059 :≡ (Cons 0,[1058; 1057],NONE);
    1060 :≡ (Const 101,[],NONE);
    1061 :≡ (Cons 0,[1060; 1059],NONE);
    1062 :≡ (Cons 2,[1061],NONE);
    1063 :≡ (Cons 0,[],NONE);
    1064 :≡ (Const 115,[],NONE);
    1065 :≡ (Cons 0,[1064; 1063],NONE);
    1066 :≡ (Const 112,[],NONE);
    1067 :≡ (Cons 0,[1066; 1065],NONE);
    1068 :≡ (Const 101,[],NONE);
    1069 :≡ (Cons 0,[1068; 1067],NONE);
    1070 :≡ (Cons 2,[1069],NONE);
    1071 :≡ (Cons 3,[1070; 1062],NONE);
    1072 :≡ (Cons 0,[],NONE);
    1073 :≡ (Const 107,[],NONE);
    1074 :≡ (Cons 0,[1073; 1072],NONE);
    1075 :≡ (Cons 2,[1074],NONE);
    1076 :≡ (Cons 3,[1075; 1071],NONE);
    1077 :≡ (Cons 4,[1076; 1054],NONE);
    1078 :≡ (Cons 3,[1077; 1030],NONE);
    1079 :≡ (Const 159,[],NONE);
    1080 :≡ (Const 268435457,[],NONE);
    1081 :≡ (Mult,[1080; 1079],SOME ⦕ 1015; 1078; 1079; 1080 ⦖);
    1082 :≡ (Const 268435297,[],NONE);
    1083 :≡ (Add,[1082; 1081],SOME ⦕ 1015; 1078; 1081; 1082 ⦖);
    makespace 5 ⦕ 1015; 1078; 1083 ⦖;
    1084 :≡ (WordFromInt,[1083],NONE);
    1085 :≡ (Cons 3,[1084],NONE);
    1086 :≡ (Const 1599,[],NONE);
    1087 :≡ (Const 268435457,[],NONE);
    1088 :≡ (Mult,[1087; 1086],SOME ⦕ 1015; 1078; 1085; 1086; 1087 ⦖);
    1089 :≡ (Const 268433857,[],NONE);
    1090 :≡ (Add,[1089; 1088],SOME ⦕ 1015; 1078; 1085; 1088; 1089 ⦖);
    makespace 25 ⦕ 1015; 1078; 1085; 1090 ⦖;
    1091 :≡ (WordFromInt,[1090],NONE);
    1092 :≡ (Cons 3,[1091],NONE);
    1093 :≡ (Cons 0,[],NONE);
    1094 :≡ (Const 116,[],NONE);
    1095 :≡ (Cons 0,[1094; 1093],NONE);
    1096 :≡ (Const 115,[],NONE);
    1097 :≡ (Cons 0,[1096; 1095],NONE);
    1098 :≡ (Const 111,[],NONE);
    1099 :≡ (Cons 0,[1098; 1097],NONE);
    1100 :≡ (Const 112,[],NONE);
    1101 :≡ (Cons 0,[1100; 1099],NONE);
    1102 :≡ (Const 103,[],NONE);
    1103 :≡ (Cons 0,[1102; 1101],NONE);
    1104 :≡ (Const 120,[],NONE);
    1105 :≡ (Cons 0,[1104; 1103],NONE);
    1106 :≡ (Cons 2,[1105],NONE);
    1107 :≡ (Const 31,[],NONE);
    1108 :≡ (Const 268435457,[],NONE);
    1109 :≡
    (Mult,[1108; 1107],SOME ⦕ 1015; 1078; 1085; 1092; 1106; 1107; 1108 ⦖);
    1110 :≡ (Const 268435425,[],NONE);
    1111 :≡
    (Add,[1110; 1109],SOME ⦕ 1015; 1078; 1085; 1092; 1106; 1109; 1110 ⦖);
    makespace 14 ⦕ 1015; 1078; 1085; 1092; 1106; 1111 ⦖;
    1112 :≡ (WordFromInt,[1111],NONE);
    1113 :≡ (Cons 3,[1112],NONE);
    1114 :≡ (Cons 3,[1113; 1106],NONE);
    1115 :≡ (Cons 3,[1114; 1092],NONE);
    1116 :≡ (Cons 3,[1115; 1085],NONE);
    1117 :≡ (Const 255,[],NONE);
    1118 :≡ (Const 268435457,[],NONE);
    1119 :≡ (Mult,[1118; 1117],SOME ⦕ 1015; 1078; 1116; 1117; 1118 ⦖);
    1120 :≡ (Const 268434929,[],NONE);
    1121 :≡ (Add,[1120; 1119],SOME ⦕ 1015; 1078; 1116; 1119; 1120 ⦖);
    1122 :≡ (Const 268435457,[],NONE);
    1123 :≡ (Mult,[1122; 1121],SOME ⦕ 1015; 1078; 1116; 1121; 1122 ⦖);
    1124 :≡ (Const 272,[],NONE);
    1125 :≡ (Add,[1124; 1123],SOME ⦕ 1015; 1078; 1116; 1123; 1124 ⦖);
    makespace 114 ⦕ 1015; 1078; 1116; 1125 ⦖;
    1126 :≡ (WordFromInt,[1125],NONE);
    1127 :≡ (Cons 3,[1126],NONE);
    1128 :≡ (Cons 3,[1127; 1116],NONE);
    1129 :≡ (Cons 0,[],NONE);
    1130 :≡ (Const 116,[],NONE);
    1131 :≡ (Cons 0,[1130; 1129],NONE);
    1132 :≡ (Const 115,[],NONE);
    1133 :≡ (Cons 0,[1132; 1131],NONE);
    1134 :≡ (Const 111,[],NONE);
    1135 :≡ (Cons 0,[1134; 1133],NONE);
    1136 :≡ (Const 112,[],NONE);
    1137 :≡ (Cons 0,[1136; 1135],NONE);
    1138 :≡ (Const 103,[],NONE);
    1139 :≡ (Cons 0,[1138; 1137],NONE);
    1140 :≡ (Const 121,[],NONE);
    1141 :≡ (Cons 0,[1140; 1139],NONE);
    1142 :≡ (Cons 2,[1141],NONE);
    1143 :≡ (Cons 0,[],NONE);
    1144 :≡ (Const 116,[],NONE);
    1145 :≡ (Cons 0,[1144; 1143],NONE);
    1146 :≡ (Const 115,[],NONE);
    1147 :≡ (Cons 0,[1146; 1145],NONE);
    1148 :≡ (Const 111,[],NONE);
    1149 :≡ (Cons 0,[1148; 1147],NONE);
    1150 :≡ (Const 112,[],NONE);
    1151 :≡ (Cons 0,[1150; 1149],NONE);
    1152 :≡ (Const 103,[],NONE);
    1153 :≡ (Cons 0,[1152; 1151],NONE);
    1154 :≡ (Const 121,[],NONE);
    1155 :≡ (Cons 0,[1154; 1153],NONE);
    1156 :≡ (Cons 2,[1155],NONE);
    1157 :≡ (Cons 3,[1156; 1142],NONE);
    1158 :≡ (Cons 0,[],NONE);
    1159 :≡ (Const 116,[],NONE);
    1160 :≡ (Cons 0,[1159; 1158],NONE);
    1161 :≡ (Const 115,[],NONE);
    1162 :≡ (Cons 0,[1161; 1160],NONE);
    1163 :≡ (Const 111,[],NONE);
    1164 :≡ (Cons 0,[1163; 1162],NONE);
    1165 :≡ (Const 112,[],NONE);
    1166 :≡ (Cons 0,[1165; 1164],NONE);
    1167 :≡ (Const 103,[],NONE);
    1168 :≡ (Cons 0,[1167; 1166],NONE);
    1169 :≡ (Const 120,[],NONE);
    1170 :≡ (Cons 0,[1169; 1168],NONE);
    1171 :≡ (Cons 2,[1170],NONE);
    1172 :≡ (Cons 0,[],NONE);
    1173 :≡ (Const 116,[],NONE);
    1174 :≡ (Cons 0,[1173; 1172],NONE);
    1175 :≡ (Const 115,[],NONE);
    1176 :≡ (Cons 0,[1175; 1174],NONE);
    1177 :≡ (Const 111,[],NONE);
    1178 :≡ (Cons 0,[1177; 1176],NONE);
    1179 :≡ (Const 112,[],NONE);
    1180 :≡ (Cons 0,[1179; 1178],NONE);
    1181 :≡ (Const 103,[],NONE);
    1182 :≡ (Cons 0,[1181; 1180],NONE);
    1183 :≡ (Const 120,[],NONE);
    1184 :≡ (Cons 0,[1183; 1182],NONE);
    1185 :≡ (Cons 2,[1184],NONE);
    1186 :≡ (Cons 3,[1185; 1171],NONE);
    1187 :≡ (Cons 4,[1186; 1157],NONE);
    1188 :≡ (Cons 0,[],NONE);
    1189 :≡ (Const 107,[],NONE);
    1190 :≡ (Cons 0,[1189; 1188],NONE);
    1191 :≡ (Cons 2,[1190],NONE);
    1192 :≡ (Cons 3,[1191; 1187],NONE);
    1193 :≡ (Cons 4,[1192; 1128],NONE);
    1194 :≡ (Cons 3,[1193; 1078],NONE);
    1195 :≡ (Cons 1,[1194; 1015],NONE);
    1196 :≡ (Const 159,[],NONE);
    1197 :≡ (Const 268435457,[],NONE);
    1198 :≡ (Mult,[1197; 1196],SOME ⦕ 1195; 1196; 1197 ⦖);
    1199 :≡ (Const 268435297,[],NONE);
    1200 :≡ (Add,[1199; 1198],SOME ⦕ 1195; 1198; 1199 ⦖);
    makespace 5 ⦕ 1195; 1200 ⦖;
    1201 :≡ (WordFromInt,[1200],NONE);
    1202 :≡ (Cons 3,[1201],NONE);
    1203 :≡ (Const 1599,[],NONE);
    1204 :≡ (Const 268435457,[],NONE);
    1205 :≡ (Mult,[1204; 1203],SOME ⦕ 1195; 1202; 1203; 1204 ⦖);
    1206 :≡ (Const 268433857,[],NONE);
    1207 :≡ (Add,[1206; 1205],SOME ⦕ 1195; 1202; 1205; 1206 ⦖);
    makespace 25 ⦕ 1195; 1202; 1207 ⦖;
    1208 :≡ (WordFromInt,[1207],NONE);
    1209 :≡ (Cons 3,[1208],NONE);
    1210 :≡ (Cons 0,[],NONE);
    1211 :≡ (Const 116,[],NONE);
    1212 :≡ (Cons 0,[1211; 1210],NONE);
    1213 :≡ (Const 115,[],NONE);
    1214 :≡ (Cons 0,[1213; 1212],NONE);
    1215 :≡ (Const 111,[],NONE);
    1216 :≡ (Cons 0,[1215; 1214],NONE);
    1217 :≡ (Const 112,[],NONE);
    1218 :≡ (Cons 0,[1217; 1216],NONE);
    1219 :≡ (Const 103,[],NONE);
    1220 :≡ (Cons 0,[1219; 1218],NONE);
    1221 :≡ (Const 120,[],NONE);
    1222 :≡ (Cons 0,[1221; 1220],NONE);
    1223 :≡ (Cons 2,[1222],NONE);
    1224 :≡ (Const 31,[],NONE);
    1225 :≡ (Const 268435457,[],NONE);
    1226 :≡ (Mult,[1225; 1224],SOME ⦕ 1195; 1202; 1209; 1223; 1224; 1225 ⦖);
    1227 :≡ (Const 268435425,[],NONE);
    1228 :≡ (Add,[1227; 1226],SOME ⦕ 1195; 1202; 1209; 1223; 1226; 1227 ⦖);
    makespace 14 ⦕ 1195; 1202; 1209; 1223; 1228 ⦖;
    1229 :≡ (WordFromInt,[1228],NONE);
    1230 :≡ (Cons 3,[1229],NONE);
    1231 :≡ (Cons 3,[1230; 1223],NONE);
    1232 :≡ (Cons 3,[1231; 1209],NONE);
    1233 :≡ (Cons 3,[1232; 1202],NONE);
    1234 :≡ (Const 255,[],NONE);
    1235 :≡ (Const 268435457,[],NONE);
    1236 :≡ (Mult,[1235; 1234],SOME ⦕ 1195; 1233; 1234; 1235 ⦖);
    1237 :≡ (Const 268434929,[],NONE);
    1238 :≡ (Add,[1237; 1236],SOME ⦕ 1195; 1233; 1236; 1237 ⦖);
    1239 :≡ (Const 268435457,[],NONE);
    1240 :≡ (Mult,[1239; 1238],SOME ⦕ 1195; 1233; 1238; 1239 ⦖);
    1241 :≡ (Const 272,[],NONE);
    1242 :≡ (Add,[1241; 1240],SOME ⦕ 1195; 1233; 1240; 1241 ⦖);
    makespace 108 ⦕ 1195; 1233; 1242 ⦖;
    1243 :≡ (WordFromInt,[1242],NONE);
    1244 :≡ (Cons 3,[1243],NONE);
    1245 :≡ (Cons 3,[1244; 1233],NONE);
    1246 :≡ (Cons 0,[],NONE);
    1247 :≡ (Const 116,[],NONE);
    1248 :≡ (Cons 0,[1247; 1246],NONE);
    1249 :≡ (Const 115,[],NONE);
    1250 :≡ (Cons 0,[1249; 1248],NONE);
    1251 :≡ (Const 111,[],NONE);
    1252 :≡ (Cons 0,[1251; 1250],NONE);
    1253 :≡ (Const 112,[],NONE);
    1254 :≡ (Cons 0,[1253; 1252],NONE);
    1255 :≡ (Const 103,[],NONE);
    1256 :≡ (Cons 0,[1255; 1254],NONE);
    1257 :≡ (Const 121,[],NONE);
    1258 :≡ (Cons 0,[1257; 1256],NONE);
    1259 :≡ (Cons 2,[1258],NONE);
    1260 :≡ (Cons 0,[],NONE);
    1261 :≡ (Const 116,[],NONE);
    1262 :≡ (Cons 0,[1261; 1260],NONE);
    1263 :≡ (Const 115,[],NONE);
    1264 :≡ (Cons 0,[1263; 1262],NONE);
    1265 :≡ (Const 111,[],NONE);
    1266 :≡ (Cons 0,[1265; 1264],NONE);
    1267 :≡ (Const 112,[],NONE);
    1268 :≡ (Cons 0,[1267; 1266],NONE);
    1269 :≡ (Const 103,[],NONE);
    1270 :≡ (Cons 0,[1269; 1268],NONE);
    1271 :≡ (Const 121,[],NONE);
    1272 :≡ (Cons 0,[1271; 1270],NONE);
    1273 :≡ (Cons 2,[1272],NONE);
    1274 :≡ (Cons 3,[1273; 1259],NONE);
    1275 :≡ (Cons 0,[],NONE);
    1276 :≡ (Const 116,[],NONE);
    1277 :≡ (Cons 0,[1276; 1275],NONE);
    1278 :≡ (Const 115,[],NONE);
    1279 :≡ (Cons 0,[1278; 1277],NONE);
    1280 :≡ (Const 111,[],NONE);
    1281 :≡ (Cons 0,[1280; 1279],NONE);
    1282 :≡ (Const 112,[],NONE);
    1283 :≡ (Cons 0,[1282; 1281],NONE);
    1284 :≡ (Const 103,[],NONE);
    1285 :≡ (Cons 0,[1284; 1283],NONE);
    1286 :≡ (Const 120,[],NONE);
    1287 :≡ (Cons 0,[1286; 1285],NONE);
    1288 :≡ (Cons 2,[1287],NONE);
    1289 :≡ (Cons 0,[],NONE);
    1290 :≡ (Const 116,[],NONE);
    1291 :≡ (Cons 0,[1290; 1289],NONE);
    1292 :≡ (Const 115,[],NONE);
    1293 :≡ (Cons 0,[1292; 1291],NONE);
    1294 :≡ (Const 111,[],NONE);
    1295 :≡ (Cons 0,[1294; 1293],NONE);
    1296 :≡ (Const 112,[],NONE);
    1297 :≡ (Cons 0,[1296; 1295],NONE);
    1298 :≡ (Const 103,[],NONE);
    1299 :≡ (Cons 0,[1298; 1297],NONE);
    1300 :≡ (Const 120,[],NONE);
    1301 :≡ (Cons 0,[1300; 1299],NONE);
    1302 :≡ (Cons 2,[1301],NONE);
    1303 :≡ (Cons 3,[1302; 1288],NONE);
    1304 :≡ (Cons 4,[1303; 1274],NONE);
    1305 :≡ (Cons 0,[],NONE);
    1306 :≡ (Const 107,[],NONE);
    1307 :≡ (Cons 0,[1306; 1305],NONE);
    1308 :≡ (Cons 2,[1307],NONE);
    1309 :≡ (Cons 3,[1308; 1304],NONE);
    1310 :≡ (Cons 4,[1309; 1245],NONE);
    1311 :≡ (Const 159,[],NONE);
    1312 :≡ (Const 268435457,[],NONE);
    1313 :≡ (Mult,[1312; 1311],SOME ⦕ 1195; 1310; 1311; 1312 ⦖);
    1314 :≡ (Const 268435297,[],NONE);
    1315 :≡ (Add,[1314; 1313],SOME ⦕ 1195; 1310; 1313; 1314 ⦖);
    makespace 5 ⦕ 1195; 1310; 1315 ⦖;
    1316 :≡ (WordFromInt,[1315],NONE);
    1317 :≡ (Cons 3,[1316],NONE);
    1318 :≡ (Const 159,[],NONE);
    1319 :≡ (Const 268435457,[],NONE);
    1320 :≡ (Mult,[1319; 1318],SOME ⦕ 1195; 1310; 1317; 1318; 1319 ⦖);
    1321 :≡ (Const 268435297,[],NONE);
    1322 :≡ (Add,[1321; 1320],SOME ⦕ 1195; 1310; 1317; 1320; 1321 ⦖);
    makespace 19 ⦕ 1195; 1310; 1317; 1322 ⦖;
    1323 :≡ (WordFromInt,[1322],NONE);
    1324 :≡ (Cons 3,[1323],NONE);
    1325 :≡ (Cons 3,[1324; 1317],NONE);
    1326 :≡ (Cons 0,[],NONE);
    1327 :≡ (Const 115,[],NONE);
    1328 :≡ (Cons 0,[1327; 1326],NONE);
    1329 :≡ (Const 112,[],NONE);
    1330 :≡ (Cons 0,[1329; 1328],NONE);
    1331 :≡ (Const 101,[],NONE);
    1332 :≡ (Cons 0,[1331; 1330],NONE);
    1333 :≡ (Cons 2,[1332],NONE);
    1334 :≡ (Const 1599,[],NONE);
    1335 :≡ (Const 268435457,[],NONE);
    1336 :≡ (Mult,[1335; 1334],SOME ⦕ 1195; 1310; 1325; 1333; 1334; 1335 ⦖);
    1337 :≡ (Const 268433857,[],NONE);
    1338 :≡ (Add,[1337; 1336],SOME ⦕ 1195; 1310; 1325; 1333; 1336; 1337 ⦖);
    makespace 5 ⦕ 1195; 1310; 1325; 1333; 1338 ⦖;
    1339 :≡ (WordFromInt,[1338],NONE);
    1340 :≡ (Cons 3,[1339],NONE);
    1341 :≡ (Const 31,[],NONE);
    1342 :≡ (Const 268435457,[],NONE);
    1343 :≡
    (Mult,[1342; 1341],SOME ⦕ 1195; 1310; 1325; 1333; 1340; 1341; 1342 ⦖);
    1344 :≡ (Const 268435425,[],NONE);
    1345 :≡
    (Add,[1344; 1343],SOME ⦕ 1195; 1310; 1325; 1333; 1340; 1343; 1344 ⦖);
    makespace 11 ⦕ 1195; 1310; 1325; 1333; 1340; 1345 ⦖;
    1346 :≡ (WordFromInt,[1345],NONE);
    1347 :≡ (Cons 3,[1346],NONE);
    1348 :≡ (Cons 3,[1347; 1340],NONE);
    1349 :≡ (Cons 3,[1348; 1333],NONE);
    1350 :≡ (Const 255,[],NONE);
    1351 :≡ (Const 268435457,[],NONE);
    1352 :≡ (Mult,[1351; 1350],SOME ⦕ 1195; 1310; 1325; 1349; 1350; 1351 ⦖);
    1353 :≡ (Const 268434929,[],NONE);
    1354 :≡ (Add,[1353; 1352],SOME ⦕ 1195; 1310; 1325; 1349; 1352; 1353 ⦖);
    1355 :≡ (Const 268435457,[],NONE);
    1356 :≡ (Mult,[1355; 1354],SOME ⦕ 1195; 1310; 1325; 1349; 1354; 1355 ⦖);
    1357 :≡ (Const 272,[],NONE);
    1358 :≡ (Add,[1357; 1356],SOME ⦕ 1195; 1310; 1325; 1349; 1356; 1357 ⦖);
    makespace 53 ⦕ 1195; 1310; 1325; 1349; 1358 ⦖;
    1359 :≡ (WordFromInt,[1358],NONE);
    1360 :≡ (Cons 3,[1359],NONE);
    1361 :≡ (Cons 3,[1360; 1349],NONE);
    1362 :≡ (Cons 0,[],NONE);
    1363 :≡ (Const 115,[],NONE);
    1364 :≡ (Cons 0,[1363; 1362],NONE);
    1365 :≡ (Const 112,[],NONE);
    1366 :≡ (Cons 0,[1365; 1364],NONE);
    1367 :≡ (Const 101,[],NONE);
    1368 :≡ (Cons 0,[1367; 1366],NONE);
    1369 :≡ (Cons 2,[1368],NONE);
    1370 :≡ (Cons 0,[],NONE);
    1371 :≡ (Const 115,[],NONE);
    1372 :≡ (Cons 0,[1371; 1370],NONE);
    1373 :≡ (Const 112,[],NONE);
    1374 :≡ (Cons 0,[1373; 1372],NONE);
    1375 :≡ (Const 101,[],NONE);
    1376 :≡ (Cons 0,[1375; 1374],NONE);
    1377 :≡ (Cons 2,[1376],NONE);
    1378 :≡ (Cons 3,[1377; 1369],NONE);
    1379 :≡ (Cons 0,[],NONE);
    1380 :≡ (Const 107,[],NONE);
    1381 :≡ (Cons 0,[1380; 1379],NONE);
    1382 :≡ (Cons 2,[1381],NONE);
    1383 :≡ (Cons 3,[1382; 1378],NONE);
    1384 :≡ (Cons 4,[1383; 1361],NONE);
    1385 :≡ (Cons 3,[1384; 1325],NONE);
    1386 :≡ (Cons 3,[1385; 1310],NONE);
    1387 :≡ (Cons 1,[1386; 1195],NONE);
    return 1387
  od

dec_73 [] =
  do
    0 :≡ (Cons 0,[],NONE);
    1 :≡ (Const 1599,[],NONE);
    2 :≡ (Const 268435457,[],NONE);
    3 :≡ (Mult,[2; 1],SOME ⦕ 0; 1; 2 ⦖);
    4 :≡ (Const 268433857,[],NONE);
    5 :≡ (Add,[4; 3],SOME ⦕ 0; 3; 4 ⦖);
    makespace 56 ⦕ 0; 5 ⦖;
    6 :≡ (WordFromInt,[5],NONE);
    7 :≡ (Cons 3,[6],NONE);
    8 :≡ (Cons 0,[7; 0],NONE);
    9 :≡ (Const 0,[],NONE);
    10 :≡ (WordFromInt,[9],NONE);
    11 :≡ (Cons 3,[10],NONE);
    12 :≡ (Cons 0,[11; 8],NONE);
    13 :≡ (Cons 0,[],NONE);
    14 :≡ (Const 118,[],NONE);
    15 :≡ (Cons 0,[14; 13],NONE);
    16 :≡ (Cons 2,[15],NONE);
    17 :≡ (Cons 0,[16; 12],NONE);
    18 :≡ (Cons 0,[],NONE);
    19 :≡ (Const 118,[],NONE);
    20 :≡ (Cons 0,[19; 18],NONE);
    21 :≡ (Cons 2,[20],NONE);
    22 :≡ (Cons 0,[21; 17],NONE);
    23 :≡ (Const 0,[],NONE);
    24 :≡ (WordFromInt,[23],NONE);
    25 :≡ (Cons 3,[24],NONE);
    26 :≡ (Cons 0,[25; 22],NONE);
    27 :≡ (Const 0,[],NONE);
    28 :≡ (WordFromInt,[27],NONE);
    29 :≡ (Cons 3,[28],NONE);
    30 :≡ (Cons 0,[29; 26],NONE);
    31 :≡ (Const 0,[],NONE);
    32 :≡ (WordFromInt,[31],NONE);
    33 :≡ (Cons 3,[32],NONE);
    34 :≡ (Cons 0,[33; 30],NONE);
    35 :≡ (Const 318,[],NONE);
    36 :≡ (GlobalsPtr,[],NONE);
    37 :≡ (Update,[36; 35; 34],NONE);
    tailcall_dec_74 []
  od

dec_74 [] =
  do
    makespace 3 LN;
    0 :≡ (Const 0,[],NONE);
    1 :≡ (Label_bot_main_clos,[],NONE);
    2 :≡ (Cons 30,[1; 0],NONE);
    3 :≡ (Const 319,[],NONE);
    4 :≡ (GlobalsPtr,[],NONE);
    5 :≡ (Update,[4; 3; 2],NONE);
    tailcall_dec_75 []
  od

dec_75 [] =
  do
    0 :≡ (Cons 0,[],NONE);
    call_bot_main (1,LN) [0] NONE;
    2 :≡ (Cons 0,[],NONE);
    return 2
  od

fst_clos [0; 1] =
  tailcall_fst [0]

fst [0] =
  do 2 :≡ (Const 0,[],NONE); 3 :≡ (El,[0; 2],NONE); return 3 od

snd_clos [0; 1] =
  tailcall_snd [0]

snd [0] =
  do 3 :≡ (Const 1,[],NONE); 4 :≡ (El,[0; 3],NONE); return 4 od

Runtime_fullGC_clos [0; 1] =
  tailcall_Runtime_fullGC [0]

Runtime_fullGC [0] =
  do
    2 :≡ (Const 0,[],NONE);
    3 :≡ (Const 0,[],NONE);
    4 :≡ (ConfigGC,[3; 2],SOME ⦕ 2; 3 ⦖);
    return 4
  od

length_aux_clos [0; 1; 2] =
  tailcall_length_aux [0; 1]

length_aux [0; 1] =
  do
    3 :≡ (TagLenEq 0 0,[1],NONE);
    if_var 3 (return 0)
      do
        6 :≡ (Const 1,[],NONE);
        7 :≡ (El,[1; 6],NONE);
        10 :≡ (Const 1,[],NONE);
        11 :≡ (Add,[10; 0],SOME ⦕ 0; 7; 10 ⦖);
        tailcall_length_aux [11; 7]
      od
  od

List_length_clos [0; 1] =
  tailcall_List_length [0]

List_length [0] =
  do 1 :≡ (Const 0,[],NONE); tailcall_length_aux [1; 0] od

concat_clos [0; 1] =
  tailcall_concat [0]

concat [0] =
  do
    2 :≡ (TagLenEq 0 0,[0],NONE);
    if_var 2 do 3 :≡ (Cons 0,[],NONE); return 3 od
      do
        4 :≡ (Const 0,[],NONE);
        5 :≡ (El,[0; 4],NONE);
        6 :≡ (Const 1,[],NONE);
        7 :≡ (El,[0; 6],NONE);
        call_concat (10,⦕ 5 ⦖) [7] NONE;
        11 :≡ (ListAppend,[5; 10],SOME ⦕ 5; 10 ⦖);
        return 11
      od
  od

map_clos [0; 1; 2] =
  tailcall_map [0; 1]

map [0; 1] =
  do
    3 :≡ (TagLenEq 0 0,[0],NONE);
    if_var 3 do 4 :≡ (Cons 0,[],NONE); return 4 od
      do
        5 :≡ (Const 0,[],NONE);
        6 :≡ (El,[0; 5],NONE);
        7 :≡ (Const 1,[],NONE);
        8 :≡ (El,[0; 7],NONE);
        13 :≡ (Const 1,[],NONE);
        14 :≡ (El,[1; 13],NONE);
        15 :≡ (EqualInt 0,[14],NONE);
        if_var 15
          do
            16 :≡ (Const 0,[],NONE);
            17 :≡ (El,[1; 16],NONE);
            call (18,⦕ 1; 8 ⦖) NONE [6; 1; 17] NONE;
            move 20 18
          od do call_bvl_stub_0 (19,⦕ 1; 8 ⦖) [6; 1] NONE; move 20 19 od;
        call_map (21,⦕ 20 ⦖) [8; 1] NONE;
        makespace 3 ⦕ 20; 21 ⦖;
        22 :≡ (Cons 0,[20; 21],NONE);
        return 22
      od
  od

all_clos [0; 1; 2] =
  tailcall_all [0; 1]

all [0; 1] =
  do
    3 :≡ (TagLenEq 0 0,[0],NONE);
    if_var 3 do 4 :≡ (Cons 1,[],NONE); return 4 od
      do
        5 :≡ (Const 0,[],NONE);
        6 :≡ (El,[0; 5],NONE);
        7 :≡ (Const 1,[],NONE);
        8 :≡ (El,[0; 7],NONE);
        13 :≡ (Const 1,[],NONE);
        14 :≡ (El,[1; 13],NONE);
        15 :≡ (EqualInt 0,[14],NONE);
        if_var 15
          do
            16 :≡ (Const 0,[],NONE);
            17 :≡ (El,[1; 16],NONE);
            call (18,⦕ 1; 8 ⦖) NONE [6; 1; 17] NONE;
            move 20 18
          od do call_bvl_stub_0 (19,⦕ 1; 8 ⦖) [6; 1] NONE; move 20 19 od;
        if_var 20 (tailcall_all [8; 1]) do 22 :≡ (Cons 0,[],NONE); return 22 od
      od
  od

zip_clos [0; 1] =
  tailcall_zip [0]

zip [0] =
  do
    2 :≡ (Const 0,[],NONE);
    3 :≡ (El,[0; 2],NONE);
    4 :≡ (Const 1,[],NONE);
    5 :≡ (El,[0; 4],NONE);
    9 :≡ (TagLenEq 0 0,[3],NONE);
    if_var 9
      do
        11 :≡ (TagLenEq 0 0,[5],NONE);
        if_var 11 do 12 :≡ (Cons 0,[],NONE); return 12 od
          do 17 :≡ (Cons 0,[],NONE); return 17 od
      od
      do
        19 :≡ (Const 0,[],NONE);
        20 :≡ (El,[3; 19],NONE);
        21 :≡ (Const 1,[],NONE);
        22 :≡ (El,[3; 21],NONE);
        26 :≡ (TagLenEq 0 0,[5],NONE);
        if_var 26 do 27 :≡ (Cons 0,[],NONE); return 27 od
          do
            makespace 3 ⦕ 5; 20; 22 ⦖;
            28 :≡ (Const 0,[],NONE);
            29 :≡ (El,[5; 28],NONE);
            30 :≡ (Const 1,[],NONE);
            31 :≡ (El,[5; 30],NONE);
            34 :≡ (Cons 0,[22; 31],NONE);
            call_zip (35,⦕ 20; 29 ⦖) [34] NONE;
            makespace 6 ⦕ 20; 29; 35 ⦖;
            36 :≡ (Cons 0,[20; 29],NONE);
            37 :≡ (Cons 0,[36; 35],NONE);
            return 37
          od
      od
  od

lookup_clos [0; 1; 2] =
  tailcall_lookup [0; 1]

lookup [0; 1] =
  do
    3 :≡ (TagLenEq 0 0,[1],NONE);
    if_var 3 do 4 :≡ (Cons 0,[],NONE); return 4 od
      do
        5 :≡ (Const 0,[],NONE);
        6 :≡ (El,[1; 5],NONE);
        7 :≡ (Const 1,[],NONE);
        8 :≡ (El,[1; 7],NONE);
        12 :≡ (Const 0,[],NONE);
        13 :≡ (El,[6; 12],NONE);
        14 :≡ (Const 1,[],NONE);
        15 :≡ (El,[6; 14],NONE);
        18 :≡ (Equal,[13; 0],SOME ⦕ 0; 8; 13; 15 ⦖);
        if_var 18 do makespace 2 ⦕ 15 ⦖; 19 :≡ (Cons 0,[15],NONE); return 19 od
          (tailcall_lookup [0; 8])
      od
  od

+_clos [0; 1; 2] =
  tailcall_+ [0; 1]

+ [0; 1] =
  do 2 :≡ (Add,[1; 0],SOME ⦕ 0; 1 ⦖); return 2 od

*_clos [0; 1; 2] =
  tailcall_* [0; 1]

* [0; 1] =
  do 2 :≡ (Mult,[1; 0],SOME ⦕ 0; 1 ⦖); return 2 od

<=_clos [0; 1; 2] =
  tailcall_<= [0; 1]

<= [0; 1] =
  do 2 :≡ (LessEq,[1; 0],SOME ⦕ 0; 1 ⦖); return 2 od

@_clos [0; 1; 2] =
  tailcall_@ [0; 1]

@ [0; 1] =
  do 2 :≡ (ListAppend,[1; 0],SOME ⦕ 0; 1 ⦖); return 2 od

<>_clos [0; 1; 2] =
  tailcall_<> [0; 1]

<> [0; 1] =
  do
    2 :≡ (Cons 0,[],NONE);
    3 :≡ (Equal,[1; 0],SOME ⦕ 0; 1; 2 ⦖);
    4 :≡ (Equal,[3; 2],SOME ⦕ 2; 3 ⦖);
    return 4
  od

Word8_fromInt_clos [0; 1] =
  tailcall_Word8_fromInt [0]

Word8_fromInt [0] =
  do 1 :≡ (Const 256,[],NONE); 2 :≡ (Mod,[0; 1],SOME ⦕ 0; 1 ⦖); return 2 od

Word8Array_array_clos [0; 1; 2] =
  tailcall_Word8Array_array [0; 1]

Word8Array_array [0; 1] =
  do
    4 :≡ (Const 0,[],NONE);
    5 :≡ (Less,[1; 4],SOME ⦕ 0; 1; 4 ⦖);
    if_var 5 do 6 :≡ (Cons 3,[],NONE); raise 6 od
      do 7 :≡ (RefByte F,[1; 0],SOME ⦕ 0; 1 ⦖); return 7 od
  od

Word8Array_sub_clos [0; 1; 2] =
  tailcall_Word8Array_sub [0; 1]

Word8Array_sub [0; 1] =
  do
    4 :≡ (BoundsCheckByte F,[1; 0],NONE);
    if_var 4 do 5 :≡ (DerefByte,[1; 0],NONE); return 5 od
      do 6 :≡ (Cons 3,[],NONE); raise 6 od
  od

Word8Array_length_clos [0; 1] =
  tailcall_Word8Array_length [0]

Word8Array_length [0] =
  do 1 :≡ (LengthByte,[0],NONE); return 1 od

Word8Array_update_clos [0; 1; 2; 3] =
  tailcall_Word8Array_update [0; 1; 2]

Word8Array_update [0; 1; 2] =
  do
    6 :≡ (BoundsCheckByte F,[2; 1],NONE);
    if_var 6 do 7 :≡ (UpdateByte,[2; 1; 0],NONE); return 7 od
      do 8 :≡ (Cons 3,[],NONE); raise 8 od
  od

Word8Array_substring_clos [0; 1; 2; 3] =
  tailcall_Word8Array_substring [0; 1; 2]

Word8Array_substring [0; 1; 2] =
  do
    6 :≡ (Const 0,[],NONE);
    7 :≡ (Less,[0; 6],SOME ⦕ 0; 1; 2; 6 ⦖);
    if_var 7 do 8 :≡ (Cons 3,[],NONE); raise 8 od
      do
        9 :≡ (Const 0,[],NONE);
        10 :≡ (Less,[1; 9],SOME ⦕ 0; 1; 2; 9 ⦖);
        if_var 10 do 11 :≡ (Cons 3,[],NONE); raise 11 od
          do
            12 :≡ (Add,[1; 0],SOME ⦕ 0; 1; 2 ⦖);
            13 :≡ (BoundsCheckByte T,[2; 12],NONE);
            if_var 13
              do
                17 :≡ (Const 0,[],NONE);
                18 :≡ (RefByte T,[0; 17],SOME ⦕ 0; 1; 2; 17 ⦖);
                19 :≡ (Const 0,[],NONE);
                20 :≡ (CopyByte F,[2; 1; 0; 18; 19],SOME ⦕ 0; 1; 2; 18; 19 ⦖);
                return 18
              od do 22 :≡ (Cons 3,[],NONE); raise 22 od
          od
      od
  od

word_lt_clos [0; 1; 2] =
  tailcall_word_lt [0; 1]

word_lt [0; 1] =
  do
    makespace 6 ⦕ 0; 1 ⦖;
    2 :≡ (WordShift W64 Lsr 32,[0],NONE);
    3 :≡ (WordToInt,[2],NONE);
    4 :≡ (Const 7,[],NONE);
    5 :≡ (Const 268435457,[],NONE);
    6 :≡ (Mult,[5; 4],SOME ⦕ 1; 3; 4; 5 ⦖);
    7 :≡ (Const 268435449,[],NONE);
    8 :≡ (Add,[7; 6],SOME ⦕ 1; 3; 6; 7 ⦖);
    9 :≡ (Less,[3; 8],SOME ⦕ 1; 3; 8 ⦖);
    if_var 9 (move 16 3)
      do
        10 :≡ (Const 15,[],NONE);
        11 :≡ (Const (-268435457),[],NONE);
        12 :≡ (Mult,[11; 10],SOME ⦕ 1; 3; 10; 11 ⦖);
        13 :≡ (Const (-268435441),[],NONE);
        14 :≡ (Add,[13; 12],SOME ⦕ 1; 3; 12; 13 ⦖);
        15 :≡ (Add,[14; 3],SOME ⦕ 1; 3; 14 ⦖);
        move 16 15
      od;
    makespace 6 ⦕ 1; 16 ⦖;
    17 :≡ (WordShift W64 Lsr 32,[1],NONE);
    18 :≡ (WordToInt,[17],NONE);
    19 :≡ (Const 7,[],NONE);
    20 :≡ (Const 268435457,[],NONE);
    21 :≡ (Mult,[20; 19],SOME ⦕ 16; 18; 19; 20 ⦖);
    22 :≡ (Const 268435449,[],NONE);
    23 :≡ (Add,[22; 21],SOME ⦕ 16; 18; 21; 22 ⦖);
    24 :≡ (Less,[18; 23],SOME ⦕ 16; 18; 23 ⦖);
    if_var 24 (move 31 18)
      do
        25 :≡ (Const 15,[],NONE);
        26 :≡ (Const (-268435457),[],NONE);
        27 :≡ (Mult,[26; 25],SOME ⦕ 16; 18; 25; 26 ⦖);
        28 :≡ (Const (-268435441),[],NONE);
        29 :≡ (Add,[28; 27],SOME ⦕ 16; 18; 27; 28 ⦖);
        30 :≡ (Add,[29; 18],SOME ⦕ 16; 18; 29 ⦖);
        move 31 30
      od;
    32 :≡ (Less,[31; 16],SOME ⦕ 16; 31 ⦖);
    return 32
  od

word_le_clos [0; 1; 2] =
  tailcall_word_le [0; 1]

word_le [0; 1] =
  do
    makespace 6 ⦕ 0; 1 ⦖;
    2 :≡ (WordShift W64 Lsr 32,[0],NONE);
    3 :≡ (WordToInt,[2],NONE);
    4 :≡ (Const 7,[],NONE);
    5 :≡ (Const 268435457,[],NONE);
    6 :≡ (Mult,[5; 4],SOME ⦕ 1; 3; 4; 5 ⦖);
    7 :≡ (Const 268435449,[],NONE);
    8 :≡ (Add,[7; 6],SOME ⦕ 1; 3; 6; 7 ⦖);
    9 :≡ (Less,[3; 8],SOME ⦕ 1; 3; 8 ⦖);
    if_var 9 (move 16 3)
      do
        10 :≡ (Const 15,[],NONE);
        11 :≡ (Const (-268435457),[],NONE);
        12 :≡ (Mult,[11; 10],SOME ⦕ 1; 3; 10; 11 ⦖);
        13 :≡ (Const (-268435441),[],NONE);
        14 :≡ (Add,[13; 12],SOME ⦕ 1; 3; 12; 13 ⦖);
        15 :≡ (Add,[14; 3],SOME ⦕ 1; 3; 14 ⦖);
        move 16 15
      od;
    makespace 6 ⦕ 1; 16 ⦖;
    17 :≡ (WordShift W64 Lsr 32,[1],NONE);
    18 :≡ (WordToInt,[17],NONE);
    19 :≡ (Const 7,[],NONE);
    20 :≡ (Const 268435457,[],NONE);
    21 :≡ (Mult,[20; 19],SOME ⦕ 16; 18; 19; 20 ⦖);
    22 :≡ (Const 268435449,[],NONE);
    23 :≡ (Add,[22; 21],SOME ⦕ 16; 18; 21; 22 ⦖);
    24 :≡ (Less,[18; 23],SOME ⦕ 16; 18; 23 ⦖);
    if_var 24 (move 31 18)
      do
        25 :≡ (Const 15,[],NONE);
        26 :≡ (Const (-268435457),[],NONE);
        27 :≡ (Mult,[26; 25],SOME ⦕ 16; 18; 25; 26 ⦖);
        28 :≡ (Const (-268435441),[],NONE);
        29 :≡ (Add,[28; 27],SOME ⦕ 16; 18; 27; 28 ⦖);
        30 :≡ (Add,[29; 18],SOME ⦕ 16; 18; 29 ⦖);
        move 31 30
      od;
    32 :≡ (LessEq,[31; 16],SOME ⦕ 16; 31 ⦖);
    return 32
  od

word_le_1_clos [0; 1; 2] =
  tailcall_word_le_1 [0; 1]

word_le_1 [0; 1] =
  do
    makespace 3 ⦕ 0; 1 ⦖;
    2 :≡ (WordToInt,[0],NONE);
    3 :≡ (Const 127,[],NONE);
    4 :≡ (Const 268435457,[],NONE);
    5 :≡ (Mult,[4; 3],SOME ⦕ 1; 2; 3; 4 ⦖);
    6 :≡ (Const 268435201,[],NONE);
    7 :≡ (Add,[6; 5],SOME ⦕ 1; 2; 5; 6 ⦖);
    8 :≡ (Const 268435457,[],NONE);
    9 :≡ (Mult,[8; 7],SOME ⦕ 1; 2; 7; 8 ⦖);
    10 :≡ (Const 128,[],NONE);
    11 :≡ (Add,[10; 9],SOME ⦕ 1; 2; 9; 10 ⦖);
    12 :≡ (Less,[2; 11],SOME ⦕ 1; 2; 11 ⦖);
    if_var 12 (move 23 2)
      do
        13 :≡ (Const 255,[],NONE);
        14 :≡ (Const 268435457,[],NONE);
        15 :≡ (Mult,[14; 13],SOME ⦕ 1; 2; 13; 14 ⦖);
        16 :≡ (Const 268434945,[],NONE);
        17 :≡ (Add,[16; 15],SOME ⦕ 1; 2; 15; 16 ⦖);
        18 :≡ (Const (-268435457),[],NONE);
        19 :≡ (Mult,[18; 17],SOME ⦕ 1; 2; 17; 18 ⦖);
        20 :≡ (Const (-256),[],NONE);
        21 :≡ (Add,[20; 19],SOME ⦕ 1; 2; 19; 20 ⦖);
        22 :≡ (Add,[21; 2],SOME ⦕ 1; 2; 21 ⦖);
        move 23 22
      od;
    makespace 3 ⦕ 1; 23 ⦖;
    24 :≡ (WordToInt,[1],NONE);
    25 :≡ (Const 127,[],NONE);
    26 :≡ (Const 268435457,[],NONE);
    27 :≡ (Mult,[26; 25],SOME ⦕ 23; 24; 25; 26 ⦖);
    28 :≡ (Const 268435201,[],NONE);
    29 :≡ (Add,[28; 27],SOME ⦕ 23; 24; 27; 28 ⦖);
    30 :≡ (Const 268435457,[],NONE);
    31 :≡ (Mult,[30; 29],SOME ⦕ 23; 24; 29; 30 ⦖);
    32 :≡ (Const 128,[],NONE);
    33 :≡ (Add,[32; 31],SOME ⦕ 23; 24; 31; 32 ⦖);
    34 :≡ (Less,[24; 33],SOME ⦕ 23; 24; 33 ⦖);
    if_var 34 (move 45 24)
      do
        35 :≡ (Const 255,[],NONE);
        36 :≡ (Const 268435457,[],NONE);
        37 :≡ (Mult,[36; 35],SOME ⦕ 23; 24; 35; 36 ⦖);
        38 :≡ (Const 268434945,[],NONE);
        39 :≡ (Add,[38; 37],SOME ⦕ 23; 24; 37; 38 ⦖);
        40 :≡ (Const (-268435457),[],NONE);
        41 :≡ (Mult,[40; 39],SOME ⦕ 23; 24; 39; 40 ⦖);
        42 :≡ (Const (-256),[],NONE);
        43 :≡ (Add,[42; 41],SOME ⦕ 23; 24; 41; 42 ⦖);
        44 :≡ (Add,[43; 24],SOME ⦕ 23; 24; 43 ⦖);
        move 45 44
      od;
    46 :≡ (LessEq,[45; 23],SOME ⦕ 23; 45 ⦖);
    return 46
  od

round_to_inf_clos [0; 1] =
  tailcall_round_to_inf [0]

round_to_inf [0] =
  do
    1 :≡ (Const 255,[],NONE);
    2 :≡ (Const 268435457,[],NONE);
    3 :≡ (Mult,[2; 1],SOME ⦕ 0; 1; 2 ⦖);
    4 :≡ (Const 268434937,[],NONE);
    5 :≡ (Add,[4; 3],SOME ⦕ 0; 3; 4 ⦖);
    6 :≡ (Const 268435457,[],NONE);
    7 :≡ (Mult,[6; 5],SOME ⦕ 0; 5; 6 ⦖);
    8 :≡ (Const 265,[],NONE);
    9 :≡ (Add,[8; 7],SOME ⦕ 0; 7; 8 ⦖);
    makespace 6 ⦕ 0; 9 ⦖;
    10 :≡ (WordFromInt,[9],NONE);
    12 :≡ (WordToInt,[10],NONE);
    13 :≡ (Const 127,[],NONE);
    14 :≡ (Const 268435457,[],NONE);
    15 :≡ (Mult,[14; 13],SOME ⦕ 0; 12; 13; 14 ⦖);
    16 :≡ (Const 268435201,[],NONE);
    17 :≡ (Add,[16; 15],SOME ⦕ 0; 12; 15; 16 ⦖);
    18 :≡ (Const 268435457,[],NONE);
    19 :≡ (Mult,[18; 17],SOME ⦕ 0; 12; 17; 18 ⦖);
    20 :≡ (Const 128,[],NONE);
    21 :≡ (Add,[20; 19],SOME ⦕ 0; 12; 19; 20 ⦖);
    22 :≡ (Less,[12; 21],SOME ⦕ 0; 12; 21 ⦖);
    if_var 22 (move 33 12)
      do
        23 :≡ (Const 255,[],NONE);
        24 :≡ (Const 268435457,[],NONE);
        25 :≡ (Mult,[24; 23],SOME ⦕ 0; 12; 23; 24 ⦖);
        26 :≡ (Const 268434945,[],NONE);
        27 :≡ (Add,[26; 25],SOME ⦕ 0; 12; 25; 26 ⦖);
        28 :≡ (Const (-268435457),[],NONE);
        29 :≡ (Mult,[28; 27],SOME ⦕ 0; 12; 27; 28 ⦖);
        30 :≡ (Const (-256),[],NONE);
        31 :≡ (Add,[30; 29],SOME ⦕ 0; 12; 29; 30 ⦖);
        32 :≡ (Add,[31; 12],SOME ⦕ 0; 12; 31 ⦖);
        move 33 32
      od;
    makespace 3 ⦕ 0; 33 ⦖;
    34 :≡ (WordToInt,[0],NONE);
    35 :≡ (Const 127,[],NONE);
    36 :≡ (Const 268435457,[],NONE);
    37 :≡ (Mult,[36; 35],SOME ⦕ 0; 33; 34; 35; 36 ⦖);
    38 :≡ (Const 268435201,[],NONE);
    39 :≡ (Add,[38; 37],SOME ⦕ 0; 33; 34; 37; 38 ⦖);
    40 :≡ (Const 268435457,[],NONE);
    41 :≡ (Mult,[40; 39],SOME ⦕ 0; 33; 34; 39; 40 ⦖);
    42 :≡ (Const 128,[],NONE);
    43 :≡ (Add,[42; 41],SOME ⦕ 0; 33; 34; 41; 42 ⦖);
    44 :≡ (Less,[34; 43],SOME ⦕ 0; 33; 34; 43 ⦖);
    if_var 44 (move 55 34)
      do
        45 :≡ (Const 255,[],NONE);
        46 :≡ (Const 268435457,[],NONE);
        47 :≡ (Mult,[46; 45],SOME ⦕ 0; 33; 34; 45; 46 ⦖);
        48 :≡ (Const 268434945,[],NONE);
        49 :≡ (Add,[48; 47],SOME ⦕ 0; 33; 34; 47; 48 ⦖);
        50 :≡ (Const (-268435457),[],NONE);
        51 :≡ (Mult,[50; 49],SOME ⦕ 0; 33; 34; 49; 50 ⦖);
        52 :≡ (Const (-256),[],NONE);
        53 :≡ (Add,[52; 51],SOME ⦕ 0; 33; 34; 51; 52 ⦖);
        54 :≡ (Add,[53; 34],SOME ⦕ 0; 33; 34; 53 ⦖);
        move 55 54
      od;
    56 :≡ (LessEq,[55; 33],SOME ⦕ 0; 33; 55 ⦖);
    if_var 56
      do
        57 :≡ (Const 127,[],NONE);
        58 :≡ (Const 268435457,[],NONE);
        59 :≡ (Mult,[58; 57],SOME ⦕ 57; 58 ⦖);
        60 :≡ (Const 268435217,[],NONE);
        61 :≡ (Add,[60; 59],SOME ⦕ 59; 60 ⦖);
        62 :≡ (Const 268435457,[],NONE);
        63 :≡ (Mult,[62; 61],SOME ⦕ 61; 62 ⦖);
        64 :≡ (Const 112,[],NONE);
        65 :≡ (Add,[64; 63],SOME ⦕ 63; 64 ⦖);
        makespace 3 ⦕ 65 ⦖;
        66 :≡ (WordFromInt,[65],NONE);
        return 66
      od
      do
        68 :≡ (Const 7,[],NONE);
        69 :≡ (Const 268435457,[],NONE);
        70 :≡ (Mult,[69; 68],SOME ⦕ 0; 68; 69 ⦖);
        71 :≡ (Const 268435448,[],NONE);
        72 :≡ (Add,[71; 70],SOME ⦕ 0; 70; 71 ⦖);
        makespace 6 ⦕ 0; 72 ⦖;
        73 :≡ (WordFromInt,[72],NONE);
        74 :≡ (WordToInt,[0],NONE);
        75 :≡ (Const 127,[],NONE);
        76 :≡ (Const 268435457,[],NONE);
        77 :≡ (Mult,[76; 75],SOME ⦕ 0; 73; 74; 75; 76 ⦖);
        78 :≡ (Const 268435201,[],NONE);
        79 :≡ (Add,[78; 77],SOME ⦕ 0; 73; 74; 77; 78 ⦖);
        80 :≡ (Const 268435457,[],NONE);
        81 :≡ (Mult,[80; 79],SOME ⦕ 0; 73; 74; 79; 80 ⦖);
        82 :≡ (Const 128,[],NONE);
        83 :≡ (Add,[82; 81],SOME ⦕ 0; 73; 74; 81; 82 ⦖);
        84 :≡ (Less,[74; 83],SOME ⦕ 0; 73; 74; 83 ⦖);
        if_var 84 (move 95 74)
          do
            85 :≡ (Const 255,[],NONE);
            86 :≡ (Const 268435457,[],NONE);
            87 :≡ (Mult,[86; 85],SOME ⦕ 0; 73; 74; 85; 86 ⦖);
            88 :≡ (Const 268434945,[],NONE);
            89 :≡ (Add,[88; 87],SOME ⦕ 0; 73; 74; 87; 88 ⦖);
            90 :≡ (Const (-268435457),[],NONE);
            91 :≡ (Mult,[90; 89],SOME ⦕ 0; 73; 74; 89; 90 ⦖);
            92 :≡ (Const (-256),[],NONE);
            93 :≡ (Add,[92; 91],SOME ⦕ 0; 73; 74; 91; 92 ⦖);
            94 :≡ (Add,[93; 74],SOME ⦕ 0; 73; 74; 93 ⦖);
            move 95 94
          od;
        makespace 3 ⦕ 0; 73; 95 ⦖;
        96 :≡ (WordToInt,[73],NONE);
        97 :≡ (Const 127,[],NONE);
        98 :≡ (Const 268435457,[],NONE);
        99 :≡ (Mult,[98; 97],SOME ⦕ 0; 95; 96; 97; 98 ⦖);
        100 :≡ (Const 268435201,[],NONE);
        101 :≡ (Add,[100; 99],SOME ⦕ 0; 95; 96; 99; 100 ⦖);
        102 :≡ (Const 268435457,[],NONE);
        103 :≡ (Mult,[102; 101],SOME ⦕ 0; 95; 96; 101; 102 ⦖);
        104 :≡ (Const 128,[],NONE);
        105 :≡ (Add,[104; 103],SOME ⦕ 0; 95; 96; 103; 104 ⦖);
        106 :≡ (Less,[96; 105],SOME ⦕ 0; 95; 96; 105 ⦖);
        if_var 106 (move 117 96)
          do
            107 :≡ (Const 255,[],NONE);
            108 :≡ (Const 268435457,[],NONE);
            109 :≡ (Mult,[108; 107],SOME ⦕ 0; 95; 96; 107; 108 ⦖);
            110 :≡ (Const 268434945,[],NONE);
            111 :≡ (Add,[110; 109],SOME ⦕ 0; 95; 96; 109; 110 ⦖);
            112 :≡ (Const (-268435457),[],NONE);
            113 :≡ (Mult,[112; 111],SOME ⦕ 0; 95; 96; 111; 112 ⦖);
            114 :≡ (Const (-256),[],NONE);
            115 :≡ (Add,[114; 113],SOME ⦕ 0; 95; 96; 113; 114 ⦖);
            116 :≡ (Add,[115; 96],SOME ⦕ 0; 95; 96; 115 ⦖);
            move 117 116
          od;
        118 :≡ (LessEq,[117; 95],SOME ⦕ 0; 95; 117 ⦖);
        if_var 118
          do
            119 :≡ (Const 127,[],NONE);
            120 :≡ (Const 268435457,[],NONE);
            121 :≡ (Mult,[120; 119],SOME ⦕ 119; 120 ⦖);
            122 :≡ (Const 268435185,[],NONE);
            123 :≡ (Add,[122; 121],SOME ⦕ 121; 122 ⦖);
            124 :≡ (Const 268435457,[],NONE);
            125 :≡ (Mult,[124; 123],SOME ⦕ 123; 124 ⦖);
            126 :≡ (Const 144,[],NONE);
            127 :≡ (Add,[126; 125],SOME ⦕ 125; 126 ⦖);
            makespace 3 ⦕ 127 ⦖;
            128 :≡ (WordFromInt,[127],NONE);
            return 128
          od
          do
            makespace 3 ⦕ 0 ⦖;
            129 :≡ (WordShift W64 Lsl 32,[0],NONE);
            return 129
          od
      od
  od

lookup_var_clos [0; 1; 2] =
  tailcall_lookup_var [0; 1]

lookup_var [0; 1] =
  do
    call_lookup (2,LN) [0; 1] NONE;
    3 :≡ (TagLenEq 0 0,[2],NONE);
    if_var 3
      do
        4 :≡ (Const 127,[],NONE);
        5 :≡ (Const 268435457,[],NONE);
        6 :≡ (Mult,[5; 4],SOME ⦕ 4; 5 ⦖);
        7 :≡ (Const 268435185,[],NONE);
        8 :≡ (Add,[7; 6],SOME ⦕ 6; 7 ⦖);
        9 :≡ (Const 268435457,[],NONE);
        10 :≡ (Mult,[9; 8],SOME ⦕ 8; 9 ⦖);
        11 :≡ (Const 144,[],NONE);
        12 :≡ (Add,[11; 10],SOME ⦕ 10; 11 ⦖);
        makespace 3 ⦕ 12 ⦖;
        13 :≡ (WordFromInt,[12],NONE);
        14 :≡ (Const 127,[],NONE);
        15 :≡ (Const 268435457,[],NONE);
        16 :≡ (Mult,[15; 14],SOME ⦕ 13; 14; 15 ⦖);
        17 :≡ (Const 268435217,[],NONE);
        18 :≡ (Add,[17; 16],SOME ⦕ 13; 16; 17 ⦖);
        19 :≡ (Const 268435457,[],NONE);
        20 :≡ (Mult,[19; 18],SOME ⦕ 13; 18; 19 ⦖);
        21 :≡ (Const 112,[],NONE);
        22 :≡ (Add,[21; 20],SOME ⦕ 13; 20; 21 ⦖);
        makespace 6 ⦕ 13; 22 ⦖;
        23 :≡ (WordFromInt,[22],NONE);
        24 :≡ (Cons 0,[23; 13],NONE);
        return 24
      od do 25 :≡ (Const 0,[],NONE); 26 :≡ (El,[2; 25],NONE); return 26 od
  od

pl_clos [0; 1; 2] =
  tailcall_pl [0; 1]

pl [0; 1] =
  do
    2 :≡ (Const 127,[],NONE);
    3 :≡ (Const 268435457,[],NONE);
    4 :≡ (Mult,[3; 2],SOME ⦕ 0; 1; 2; 3 ⦖);
    5 :≡ (Const 268435217,[],NONE);
    6 :≡ (Add,[5; 4],SOME ⦕ 0; 1; 4; 5 ⦖);
    7 :≡ (Const 268435457,[],NONE);
    8 :≡ (Mult,[7; 6],SOME ⦕ 0; 1; 6; 7 ⦖);
    9 :≡ (Const 112,[],NONE);
    10 :≡ (Add,[9; 8],SOME ⦕ 0; 1; 8; 9 ⦖);
    makespace 3 ⦕ 0; 1; 10 ⦖;
    11 :≡ (WordFromInt,[10],NONE);
    12 :≡ (Equal,[1; 11],SOME ⦕ 0; 1; 11 ⦖);
    if_var 12 do 13 :≡ (Cons 1,[],NONE); move 25 13 od
      do
        14 :≡ (Const 127,[],NONE);
        15 :≡ (Const 268435457,[],NONE);
        16 :≡ (Mult,[15; 14],SOME ⦕ 0; 1; 14; 15 ⦖);
        17 :≡ (Const 268435217,[],NONE);
        18 :≡ (Add,[17; 16],SOME ⦕ 0; 1; 16; 17 ⦖);
        19 :≡ (Const 268435457,[],NONE);
        20 :≡ (Mult,[19; 18],SOME ⦕ 0; 1; 18; 19 ⦖);
        21 :≡ (Const 112,[],NONE);
        22 :≡ (Add,[21; 20],SOME ⦕ 0; 1; 20; 21 ⦖);
        makespace 3 ⦕ 0; 1; 22 ⦖;
        23 :≡ (WordFromInt,[22],NONE);
        24 :≡ (Equal,[0; 23],SOME ⦕ 0; 1; 23 ⦖);
        move 25 24
      od;
    if_var 25
      do
        26 :≡ (Const 127,[],NONE);
        27 :≡ (Const 268435457,[],NONE);
        28 :≡ (Mult,[27; 26],SOME ⦕ 26; 27 ⦖);
        29 :≡ (Const 268435217,[],NONE);
        30 :≡ (Add,[29; 28],SOME ⦕ 28; 29 ⦖);
        31 :≡ (Const 268435457,[],NONE);
        32 :≡ (Mult,[31; 30],SOME ⦕ 30; 31 ⦖);
        33 :≡ (Const 112,[],NONE);
        34 :≡ (Add,[33; 32],SOME ⦕ 32; 33 ⦖);
        makespace 3 ⦕ 34 ⦖;
        35 :≡ (WordFromInt,[34],NONE);
        return 35
      od
      do
        makespace 12 ⦕ 0; 1 ⦖;
        36 :≡ (WordShift W64 Lsr 32,[0],NONE);
        37 :≡ (Cons 0,[],NONE);
        38 :≡ (Const 0,[],NONE);
        39 :≡ (WordFromInt,[38],NONE);
        40 :≡ (WordShift W64 Lsr 63,[0],NONE);
        41 :≡ (WordShift W64 Lsl 32,[40],NONE);
        42 :≡ (Equal,[41; 39],SOME ⦕ 1; 36; 37; 39; 41 ⦖);
        43 :≡ (Equal,[42; 37],SOME ⦕ 1; 36; 37; 42 ⦖);
        if_var 43
          do
            44 :≡ (Const 255,[],NONE);
            45 :≡ (Const 268435457,[],NONE);
            46 :≡ (Mult,[45; 44],SOME ⦕ 1; 36; 44; 45 ⦖);
            47 :≡ (Const 268434929,[],NONE);
            48 :≡ (Add,[47; 46],SOME ⦕ 1; 36; 46; 47 ⦖);
            49 :≡ (Const 268435457,[],NONE);
            50 :≡ (Mult,[49; 48],SOME ⦕ 1; 36; 48; 49 ⦖);
            51 :≡ (Const 272,[],NONE);
            52 :≡ (Add,[51; 50],SOME ⦕ 1; 36; 50; 51 ⦖);
            makespace 3 ⦕ 1; 36; 52 ⦖;
            53 :≡ (WordFromInt,[52],NONE);
            move 56 53
          od
          do
            makespace 3 ⦕ 1; 36 ⦖;
            54 :≡ (Const 0,[],NONE);
            55 :≡ (WordFromInt,[54],NONE);
            move 56 55
          od;
        makespace 15 ⦕ 1; 36; 56 ⦖;
        57 :≡ (WordOp W64 Orw,[56; 36],NONE);
        58 :≡ (WordShift W64 Lsr 32,[1],NONE);
        59 :≡ (Cons 0,[],NONE);
        60 :≡ (Const 0,[],NONE);
        61 :≡ (WordFromInt,[60],NONE);
        62 :≡ (WordShift W64 Lsr 63,[1],NONE);
        63 :≡ (WordShift W64 Lsl 32,[62],NONE);
        64 :≡ (Equal,[63; 61],SOME ⦕ 57; 58; 59; 61; 63 ⦖);
        65 :≡ (Equal,[64; 59],SOME ⦕ 57; 58; 59; 64 ⦖);
        if_var 65
          do
            66 :≡ (Const 255,[],NONE);
            67 :≡ (Const 268435457,[],NONE);
            68 :≡ (Mult,[67; 66],SOME ⦕ 57; 58; 66; 67 ⦖);
            69 :≡ (Const 268434929,[],NONE);
            70 :≡ (Add,[69; 68],SOME ⦕ 57; 58; 68; 69 ⦖);
            71 :≡ (Const 268435457,[],NONE);
            72 :≡ (Mult,[71; 70],SOME ⦕ 57; 58; 70; 71 ⦖);
            73 :≡ (Const 272,[],NONE);
            74 :≡ (Add,[73; 72],SOME ⦕ 57; 58; 72; 73 ⦖);
            makespace 3 ⦕ 57; 58; 74 ⦖;
            75 :≡ (WordFromInt,[74],NONE);
            move 78 75
          od
          do
            makespace 3 ⦕ 57; 58 ⦖;
            76 :≡ (Const 0,[],NONE);
            77 :≡ (WordFromInt,[76],NONE);
            move 78 77
          od;
        makespace 6 ⦕ 57; 58; 78 ⦖;
        79 :≡ (WordOp W64 Orw,[78; 58],NONE);
        80 :≡ (WordOp W64 Add,[79; 57],NONE);
        tailcall_round_to_inf [80]
      od
  od

pu_clos [0; 1; 2] =
  tailcall_pu [0; 1]

pu [0; 1] =
  do
    2 :≡ (Const 127,[],NONE);
    3 :≡ (Const 268435457,[],NONE);
    4 :≡ (Mult,[3; 2],SOME ⦕ 0; 1; 2; 3 ⦖);
    5 :≡ (Const 268435185,[],NONE);
    6 :≡ (Add,[5; 4],SOME ⦕ 0; 1; 4; 5 ⦖);
    7 :≡ (Const 268435457,[],NONE);
    8 :≡ (Mult,[7; 6],SOME ⦕ 0; 1; 6; 7 ⦖);
    9 :≡ (Const 144,[],NONE);
    10 :≡ (Add,[9; 8],SOME ⦕ 0; 1; 8; 9 ⦖);
    makespace 3 ⦕ 0; 1; 10 ⦖;
    11 :≡ (WordFromInt,[10],NONE);
    12 :≡ (Equal,[1; 11],SOME ⦕ 0; 1; 11 ⦖);
    if_var 12 do 13 :≡ (Cons 1,[],NONE); move 25 13 od
      do
        14 :≡ (Const 127,[],NONE);
        15 :≡ (Const 268435457,[],NONE);
        16 :≡ (Mult,[15; 14],SOME ⦕ 0; 1; 14; 15 ⦖);
        17 :≡ (Const 268435185,[],NONE);
        18 :≡ (Add,[17; 16],SOME ⦕ 0; 1; 16; 17 ⦖);
        19 :≡ (Const 268435457,[],NONE);
        20 :≡ (Mult,[19; 18],SOME ⦕ 0; 1; 18; 19 ⦖);
        21 :≡ (Const 144,[],NONE);
        22 :≡ (Add,[21; 20],SOME ⦕ 0; 1; 20; 21 ⦖);
        makespace 3 ⦕ 0; 1; 22 ⦖;
        23 :≡ (WordFromInt,[22],NONE);
        24 :≡ (Equal,[0; 23],SOME ⦕ 0; 1; 23 ⦖);
        move 25 24
      od;
    if_var 25
      do
        26 :≡ (Const 127,[],NONE);
        27 :≡ (Const 268435457,[],NONE);
        28 :≡ (Mult,[27; 26],SOME ⦕ 26; 27 ⦖);
        29 :≡ (Const 268435185,[],NONE);
        30 :≡ (Add,[29; 28],SOME ⦕ 28; 29 ⦖);
        31 :≡ (Const 268435457,[],NONE);
        32 :≡ (Mult,[31; 30],SOME ⦕ 30; 31 ⦖);
        33 :≡ (Const 144,[],NONE);
        34 :≡ (Add,[33; 32],SOME ⦕ 32; 33 ⦖);
        makespace 3 ⦕ 34 ⦖;
        35 :≡ (WordFromInt,[34],NONE);
        return 35
      od
      do
        makespace 12 ⦕ 0; 1 ⦖;
        36 :≡ (WordShift W64 Lsr 32,[0],NONE);
        37 :≡ (Cons 0,[],NONE);
        38 :≡ (Const 0,[],NONE);
        39 :≡ (WordFromInt,[38],NONE);
        40 :≡ (WordShift W64 Lsr 63,[0],NONE);
        41 :≡ (WordShift W64 Lsl 32,[40],NONE);
        42 :≡ (Equal,[41; 39],SOME ⦕ 1; 36; 37; 39; 41 ⦖);
        43 :≡ (Equal,[42; 37],SOME ⦕ 1; 36; 37; 42 ⦖);
        if_var 43
          do
            44 :≡ (Const 255,[],NONE);
            45 :≡ (Const 268435457,[],NONE);
            46 :≡ (Mult,[45; 44],SOME ⦕ 1; 36; 44; 45 ⦖);
            47 :≡ (Const 268434929,[],NONE);
            48 :≡ (Add,[47; 46],SOME ⦕ 1; 36; 46; 47 ⦖);
            49 :≡ (Const 268435457,[],NONE);
            50 :≡ (Mult,[49; 48],SOME ⦕ 1; 36; 48; 49 ⦖);
            51 :≡ (Const 272,[],NONE);
            52 :≡ (Add,[51; 50],SOME ⦕ 1; 36; 50; 51 ⦖);
            makespace 3 ⦕ 1; 36; 52 ⦖;
            53 :≡ (WordFromInt,[52],NONE);
            move 56 53
          od
          do
            makespace 3 ⦕ 1; 36 ⦖;
            54 :≡ (Const 0,[],NONE);
            55 :≡ (WordFromInt,[54],NONE);
            move 56 55
          od;
        makespace 15 ⦕ 1; 36; 56 ⦖;
        57 :≡ (WordOp W64 Orw,[56; 36],NONE);
        58 :≡ (WordShift W64 Lsr 32,[1],NONE);
        59 :≡ (Cons 0,[],NONE);
        60 :≡ (Const 0,[],NONE);
        61 :≡ (WordFromInt,[60],NONE);
        62 :≡ (WordShift W64 Lsr 63,[1],NONE);
        63 :≡ (WordShift W64 Lsl 32,[62],NONE);
        64 :≡ (Equal,[63; 61],SOME ⦕ 57; 58; 59; 61; 63 ⦖);
        65 :≡ (Equal,[64; 59],SOME ⦕ 57; 58; 59; 64 ⦖);
        if_var 65
          do
            66 :≡ (Const 255,[],NONE);
            67 :≡ (Const 268435457,[],NONE);
            68 :≡ (Mult,[67; 66],SOME ⦕ 57; 58; 66; 67 ⦖);
            69 :≡ (Const 268434929,[],NONE);
            70 :≡ (Add,[69; 68],SOME ⦕ 57; 58; 68; 69 ⦖);
            71 :≡ (Const 268435457,[],NONE);
            72 :≡ (Mult,[71; 70],SOME ⦕ 57; 58; 70; 71 ⦖);
            73 :≡ (Const 272,[],NONE);
            74 :≡ (Add,[73; 72],SOME ⦕ 57; 58; 72; 73 ⦖);
            makespace 3 ⦕ 57; 58; 74 ⦖;
            75 :≡ (WordFromInt,[74],NONE);
            move 78 75
          od
          do
            makespace 3 ⦕ 57; 58 ⦖;
            76 :≡ (Const 0,[],NONE);
            77 :≡ (WordFromInt,[76],NONE);
            move 78 77
          od;
        makespace 6 ⦕ 57; 58; 78 ⦖;
        79 :≡ (WordOp W64 Orw,[78; 58],NONE);
        80 :≡ (WordOp W64 Add,[79; 57],NONE);
        tailcall_round_to_inf [80]
      od
  od

wmin_clos [0; 1; 2] =
  tailcall_wmin [0; 1]

wmin [0; 1] =
  do call_word_lt (2,⦕ 0; 1 ⦖) [0; 1] NONE; if_var 2 (return 1) (return 0) od

wmax_clos [0; 1; 2] =
  tailcall_wmax [0; 1]

wmax [0; 1] =
  do call_word_lt (2,⦕ 0; 1 ⦖) [0; 1] NONE; if_var 2 (return 0) (return 1) od

wtimes_clos [0; 1; 2] =
  tailcall_wtimes [0; 1]

wtimes [0; 1] =
  do
    makespace 12 ⦕ 0; 1 ⦖;
    2 :≡ (WordShift W64 Lsr 32,[0],NONE);
    3 :≡ (Cons 0,[],NONE);
    4 :≡ (Const 0,[],NONE);
    5 :≡ (WordFromInt,[4],NONE);
    6 :≡ (WordShift W64 Lsr 63,[0],NONE);
    7 :≡ (WordShift W64 Lsl 32,[6],NONE);
    8 :≡ (Equal,[7; 5],SOME ⦕ 1; 2; 3; 5; 7 ⦖);
    9 :≡ (Equal,[8; 3],SOME ⦕ 1; 2; 3; 8 ⦖);
    if_var 9
      do
        10 :≡ (Const 255,[],NONE);
        11 :≡ (Const 268435457,[],NONE);
        12 :≡ (Mult,[11; 10],SOME ⦕ 1; 2; 10; 11 ⦖);
        13 :≡ (Const 268434929,[],NONE);
        14 :≡ (Add,[13; 12],SOME ⦕ 1; 2; 12; 13 ⦖);
        15 :≡ (Const 268435457,[],NONE);
        16 :≡ (Mult,[15; 14],SOME ⦕ 1; 2; 14; 15 ⦖);
        17 :≡ (Const 272,[],NONE);
        18 :≡ (Add,[17; 16],SOME ⦕ 1; 2; 16; 17 ⦖);
        makespace 3 ⦕ 1; 2; 18 ⦖;
        19 :≡ (WordFromInt,[18],NONE);
        move 22 19
      od
      do
        makespace 3 ⦕ 1; 2 ⦖;
        20 :≡ (Const 0,[],NONE);
        21 :≡ (WordFromInt,[20],NONE);
        move 22 21
      od;
    makespace 18 ⦕ 1; 2; 22 ⦖;
    23 :≡ (WordOp W64 Orw,[22; 2],NONE);
    24 :≡ (WordToInt,[23],NONE);
    25 :≡ (WordShift W64 Lsr 32,[1],NONE);
    26 :≡ (Cons 0,[],NONE);
    27 :≡ (Const 0,[],NONE);
    28 :≡ (WordFromInt,[27],NONE);
    29 :≡ (WordShift W64 Lsr 63,[1],NONE);
    30 :≡ (WordShift W64 Lsl 32,[29],NONE);
    31 :≡ (Equal,[30; 28],SOME ⦕ 24; 25; 26; 28; 30 ⦖);
    32 :≡ (Equal,[31; 26],SOME ⦕ 24; 25; 26; 31 ⦖);
    if_var 32
      do
        33 :≡ (Const 255,[],NONE);
        34 :≡ (Const 268435457,[],NONE);
        35 :≡ (Mult,[34; 33],SOME ⦕ 24; 25; 33; 34 ⦖);
        36 :≡ (Const 268434929,[],NONE);
        37 :≡ (Add,[36; 35],SOME ⦕ 24; 25; 35; 36 ⦖);
        38 :≡ (Const 268435457,[],NONE);
        39 :≡ (Mult,[38; 37],SOME ⦕ 24; 25; 37; 38 ⦖);
        40 :≡ (Const 272,[],NONE);
        41 :≡ (Add,[40; 39],SOME ⦕ 24; 25; 39; 40 ⦖);
        makespace 3 ⦕ 24; 25; 41 ⦖;
        42 :≡ (WordFromInt,[41],NONE);
        move 45 42
      od
      do
        makespace 3 ⦕ 24; 25 ⦖;
        43 :≡ (Const 0,[],NONE);
        44 :≡ (WordFromInt,[43],NONE);
        move 45 44
      od;
    makespace 6 ⦕ 24; 25; 45 ⦖;
    46 :≡ (WordOp W64 Orw,[45; 25],NONE);
    47 :≡ (WordToInt,[46],NONE);
    48 :≡ (Mult,[47; 24],SOME ⦕ 24; 47 ⦖);
    makespace 3 ⦕ 48 ⦖;
    49 :≡ (WordFromInt,[48],NONE);
    tailcall_round_to_inf [49]
  od

tl_1_clos [0; 1; 2; 3; 4] =
  tailcall_tl_1 [0; 1; 2; 3]

tl_1 [0; 1; 2; 3] =
  do
    call_wtimes (4,⦕ 0; 1; 2; 3 ⦖) [0; 2] NONE;
    call_wtimes (5,⦕ 1; 2; 3; 4 ⦖) [0; 3] NONE;
    call_word_lt (6,⦕ 1; 2; 3; 4; 5 ⦖) [4; 5] NONE;
    if_var 6 (move 7 5) (move 7 4);
    call_wtimes (8,⦕ 1; 3; 7 ⦖) [1; 2] NONE;
    call_wtimes (9,⦕ 7; 8 ⦖) [1; 3] NONE;
    call_word_lt (10,⦕ 7; 8; 9 ⦖) [8; 9] NONE;
    if_var 10 (move 11 9) (move 11 8);
    call_word_lt (12,⦕ 7; 11 ⦖) [7; 11] NONE;
    if_var 12 (return 11) (return 7)
  od

tu_clos [0; 1; 2; 3; 4] =
  tailcall_tu [0; 1; 2; 3]

tu [0; 1; 2; 3] =
  do
    call_wtimes (4,⦕ 0; 1; 2; 3 ⦖) [0; 2] NONE;
    call_wtimes (5,⦕ 1; 2; 3; 4 ⦖) [0; 3] NONE;
    call_word_lt (6,⦕ 1; 2; 3; 4; 5 ⦖) [4; 5] NONE;
    if_var 6 (move 7 4) (move 7 5);
    call_wtimes (8,⦕ 1; 3; 7 ⦖) [1; 2] NONE;
    call_wtimes (9,⦕ 7; 8 ⦖) [1; 3] NONE;
    call_word_lt (10,⦕ 7; 8; 9 ⦖) [8; 9] NONE;
    if_var 10 (move 11 8) (move 11 9);
    call_word_lt (12,⦕ 7; 11 ⦖) [7; 11] NONE;
    if_var 12 (return 7) (return 11)
  od

wneg_clos [0; 1] =
  tailcall_wneg [0]

wneg [0] =
  do
    1 :≡ (Const 127,[],NONE);
    2 :≡ (Const 268435457,[],NONE);
    3 :≡ (Mult,[2; 1],SOME ⦕ 0; 1; 2 ⦖);
    4 :≡ (Const 268435217,[],NONE);
    5 :≡ (Add,[4; 3],SOME ⦕ 0; 3; 4 ⦖);
    6 :≡ (Const 268435457,[],NONE);
    7 :≡ (Mult,[6; 5],SOME ⦕ 0; 5; 6 ⦖);
    8 :≡ (Const 112,[],NONE);
    9 :≡ (Add,[8; 7],SOME ⦕ 0; 7; 8 ⦖);
    makespace 3 ⦕ 0; 9 ⦖;
    10 :≡ (WordFromInt,[9],NONE);
    11 :≡ (Equal,[0; 10],SOME ⦕ 0; 10 ⦖);
    if_var 11
      do
        12 :≡ (Const 127,[],NONE);
        13 :≡ (Const 268435457,[],NONE);
        14 :≡ (Mult,[13; 12],SOME ⦕ 12; 13 ⦖);
        15 :≡ (Const 268435185,[],NONE);
        16 :≡ (Add,[15; 14],SOME ⦕ 14; 15 ⦖);
        17 :≡ (Const 268435457,[],NONE);
        18 :≡ (Mult,[17; 16],SOME ⦕ 16; 17 ⦖);
        19 :≡ (Const 144,[],NONE);
        20 :≡ (Add,[19; 18],SOME ⦕ 18; 19 ⦖);
        makespace 3 ⦕ 20 ⦖;
        21 :≡ (WordFromInt,[20],NONE);
        return 21
      od
      do
        22 :≡ (Const 127,[],NONE);
        23 :≡ (Const 268435457,[],NONE);
        24 :≡ (Mult,[23; 22],SOME ⦕ 0; 22; 23 ⦖);
        25 :≡ (Const 268435185,[],NONE);
        26 :≡ (Add,[25; 24],SOME ⦕ 0; 24; 25 ⦖);
        27 :≡ (Const 268435457,[],NONE);
        28 :≡ (Mult,[27; 26],SOME ⦕ 0; 26; 27 ⦖);
        29 :≡ (Const 144,[],NONE);
        30 :≡ (Add,[29; 28],SOME ⦕ 0; 28; 29 ⦖);
        makespace 3 ⦕ 0; 30 ⦖;
        31 :≡ (WordFromInt,[30],NONE);
        32 :≡ (Equal,[0; 31],SOME ⦕ 0; 31 ⦖);
        if_var 32
          do
            33 :≡ (Const 127,[],NONE);
            34 :≡ (Const 268435457,[],NONE);
            35 :≡ (Mult,[34; 33],SOME ⦕ 33; 34 ⦖);
            36 :≡ (Const 268435217,[],NONE);
            37 :≡ (Add,[36; 35],SOME ⦕ 35; 36 ⦖);
            38 :≡ (Const 268435457,[],NONE);
            39 :≡ (Mult,[38; 37],SOME ⦕ 37; 38 ⦖);
            40 :≡ (Const 112,[],NONE);
            41 :≡ (Add,[40; 39],SOME ⦕ 39; 40 ⦖);
            makespace 3 ⦕ 41 ⦖;
            42 :≡ (WordFromInt,[41],NONE);
            return 42
          od
          do
            makespace 6 ⦕ 0 ⦖;
            43 :≡ (WordShift W64 Lsr 32,[0],NONE);
            44 :≡ (WordToInt,[43],NONE);
            45 :≡ (Const 15,[],NONE);
            46 :≡ (Const 268435457,[],NONE);
            47 :≡ (Mult,[46; 45],SOME ⦕ 44; 45; 46 ⦖);
            48 :≡ (Const 268435441,[],NONE);
            49 :≡ (Add,[48; 47],SOME ⦕ 44; 47; 48 ⦖);
            50 :≡ (Sub,[49; 44],SOME ⦕ 44; 49 ⦖);
            51 :≡ (Const 0,[],NONE);
            52 :≡ (Less,[50; 51],SOME ⦕ 50; 51 ⦖);
            if_var 52 do 53 :≡ (Const 0,[],NONE); move 54 53 od (move 54 50);
            makespace 6 ⦕ 54 ⦖;
            55 :≡ (WordFromInt,[54],NONE);
            56 :≡ (WordShift W64 Lsl 32,[55],NONE);
            return 56
          od
      od
  od

wle_clos [0; 1; 2] =
  tailcall_wle [0; 1]

wle [0; 1] =
  tailcall_word_lt [0; 1]

wleq_clos [0; 1; 2] =
  tailcall_wleq [0; 1]

wleq [0; 1] =
  do
    2 :≡ (Cons 0,[],NONE);
    3 :≡ (Const 127,[],NONE);
    4 :≡ (Const 268435457,[],NONE);
    5 :≡ (Mult,[4; 3],SOME ⦕ 0; 1; 2; 3; 4 ⦖);
    6 :≡ (Const 268435217,[],NONE);
    7 :≡ (Add,[6; 5],SOME ⦕ 0; 1; 2; 5; 6 ⦖);
    8 :≡ (Const 268435457,[],NONE);
    9 :≡ (Mult,[8; 7],SOME ⦕ 0; 1; 2; 7; 8 ⦖);
    10 :≡ (Const 112,[],NONE);
    11 :≡ (Add,[10; 9],SOME ⦕ 0; 1; 2; 9; 10 ⦖);
    makespace 3 ⦕ 0; 1; 2; 11 ⦖;
    12 :≡ (WordFromInt,[11],NONE);
    13 :≡ (Equal,[1; 12],SOME ⦕ 0; 1; 2; 12 ⦖);
    14 :≡ (Equal,[13; 2],SOME ⦕ 0; 1; 2; 13 ⦖);
    if_var 14 do 15 :≡ (Cons 1,[],NONE); move 29 15 od
      do
        16 :≡ (Cons 0,[],NONE);
        17 :≡ (Const 127,[],NONE);
        18 :≡ (Const 268435457,[],NONE);
        19 :≡ (Mult,[18; 17],SOME ⦕ 0; 1; 16; 17; 18 ⦖);
        20 :≡ (Const 268435217,[],NONE);
        21 :≡ (Add,[20; 19],SOME ⦕ 0; 1; 16; 19; 20 ⦖);
        22 :≡ (Const 268435457,[],NONE);
        23 :≡ (Mult,[22; 21],SOME ⦕ 0; 1; 16; 21; 22 ⦖);
        24 :≡ (Const 112,[],NONE);
        25 :≡ (Add,[24; 23],SOME ⦕ 0; 1; 16; 23; 24 ⦖);
        makespace 3 ⦕ 0; 1; 16; 25 ⦖;
        26 :≡ (WordFromInt,[25],NONE);
        27 :≡ (Equal,[0; 26],SOME ⦕ 0; 1; 16; 26 ⦖);
        28 :≡ (Equal,[27; 16],SOME ⦕ 0; 1; 16; 27 ⦖);
        move 29 28
      od;
    if_var 29
      do
        30 :≡ (Cons 0,[],NONE);
        31 :≡ (Const 127,[],NONE);
        32 :≡ (Const 268435457,[],NONE);
        33 :≡ (Mult,[32; 31],SOME ⦕ 0; 1; 30; 31; 32 ⦖);
        34 :≡ (Const 268435185,[],NONE);
        35 :≡ (Add,[34; 33],SOME ⦕ 0; 1; 30; 33; 34 ⦖);
        36 :≡ (Const 268435457,[],NONE);
        37 :≡ (Mult,[36; 35],SOME ⦕ 0; 1; 30; 35; 36 ⦖);
        38 :≡ (Const 144,[],NONE);
        39 :≡ (Add,[38; 37],SOME ⦕ 0; 1; 30; 37; 38 ⦖);
        makespace 3 ⦕ 0; 1; 30; 39 ⦖;
        40 :≡ (WordFromInt,[39],NONE);
        41 :≡ (Equal,[0; 40],SOME ⦕ 0; 1; 30; 40 ⦖);
        42 :≡ (Equal,[41; 30],SOME ⦕ 0; 1; 30; 41 ⦖);
        if_var 42 (tailcall_word_le [0; 1])
          do 44 :≡ (Cons 0,[],NONE); return 44 od
      od do 46 :≡ (Cons 0,[],NONE); return 46 od
  od

divl_clos [0; 1; 2] =
  tailcall_divl [0; 1]

divl [0; 1] =
  do
    3 :≡ (Const 127,[],NONE);
    4 :≡ (Const 268435457,[],NONE);
    5 :≡ (Mult,[4; 3],SOME ⦕ 0; 1; 3; 4 ⦖);
    6 :≡ (Const 268435217,[],NONE);
    7 :≡ (Add,[6; 5],SOME ⦕ 0; 1; 5; 6 ⦖);
    8 :≡ (Const 268435457,[],NONE);
    9 :≡ (Mult,[8; 7],SOME ⦕ 0; 1; 7; 8 ⦖);
    10 :≡ (Const 112,[],NONE);
    11 :≡ (Add,[10; 9],SOME ⦕ 0; 1; 9; 10 ⦖);
    makespace 3 ⦕ 0; 1; 11 ⦖;
    12 :≡ (WordFromInt,[11],NONE);
    call_word_lt (13,⦕ 0; 1 ⦖) [1; 12] NONE;
    if_var 13
      do
        14 :≡ (Const 127,[],NONE);
        15 :≡ (Const 268435457,[],NONE);
        16 :≡ (Mult,[15; 14],SOME ⦕ 0; 1; 14; 15 ⦖);
        17 :≡ (Const 268435185,[],NONE);
        18 :≡ (Add,[17; 16],SOME ⦕ 0; 1; 16; 17 ⦖);
        19 :≡ (Const 268435457,[],NONE);
        20 :≡ (Mult,[19; 18],SOME ⦕ 0; 1; 18; 19 ⦖);
        21 :≡ (Const 144,[],NONE);
        22 :≡ (Add,[21; 20],SOME ⦕ 0; 1; 20; 21 ⦖);
        makespace 3 ⦕ 0; 1; 22 ⦖;
        23 :≡ (WordFromInt,[22],NONE);
        call_word_lt (25,⦕ 0; 1 ⦖) [23; 1] NONE;
        if_var 25
          do
            27 :≡ (Const 127,[],NONE);
            28 :≡ (Const 268435457,[],NONE);
            29 :≡ (Mult,[28; 27],SOME ⦕ 0; 1; 27; 28 ⦖);
            30 :≡ (Const 268435217,[],NONE);
            31 :≡ (Add,[30; 29],SOME ⦕ 0; 1; 29; 30 ⦖);
            32 :≡ (Const 268435457,[],NONE);
            33 :≡ (Mult,[32; 31],SOME ⦕ 0; 1; 31; 32 ⦖);
            34 :≡ (Const 112,[],NONE);
            35 :≡ (Add,[34; 33],SOME ⦕ 0; 1; 33; 34 ⦖);
            makespace 3 ⦕ 0; 1; 35 ⦖;
            36 :≡ (WordFromInt,[35],NONE);
            call_word_lt (37,⦕ 0; 1 ⦖) [0; 36] NONE;
            if_var 37
              do
                38 :≡ (Const 127,[],NONE);
                39 :≡ (Const 268435457,[],NONE);
                40 :≡ (Mult,[39; 38],SOME ⦕ 0; 1; 38; 39 ⦖);
                41 :≡ (Const 268435185,[],NONE);
                42 :≡ (Add,[41; 40],SOME ⦕ 0; 1; 40; 41 ⦖);
                43 :≡ (Const 268435457,[],NONE);
                44 :≡ (Mult,[43; 42],SOME ⦕ 0; 1; 42; 43 ⦖);
                45 :≡ (Const 144,[],NONE);
                46 :≡ (Add,[45; 44],SOME ⦕ 0; 1; 44; 45 ⦖);
                makespace 3 ⦕ 0; 1; 46 ⦖;
                47 :≡ (WordFromInt,[46],NONE);
                call_word_lt (49,⦕ 0; 1 ⦖) [47; 0] NONE;
                move 51 49
              od do 50 :≡ (Cons 0,[],NONE); move 51 50 od;
            move 53 51
          od do 52 :≡ (Cons 0,[],NONE); move 53 52 od;
        move 55 53
      od do 54 :≡ (Cons 0,[],NONE); move 55 54 od;
    if_var 55
      do
        makespace 9 ⦕ 0; 1 ⦖;
        56 :≡ (Const 0,[],NONE);
        57 :≡ (WordFromInt,[56],NONE);
        58 :≡ (WordShift W64 Lsr 32,[0],NONE);
        59 :≡ (WordToInt,[58],NONE);
        60 :≡ (Const 7,[],NONE);
        61 :≡ (Const 268435457,[],NONE);
        62 :≡ (Mult,[61; 60],SOME ⦕ 0; 1; 57; 59; 60; 61 ⦖);
        63 :≡ (Const 268435449,[],NONE);
        64 :≡ (Add,[63; 62],SOME ⦕ 0; 1; 57; 59; 62; 63 ⦖);
        65 :≡ (Less,[59; 64],SOME ⦕ 0; 1; 57; 59; 64 ⦖);
        if_var 65 (move 72 59)
          do
            66 :≡ (Const 15,[],NONE);
            67 :≡ (Const (-268435457),[],NONE);
            68 :≡ (Mult,[67; 66],SOME ⦕ 0; 1; 57; 59; 66; 67 ⦖);
            69 :≡ (Const (-268435441),[],NONE);
            70 :≡ (Add,[69; 68],SOME ⦕ 0; 1; 57; 59; 68; 69 ⦖);
            71 :≡ (Add,[70; 59],SOME ⦕ 0; 1; 57; 59; 70 ⦖);
            move 72 71
          od;
        makespace 6 ⦕ 0; 1; 57; 72 ⦖;
        73 :≡ (WordShift W64 Lsr 32,[1],NONE);
        74 :≡ (WordToInt,[73],NONE);
        75 :≡ (Const 7,[],NONE);
        76 :≡ (Const 268435457,[],NONE);
        77 :≡ (Mult,[76; 75],SOME ⦕ 0; 1; 57; 72; 74; 75; 76 ⦖);
        78 :≡ (Const 268435449,[],NONE);
        79 :≡ (Add,[78; 77],SOME ⦕ 0; 1; 57; 72; 74; 77; 78 ⦖);
        80 :≡ (Less,[74; 79],SOME ⦕ 0; 1; 57; 72; 74; 79 ⦖);
        if_var 80 (move 87 74)
          do
            81 :≡ (Const 15,[],NONE);
            82 :≡ (Const (-268435457),[],NONE);
            83 :≡ (Mult,[82; 81],SOME ⦕ 0; 1; 57; 72; 74; 81; 82 ⦖);
            84 :≡ (Const (-268435441),[],NONE);
            85 :≡ (Add,[84; 83],SOME ⦕ 0; 1; 57; 72; 74; 83; 84 ⦖);
            86 :≡ (Add,[85; 74],SOME ⦕ 0; 1; 57; 72; 74; 85 ⦖);
            move 87 86
          od;
        88 :≡ (EqualInt 0,[72],NONE);
        if_var 88 do 89 :≡ (Cons 2,[],NONE); raise 89 od
          do 90 :≡ (Mod,[87; 72],SOME ⦕ 0; 1; 57; 72; 87 ⦖); move 91 90 od;
        makespace 6 ⦕ 0; 1; 57; 91 ⦖;
        92 :≡ (WordFromInt,[91],NONE);
        93 :≡ (WordShift W64 Lsl 32,[92],NONE);
        94 :≡ (Equal,[93; 57],SOME ⦕ 0; 1; 57; 93 ⦖);
        if_var 94
          do
            makespace 6 ⦕ 0; 1 ⦖;
            95 :≡ (WordShift W64 Lsr 32,[0],NONE);
            96 :≡ (WordToInt,[95],NONE);
            97 :≡ (Const 7,[],NONE);
            98 :≡ (Const 268435457,[],NONE);
            99 :≡ (Mult,[98; 97],SOME ⦕ 1; 96; 97; 98 ⦖);
            100 :≡ (Const 268435449,[],NONE);
            101 :≡ (Add,[100; 99],SOME ⦕ 1; 96; 99; 100 ⦖);
            102 :≡ (Less,[96; 101],SOME ⦕ 1; 96; 101 ⦖);
            if_var 102 (move 109 96)
              do
                103 :≡ (Const 15,[],NONE);
                104 :≡ (Const (-268435457),[],NONE);
                105 :≡ (Mult,[104; 103],SOME ⦕ 1; 96; 103; 104 ⦖);
                106 :≡ (Const (-268435441),[],NONE);
                107 :≡ (Add,[106; 105],SOME ⦕ 1; 96; 105; 106 ⦖);
                108 :≡ (Add,[107; 96],SOME ⦕ 1; 96; 107 ⦖);
                move 109 108
              od;
            makespace 6 ⦕ 1; 109 ⦖;
            110 :≡ (WordShift W64 Lsr 32,[1],NONE);
            111 :≡ (WordToInt,[110],NONE);
            112 :≡ (Const 7,[],NONE);
            113 :≡ (Const 268435457,[],NONE);
            114 :≡ (Mult,[113; 112],SOME ⦕ 109; 111; 112; 113 ⦖);
            115 :≡ (Const 268435449,[],NONE);
            116 :≡ (Add,[115; 114],SOME ⦕ 109; 111; 114; 115 ⦖);
            117 :≡ (Less,[111; 116],SOME ⦕ 109; 111; 116 ⦖);
            if_var 117 (move 124 111)
              do
                118 :≡ (Const 15,[],NONE);
                119 :≡ (Const (-268435457),[],NONE);
                120 :≡ (Mult,[119; 118],SOME ⦕ 109; 111; 118; 119 ⦖);
                121 :≡ (Const (-268435441),[],NONE);
                122 :≡ (Add,[121; 120],SOME ⦕ 109; 111; 120; 121 ⦖);
                123 :≡ (Add,[122; 111],SOME ⦕ 109; 111; 122 ⦖);
                move 124 123
              od;
            125 :≡ (EqualInt 0,[109],NONE);
            if_var 125 do 126 :≡ (Cons 2,[],NONE); raise 126 od
              do 127 :≡ (Div,[124; 109],SOME ⦕ 109; 124 ⦖); move 128 127 od;
            makespace 6 ⦕ 128 ⦖;
            129 :≡ (WordFromInt,[128],NONE);
            130 :≡ (WordShift W64 Lsl 32,[129],NONE);
            return 130
          od
          do
            131 :≡ (Const 15,[],NONE);
            132 :≡ (Const 268435457,[],NONE);
            133 :≡ (Mult,[132; 131],SOME ⦕ 0; 1; 131; 132 ⦖);
            134 :≡ (Const 268435441,[],NONE);
            135 :≡ (Add,[134; 133],SOME ⦕ 0; 1; 133; 134 ⦖);
            makespace 9 ⦕ 0; 1; 135 ⦖;
            136 :≡ (WordFromInt,[135],NONE);
            137 :≡ (WordShift W64 Lsr 32,[0],NONE);
            138 :≡ (WordToInt,[137],NONE);
            139 :≡ (Const 7,[],NONE);
            140 :≡ (Const 268435457,[],NONE);
            141 :≡ (Mult,[140; 139],SOME ⦕ 1; 136; 138; 139; 140 ⦖);
            142 :≡ (Const 268435449,[],NONE);
            143 :≡ (Add,[142; 141],SOME ⦕ 1; 136; 138; 141; 142 ⦖);
            144 :≡ (Less,[138; 143],SOME ⦕ 1; 136; 138; 143 ⦖);
            if_var 144 (move 151 138)
              do
                145 :≡ (Const 15,[],NONE);
                146 :≡ (Const (-268435457),[],NONE);
                147 :≡ (Mult,[146; 145],SOME ⦕ 1; 136; 138; 145; 146 ⦖);
                148 :≡ (Const (-268435441),[],NONE);
                149 :≡ (Add,[148; 147],SOME ⦕ 1; 136; 138; 147; 148 ⦖);
                150 :≡ (Add,[149; 138],SOME ⦕ 1; 136; 138; 149 ⦖);
                move 151 150
              od;
            makespace 6 ⦕ 1; 136; 151 ⦖;
            152 :≡ (WordShift W64 Lsr 32,[1],NONE);
            153 :≡ (WordToInt,[152],NONE);
            154 :≡ (Const 7,[],NONE);
            155 :≡ (Const 268435457,[],NONE);
            156 :≡ (Mult,[155; 154],SOME ⦕ 136; 151; 153; 154; 155 ⦖);
            157 :≡ (Const 268435449,[],NONE);
            158 :≡ (Add,[157; 156],SOME ⦕ 136; 151; 153; 156; 157 ⦖);
            159 :≡ (Less,[153; 158],SOME ⦕ 136; 151; 153; 158 ⦖);
            if_var 159 (move 166 153)
              do
                160 :≡ (Const 15,[],NONE);
                161 :≡ (Const (-268435457),[],NONE);
                162 :≡ (Mult,[161; 160],SOME ⦕ 136; 151; 153; 160; 161 ⦖);
                163 :≡ (Const (-268435441),[],NONE);
                164 :≡ (Add,[163; 162],SOME ⦕ 136; 151; 153; 162; 163 ⦖);
                165 :≡ (Add,[164; 153],SOME ⦕ 136; 151; 153; 164 ⦖);
                move 166 165
              od;
            167 :≡ (EqualInt 0,[151],NONE);
            if_var 167 do 168 :≡ (Cons 2,[],NONE); raise 168 od
              do
                169 :≡ (Div,[166; 151],SOME ⦕ 136; 151; 166 ⦖);
                move 170 169
              od;
            makespace 9 ⦕ 136; 170 ⦖;
            171 :≡ (WordFromInt,[170],NONE);
            172 :≡ (WordShift W64 Lsl 32,[171],NONE);
            173 :≡ (WordOp W64 Add,[172; 136],NONE);
            return 173
          od
      od
      do
        makespace 3 ⦕ 0; 1 ⦖;
        175 :≡ (Const 0,[],NONE);
        176 :≡ (WordFromInt,[175],NONE);
        call_wleq (177,⦕ 0; 1 ⦖) [176; 1] NONE;
        if_var 177
          do
            178 :≡ (Const 127,[],NONE);
            179 :≡ (Const 268435457,[],NONE);
            180 :≡ (Mult,[179; 178],SOME ⦕ 0; 1; 178; 179 ⦖);
            181 :≡ (Const 268435217,[],NONE);
            182 :≡ (Add,[181; 180],SOME ⦕ 0; 1; 180; 181 ⦖);
            183 :≡ (Const 268435457,[],NONE);
            184 :≡ (Mult,[183; 182],SOME ⦕ 0; 1; 182; 183 ⦖);
            185 :≡ (Const 112,[],NONE);
            186 :≡ (Add,[185; 184],SOME ⦕ 0; 1; 184; 185 ⦖);
            makespace 3 ⦕ 0; 1; 186 ⦖;
            187 :≡ (WordFromInt,[186],NONE);
            188 :≡ (Equal,[0; 187],SOME ⦕ 0; 1; 187 ⦖);
            move 190 188
          od do 189 :≡ (Cons 0,[],NONE); move 190 189 od;
        if_var 190 do 191 :≡ (Cons 1,[],NONE); move 208 191 od
          do
            makespace 3 ⦕ 0; 1 ⦖;
            192 :≡ (Const 0,[],NONE);
            193 :≡ (WordFromInt,[192],NONE);
            call_wleq (194,⦕ 0; 1 ⦖) [1; 193] NONE;
            if_var 194
              do
                195 :≡ (Const 127,[],NONE);
                196 :≡ (Const 268435457,[],NONE);
                197 :≡ (Mult,[196; 195],SOME ⦕ 0; 1; 195; 196 ⦖);
                198 :≡ (Const 268435185,[],NONE);
                199 :≡ (Add,[198; 197],SOME ⦕ 0; 1; 197; 198 ⦖);
                200 :≡ (Const 268435457,[],NONE);
                201 :≡ (Mult,[200; 199],SOME ⦕ 0; 1; 199; 200 ⦖);
                202 :≡ (Const 144,[],NONE);
                203 :≡ (Add,[202; 201],SOME ⦕ 0; 1; 201; 202 ⦖);
                makespace 3 ⦕ 0; 1; 203 ⦖;
                204 :≡ (WordFromInt,[203],NONE);
                205 :≡ (Equal,[0; 204],SOME ⦕ 0; 1; 204 ⦖);
                move 207 205
              od do 206 :≡ (Cons 0,[],NONE); move 207 206 od;
            move 208 207
          od;
        if_var 208
          do
            makespace 3 LN;
            209 :≡ (Const 0,[],NONE);
            210 :≡ (WordFromInt,[209],NONE);
            return 210
          od
          do
            211 :≡ (Const 127,[],NONE);
            212 :≡ (Const 268435457,[],NONE);
            213 :≡ (Mult,[212; 211],SOME ⦕ 0; 1; 211; 212 ⦖);
            214 :≡ (Const 268435217,[],NONE);
            215 :≡ (Add,[214; 213],SOME ⦕ 0; 1; 213; 214 ⦖);
            216 :≡ (Const 268435457,[],NONE);
            217 :≡ (Mult,[216; 215],SOME ⦕ 0; 1; 215; 216 ⦖);
            218 :≡ (Const 112,[],NONE);
            219 :≡ (Add,[218; 217],SOME ⦕ 0; 1; 217; 218 ⦖);
            makespace 3 ⦕ 0; 1; 219 ⦖;
            220 :≡ (WordFromInt,[219],NONE);
            221 :≡ (Equal,[1; 220],SOME ⦕ 0; 1; 220 ⦖);
            if_var 221
              do
                makespace 3 ⦕ 0; 1 ⦖;
                222 :≡ (Const 0,[],NONE);
                223 :≡ (WordFromInt,[222],NONE);
                call_word_lt (225,⦕ 0; 1 ⦖) [223; 0] NONE;
                move 227 225
              od do 226 :≡ (Cons 0,[],NONE); move 227 226 od;
            if_var 227
              do
                makespace 9 ⦕ 0 ⦖;
                228 :≡ (Const 0,[],NONE);
                229 :≡ (WordFromInt,[228],NONE);
                230 :≡ (WordShift W64 Lsr 32,[0],NONE);
                231 :≡ (WordToInt,[230],NONE);
                232 :≡ (Const 7,[],NONE);
                233 :≡ (Const 268435457,[],NONE);
                234 :≡ (Mult,[233; 232],SOME ⦕ 0; 229; 231; 232; 233 ⦖);
                235 :≡ (Const 268435449,[],NONE);
                236 :≡ (Add,[235; 234],SOME ⦕ 0; 229; 231; 234; 235 ⦖);
                237 :≡ (Less,[231; 236],SOME ⦕ 0; 229; 231; 236 ⦖);
                if_var 237 (move 244 231)
                  do
                    238 :≡ (Const 15,[],NONE);
                    239 :≡ (Const (-268435457),[],NONE);
                    240 :≡ (Mult,[239; 238],SOME ⦕ 0; 229; 231; 238; 239 ⦖);
                    241 :≡ (Const (-268435441),[],NONE);
                    242 :≡ (Add,[241; 240],SOME ⦕ 0; 229; 231; 240; 241 ⦖);
                    243 :≡ (Add,[242; 231],SOME ⦕ 0; 229; 231; 242 ⦖);
                    move 244 243
                  od;
                245 :≡ (Const 127,[],NONE);
                246 :≡ (Const 268435457,[],NONE);
                247 :≡ (Mult,[246; 245],SOME ⦕ 0; 229; 244; 245; 246 ⦖);
                248 :≡ (Const 268435217,[],NONE);
                249 :≡ (Add,[248; 247],SOME ⦕ 0; 229; 244; 247; 248 ⦖);
                250 :≡ (Const 268435457,[],NONE);
                251 :≡ (Mult,[250; 249],SOME ⦕ 0; 229; 244; 249; 250 ⦖);
                252 :≡ (Const 112,[],NONE);
                253 :≡ (Add,[252; 251],SOME ⦕ 0; 229; 244; 251; 252 ⦖);
                makespace 9 ⦕ 0; 229; 244; 253 ⦖;
                254 :≡ (WordFromInt,[253],NONE);
                255 :≡ (WordShift W64 Lsr 32,[254],NONE);
                256 :≡ (WordToInt,[255],NONE);
                257 :≡ (Const 7,[],NONE);
                258 :≡ (Const 268435457,[],NONE);
                259 :≡ (Mult,[258; 257],SOME ⦕ 0; 229; 244; 256; 257; 258 ⦖);
                260 :≡ (Const 268435449,[],NONE);
                261 :≡ (Add,[260; 259],SOME ⦕ 0; 229; 244; 256; 259; 260 ⦖);
                262 :≡ (Less,[256; 261],SOME ⦕ 0; 229; 244; 256; 261 ⦖);
                if_var 262 (move 269 256)
                  do
                    263 :≡ (Const 15,[],NONE);
                    264 :≡ (Const (-268435457),[],NONE);
                    265 :≡
                    (Mult,[264; 263],SOME ⦕ 0; 229; 244; 256; 263; 264 ⦖);
                    266 :≡ (Const (-268435441),[],NONE);
                    267 :≡ (Add,[266; 265],SOME ⦕ 0; 229; 244; 256; 265; 266 ⦖);
                    268 :≡ (Add,[267; 256],SOME ⦕ 0; 229; 244; 256; 267 ⦖);
                    move 269 268
                  od;
                270 :≡ (EqualInt 0,[244],NONE);
                if_var 270 do 271 :≡ (Cons 2,[],NONE); raise 271 od
                  do
                    272 :≡ (Mod,[269; 244],SOME ⦕ 0; 229; 244; 269 ⦖);
                    move 273 272
                  od;
                makespace 6 ⦕ 0; 229; 273 ⦖;
                274 :≡ (WordFromInt,[273],NONE);
                275 :≡ (WordShift W64 Lsl 32,[274],NONE);
                276 :≡ (Equal,[275; 229],SOME ⦕ 0; 229; 275 ⦖);
                if_var 276
                  do
                    makespace 6 ⦕ 0 ⦖;
                    277 :≡ (WordShift W64 Lsr 32,[0],NONE);
                    278 :≡ (WordToInt,[277],NONE);
                    279 :≡ (Const 7,[],NONE);
                    280 :≡ (Const 268435457,[],NONE);
                    281 :≡ (Mult,[280; 279],SOME ⦕ 278; 279; 280 ⦖);
                    282 :≡ (Const 268435449,[],NONE);
                    283 :≡ (Add,[282; 281],SOME ⦕ 278; 281; 282 ⦖);
                    284 :≡ (Less,[278; 283],SOME ⦕ 278; 283 ⦖);
                    if_var 284 (move 291 278)
                      do
                        285 :≡ (Const 15,[],NONE);
                        286 :≡ (Const (-268435457),[],NONE);
                        287 :≡ (Mult,[286; 285],SOME ⦕ 278; 285; 286 ⦖);
                        288 :≡ (Const (-268435441),[],NONE);
                        289 :≡ (Add,[288; 287],SOME ⦕ 278; 287; 288 ⦖);
                        290 :≡ (Add,[289; 278],SOME ⦕ 278; 289 ⦖);
                        move 291 290
                      od;
                    292 :≡ (Const 127,[],NONE);
                    293 :≡ (Const 268435457,[],NONE);
                    294 :≡ (Mult,[293; 292],SOME ⦕ 291; 292; 293 ⦖);
                    295 :≡ (Const 268435217,[],NONE);
                    296 :≡ (Add,[295; 294],SOME ⦕ 291; 294; 295 ⦖);
                    297 :≡ (Const 268435457,[],NONE);
                    298 :≡ (Mult,[297; 296],SOME ⦕ 291; 296; 297 ⦖);
                    299 :≡ (Const 112,[],NONE);
                    300 :≡ (Add,[299; 298],SOME ⦕ 291; 298; 299 ⦖);
                    makespace 9 ⦕ 291; 300 ⦖;
                    301 :≡ (WordFromInt,[300],NONE);
                    302 :≡ (WordShift W64 Lsr 32,[301],NONE);
                    303 :≡ (WordToInt,[302],NONE);
                    304 :≡ (Const 7,[],NONE);
                    305 :≡ (Const 268435457,[],NONE);
                    306 :≡ (Mult,[305; 304],SOME ⦕ 291; 303; 304; 305 ⦖);
                    307 :≡ (Const 268435449,[],NONE);
                    308 :≡ (Add,[307; 306],SOME ⦕ 291; 303; 306; 307 ⦖);
                    309 :≡ (Less,[303; 308],SOME ⦕ 291; 303; 308 ⦖);
                    if_var 309 (move 316 303)
                      do
                        310 :≡ (Const 15,[],NONE);
                        311 :≡ (Const (-268435457),[],NONE);
                        312 :≡ (Mult,[311; 310],SOME ⦕ 291; 303; 310; 311 ⦖);
                        313 :≡ (Const (-268435441),[],NONE);
                        314 :≡ (Add,[313; 312],SOME ⦕ 291; 303; 312; 313 ⦖);
                        315 :≡ (Add,[314; 303],SOME ⦕ 291; 303; 314 ⦖);
                        move 316 315
                      od;
                    317 :≡ (EqualInt 0,[291],NONE);
                    if_var 317 do 318 :≡ (Cons 2,[],NONE); raise 318 od
                      do
                        319 :≡ (Div,[316; 291],SOME ⦕ 291; 316 ⦖);
                        move 320 319
                      od;
                    makespace 6 ⦕ 320 ⦖;
                    321 :≡ (WordFromInt,[320],NONE);
                    322 :≡ (WordShift W64 Lsl 32,[321],NONE);
                    return 322
                  od
                  do
                    323 :≡ (Const 15,[],NONE);
                    324 :≡ (Const 268435457,[],NONE);
                    325 :≡ (Mult,[324; 323],SOME ⦕ 0; 323; 324 ⦖);
                    326 :≡ (Const 268435441,[],NONE);
                    327 :≡ (Add,[326; 325],SOME ⦕ 0; 325; 326 ⦖);
                    makespace 9 ⦕ 0; 327 ⦖;
                    328 :≡ (WordFromInt,[327],NONE);
                    329 :≡ (WordShift W64 Lsr 32,[0],NONE);
                    330 :≡ (WordToInt,[329],NONE);
                    331 :≡ (Const 7,[],NONE);
                    332 :≡ (Const 268435457,[],NONE);
                    333 :≡ (Mult,[332; 331],SOME ⦕ 328; 330; 331; 332 ⦖);
                    334 :≡ (Const 268435449,[],NONE);
                    335 :≡ (Add,[334; 333],SOME ⦕ 328; 330; 333; 334 ⦖);
                    336 :≡ (Less,[330; 335],SOME ⦕ 328; 330; 335 ⦖);
                    if_var 336 (move 343 330)
                      do
                        337 :≡ (Const 15,[],NONE);
                        338 :≡ (Const (-268435457),[],NONE);
                        339 :≡ (Mult,[338; 337],SOME ⦕ 328; 330; 337; 338 ⦖);
                        340 :≡ (Const (-268435441),[],NONE);
                        341 :≡ (Add,[340; 339],SOME ⦕ 328; 330; 339; 340 ⦖);
                        342 :≡ (Add,[341; 330],SOME ⦕ 328; 330; 341 ⦖);
                        move 343 342
                      od;
                    344 :≡ (Const 127,[],NONE);
                    345 :≡ (Const 268435457,[],NONE);
                    346 :≡ (Mult,[345; 344],SOME ⦕ 328; 343; 344; 345 ⦖);
                    347 :≡ (Const 268435217,[],NONE);
                    348 :≡ (Add,[347; 346],SOME ⦕ 328; 343; 346; 347 ⦖);
                    349 :≡ (Const 268435457,[],NONE);
                    350 :≡ (Mult,[349; 348],SOME ⦕ 328; 343; 348; 349 ⦖);
                    351 :≡ (Const 112,[],NONE);
                    352 :≡ (Add,[351; 350],SOME ⦕ 328; 343; 350; 351 ⦖);
                    makespace 9 ⦕ 328; 343; 352 ⦖;
                    353 :≡ (WordFromInt,[352],NONE);
                    354 :≡ (WordShift W64 Lsr 32,[353],NONE);
                    355 :≡ (WordToInt,[354],NONE);
                    356 :≡ (Const 7,[],NONE);
                    357 :≡ (Const 268435457,[],NONE);
                    358 :≡ (Mult,[357; 356],SOME ⦕ 328; 343; 355; 356; 357 ⦖);
                    359 :≡ (Const 268435449,[],NONE);
                    360 :≡ (Add,[359; 358],SOME ⦕ 328; 343; 355; 358; 359 ⦖);
                    361 :≡ (Less,[355; 360],SOME ⦕ 328; 343; 355; 360 ⦖);
                    if_var 361 (move 368 355)
                      do
                        362 :≡ (Const 15,[],NONE);
                        363 :≡ (Const (-268435457),[],NONE);
                        364 :≡
                        (Mult,[363; 362],SOME ⦕ 328; 343; 355; 362; 363 ⦖);
                        365 :≡ (Const (-268435441),[],NONE);
                        366 :≡
                        (Add,[365; 364],SOME ⦕ 328; 343; 355; 364; 365 ⦖);
                        367 :≡ (Add,[366; 355],SOME ⦕ 328; 343; 355; 366 ⦖);
                        move 368 367
                      od;
                    369 :≡ (EqualInt 0,[343],NONE);
                    if_var 369 do 370 :≡ (Cons 2,[],NONE); raise 370 od
                      do
                        371 :≡ (Div,[368; 343],SOME ⦕ 328; 343; 368 ⦖);
                        move 372 371
                      od;
                    makespace 9 ⦕ 328; 372 ⦖;
                    373 :≡ (WordFromInt,[372],NONE);
                    374 :≡ (WordShift W64 Lsl 32,[373],NONE);
                    375 :≡ (WordOp W64 Add,[374; 328],NONE);
                    return 375
                  od
              od
              do
                377 :≡ (Const 127,[],NONE);
                378 :≡ (Const 268435457,[],NONE);
                379 :≡ (Mult,[378; 377],SOME ⦕ 0; 1; 377; 378 ⦖);
                380 :≡ (Const 268435217,[],NONE);
                381 :≡ (Add,[380; 379],SOME ⦕ 0; 1; 379; 380 ⦖);
                382 :≡ (Const 268435457,[],NONE);
                383 :≡ (Mult,[382; 381],SOME ⦕ 0; 1; 381; 382 ⦖);
                384 :≡ (Const 112,[],NONE);
                385 :≡ (Add,[384; 383],SOME ⦕ 0; 1; 383; 384 ⦖);
                makespace 3 ⦕ 0; 1; 385 ⦖;
                386 :≡ (WordFromInt,[385],NONE);
                387 :≡ (Equal,[1; 386],SOME ⦕ 0; 1; 386 ⦖);
                if_var 387
                  do
                    makespace 3 ⦕ 0; 1 ⦖;
                    388 :≡ (Const 0,[],NONE);
                    389 :≡ (WordFromInt,[388],NONE);
                    call_wleq (390,⦕ 0; 1 ⦖) [0; 389] NONE;
                    move 392 390
                  od do 391 :≡ (Cons 0,[],NONE); move 392 391 od;
                if_var 392 do 393 :≡ (Cons 1,[],NONE); move 411 393 od
                  do
                    394 :≡ (Const 127,[],NONE);
                    395 :≡ (Const 268435457,[],NONE);
                    396 :≡ (Mult,[395; 394],SOME ⦕ 0; 1; 394; 395 ⦖);
                    397 :≡ (Const 268435185,[],NONE);
                    398 :≡ (Add,[397; 396],SOME ⦕ 0; 1; 396; 397 ⦖);
                    399 :≡ (Const 268435457,[],NONE);
                    400 :≡ (Mult,[399; 398],SOME ⦕ 0; 1; 398; 399 ⦖);
                    401 :≡ (Const 144,[],NONE);
                    402 :≡ (Add,[401; 400],SOME ⦕ 0; 1; 400; 401 ⦖);
                    makespace 3 ⦕ 0; 1; 402 ⦖;
                    403 :≡ (WordFromInt,[402],NONE);
                    404 :≡ (Equal,[0; 403],SOME ⦕ 0; 1; 403 ⦖);
                    if_var 404
                      do
                        makespace 3 ⦕ 0; 1 ⦖;
                        405 :≡ (Const 0,[],NONE);
                        406 :≡ (WordFromInt,[405],NONE);
                        call_word_lt (408,⦕ 0; 1 ⦖) [406; 0] NONE;
                        move 410 408
                      od do 409 :≡ (Cons 0,[],NONE); move 410 409 od;
                    move 411 410
                  od;
                if_var 411
                  do
                    412 :≡ (Const 127,[],NONE);
                    413 :≡ (Const 268435457,[],NONE);
                    414 :≡ (Mult,[413; 412],SOME ⦕ 412; 413 ⦖);
                    415 :≡ (Const 268435217,[],NONE);
                    416 :≡ (Add,[415; 414],SOME ⦕ 414; 415 ⦖);
                    417 :≡ (Const 268435457,[],NONE);
                    418 :≡ (Mult,[417; 416],SOME ⦕ 416; 417 ⦖);
                    419 :≡ (Const 112,[],NONE);
                    420 :≡ (Add,[419; 418],SOME ⦕ 418; 419 ⦖);
                    makespace 3 ⦕ 420 ⦖;
                    421 :≡ (WordFromInt,[420],NONE);
                    return 421
                  od
                  do
                    422 :≡ (Const 127,[],NONE);
                    423 :≡ (Const 268435457,[],NONE);
                    424 :≡ (Mult,[423; 422],SOME ⦕ 0; 1; 422; 423 ⦖);
                    425 :≡ (Const 268435185,[],NONE);
                    426 :≡ (Add,[425; 424],SOME ⦕ 0; 1; 424; 425 ⦖);
                    427 :≡ (Const 268435457,[],NONE);
                    428 :≡ (Mult,[427; 426],SOME ⦕ 0; 1; 426; 427 ⦖);
                    429 :≡ (Const 144,[],NONE);
                    430 :≡ (Add,[429; 428],SOME ⦕ 0; 1; 428; 429 ⦖);
                    makespace 3 ⦕ 0; 1; 430 ⦖;
                    431 :≡ (WordFromInt,[430],NONE);
                    432 :≡ (Equal,[1; 431],SOME ⦕ 0; 1; 431 ⦖);
                    if_var 432
                      do
                        makespace 9 ⦕ 0 ⦖;
                        433 :≡ (Const 0,[],NONE);
                        434 :≡ (WordFromInt,[433],NONE);
                        435 :≡ (WordShift W64 Lsr 32,[0],NONE);
                        436 :≡ (WordToInt,[435],NONE);
                        437 :≡ (Const 7,[],NONE);
                        438 :≡ (Const 268435457,[],NONE);
                        439 :≡ (Mult,[438; 437],SOME ⦕ 0; 434; 436; 437; 438 ⦖);
                        440 :≡ (Const 268435449,[],NONE);
                        441 :≡ (Add,[440; 439],SOME ⦕ 0; 434; 436; 439; 440 ⦖);
                        442 :≡ (Less,[436; 441],SOME ⦕ 0; 434; 436; 441 ⦖);
                        if_var 442 (move 449 436)
                          do
                            443 :≡ (Const 15,[],NONE);
                            444 :≡ (Const (-268435457),[],NONE);
                            445 :≡
                            (Mult,[444; 443],SOME ⦕ 0; 434; 436; 443; 444 ⦖);
                            446 :≡ (Const (-268435441),[],NONE);
                            447 :≡
                            (Add,[446; 445],SOME ⦕ 0; 434; 436; 445; 446 ⦖);
                            448 :≡ (Add,[447; 436],SOME ⦕ 0; 434; 436; 447 ⦖);
                            move 449 448
                          od;
                        450 :≡ (Const 127,[],NONE);
                        451 :≡ (Const 268435457,[],NONE);
                        452 :≡ (Mult,[451; 450],SOME ⦕ 0; 434; 449; 450; 451 ⦖);
                        453 :≡ (Const 268435185,[],NONE);
                        454 :≡ (Add,[453; 452],SOME ⦕ 0; 434; 449; 452; 453 ⦖);
                        455 :≡ (Const 268435457,[],NONE);
                        456 :≡ (Mult,[455; 454],SOME ⦕ 0; 434; 449; 454; 455 ⦖);
                        457 :≡ (Const 144,[],NONE);
                        458 :≡ (Add,[457; 456],SOME ⦕ 0; 434; 449; 456; 457 ⦖);
                        makespace 9 ⦕ 0; 434; 449; 458 ⦖;
                        459 :≡ (WordFromInt,[458],NONE);
                        460 :≡ (WordShift W64 Lsr 32,[459],NONE);
                        461 :≡ (WordToInt,[460],NONE);
                        462 :≡ (Const 7,[],NONE);
                        463 :≡ (Const 268435457,[],NONE);
                        464 :≡
                        (Mult,[463; 462],SOME ⦕ 0; 434; 449; 461; 462; 463 ⦖);
                        465 :≡ (Const 268435449,[],NONE);
                        466 :≡
                        (Add,[465; 464],SOME ⦕ 0; 434; 449; 461; 464; 465 ⦖);
                        467 :≡ (Less,[461; 466],SOME ⦕ 0; 434; 449; 461; 466 ⦖);
                        if_var 467 (move 474 461)
                          do
                            468 :≡ (Const 15,[],NONE);
                            469 :≡ (Const (-268435457),[],NONE);
                            470 :≡
                            (Mult,[469; 468],
                             SOME ⦕ 0; 434; 449; 461; 468; 469 ⦖);
                            471 :≡ (Const (-268435441),[],NONE);
                            472 :≡
                            (Add,[471; 470],SOME ⦕ 0; 434; 449; 461; 470; 471 ⦖);
                            473 :≡
                            (Add,[472; 461],SOME ⦕ 0; 434; 449; 461; 472 ⦖);
                            move 474 473
                          od;
                        475 :≡ (EqualInt 0,[449],NONE);
                        if_var 475 do 476 :≡ (Cons 2,[],NONE); raise 476 od
                          do
                            477 :≡ (Mod,[474; 449],SOME ⦕ 0; 434; 449; 474 ⦖);
                            move 478 477
                          od;
                        makespace 6 ⦕ 0; 434; 478 ⦖;
                        479 :≡ (WordFromInt,[478],NONE);
                        480 :≡ (WordShift W64 Lsl 32,[479],NONE);
                        481 :≡ (Equal,[480; 434],SOME ⦕ 0; 434; 480 ⦖);
                        if_var 481
                          do
                            makespace 6 ⦕ 0 ⦖;
                            482 :≡ (... ... Lsr 32,[0],NONE);
                            483 :≡ (WordToInt,[482],NONE);
                            484 :≡ (Const 7,[],NONE);
                            485 :≡ (Const 268435457,[],NONE);
                            486 :≡ (Mult,[485; ... ],SOME ⦕ 483; 484; 485 ⦖);
                            487 :≡ (Const 268435449,[],NONE);
                            488 :≡ (Add,[487; ... ],SOME ⦕ 483; 486; 487 ⦖);
                            489 :≡ (Less,[483; ... ],SOME ⦕ 483; 488 ⦖);
                            if_var 489 (move 496 483)
                              do
                                490 :≡ (... ... ,... ,... );
                                491 :≡ (... ... ,... ,... );
                                492 :≡ (Mult,... ,... );
                                493 :≡ (... ... ,... ,... );
                                494 :≡ (Add,... ,... );
                                495 :≡ (Add,... ,... );
                                move 496 495
                              od;
                            497 :≡ (Const 127,[],NONE);
                            498 :≡ (Const 268435457,[],NONE);
                            499 :≡ (Mult,[498; ... ],SOME ⦕ 496; 497; 498 ⦖);
                            500 :≡ (Const 268435185,[],NONE);
                            501 :≡ (Add,[500; ... ],SOME ⦕ 496; 499; 500 ⦖);
                            502 :≡ (Const 268435457,[],NONE);
                            503 :≡ (Mult,[502; ... ],SOME ⦕ 496; 501; 502 ⦖);
                            504 :≡ (Const 144,[],NONE);
                            505 :≡ (Add,[504; ... ],SOME ⦕ 496; 503; 504 ⦖);
                            makespace 9 ⦕ 496; 505 ⦖;
                            506 :≡ (WordFromInt,[505],NONE);
                            507 :≡ (... ... Lsr 32,[506],NONE);
                            508 :≡ (WordToInt,[507],NONE);
                            509 :≡ (Const 7,[],NONE);
                            510 :≡ (Const 268435457,[],NONE);
                            511 :≡
                            (Mult,[510; ... ],SOME ⦕ 496; 508; 509; 510 ⦖);
                            512 :≡ (Const 268435449,[],NONE);
                            513 :≡
                            (Add,[512; ... ],SOME ⦕ 496; 508; 511; 512 ⦖);
                            514 :≡ (Less,[508; ... ],SOME ⦕ 496; 508; 513 ⦖);
                            if_var 514 (move 521 508)
                              do
                                515 :≡ (... ... ,... ,... );
                                516 :≡ (... ... ,... ,... );
                                517 :≡ (Mult,... ,... );
                                518 :≡ (... ... ,... ,... );
                                519 :≡ (Add,... ,... );
                                520 :≡ (Add,... ,... );
                                move 521 520
                              od;
                            522 :≡ (EqualInt 0,[496],NONE);
                            if_var 522 do 523 :≡ (... ,... ); raise 523 od
                              do 524 :≡ (Div,... ,... ); move 525 524 od;
                            makespace 6 ⦕ 525 ⦖;
                            526 :≡ (WordFromInt,[525],NONE);
                            527 :≡ (... ... Lsl 32,[526],NONE);
                            return 527
                          od
                          do
                            528 :≡ (Const 15,[],NONE);
                            529 :≡ (Const 268435457,[],NONE);
                            530 :≡ (Mult,[529; 528],SOME ⦕ 0; 528; 529 ⦖);
                            531 :≡ (Const 268435441,[],NONE);
                            532 :≡ (Add,[531; 530],SOME ⦕ 0; 530; 531 ⦖);
                            makespace 9 ⦕ 0; 532 ⦖;
                            533 :≡ (WordFromInt,[532],NONE);
                            534 :≡ (WordShift W64 Lsr 32,[0],NONE);
                            535 :≡ (WordToInt,[534],NONE);
                            536 :≡ (Const 7,[],NONE);
                            537 :≡ (Const 268435457,[],NONE);
                            538 :≡
                            (Mult,[537; 536],SOME ⦕ 533; 535; 536; 537 ⦖);
                            539 :≡ (Const 268435449,[],NONE);
                            540 :≡ (Add,[539; 538],SOME ⦕ 533; 535; 538; 539 ⦖);
                            541 :≡ (Less,[535; 540],SOME ⦕ 533; 535; 540 ⦖);
                            if_var 541 (move 548 535)
                              do
                                542 :≡ (Const 15,[],NONE);
                                543 :≡ (Const (-... ),[],NONE);
                                544 :≡
                                (Mult,[... ; ... ],... ⦕ 533; 535; 542; 543 ⦖);
                                545 :≡ (Const (-... ),[],NONE);
                                546 :≡
                                (Add,[... ; ... ],... ⦕ 533; 535; 544; 545 ⦖);
                                547 :≡ (Add,[... ; ... ],... ⦕ 533; 535; 546 ⦖);
                                move 548 547
                              od;
                            549 :≡ (Const 127,[],NONE);
                            550 :≡ (Const 268435457,[],NONE);
                            551 :≡
                            (Mult,[550; 549],SOME ⦕ 533; 548; 549; 550 ⦖);
                            552 :≡ (Const 268435185,[],NONE);
                            553 :≡ (Add,[552; 551],SOME ⦕ 533; 548; 551; 552 ⦖);
                            554 :≡ (Const 268435457,[],NONE);
                            555 :≡
                            (Mult,[554; 553],SOME ⦕ 533; 548; 553; 554 ⦖);
                            556 :≡ (Const 144,[],NONE);
                            557 :≡ (Add,[556; 555],SOME ⦕ 533; 548; 555; 556 ⦖);
                            makespace 9 ⦕ 533; 548; 557 ⦖;
                            558 :≡ (WordFromInt,[557],NONE);
                            559 :≡ (WordShift W64 Lsr 32,[558],NONE);
                            560 :≡ (WordToInt,[559],NONE);
                            561 :≡ (Const 7,[],NONE);
                            562 :≡ (Const 268435457,[],NONE);
                            563 :≡
                            (Mult,[562; 561],SOME ⦕ 533; 548; 560; 561; 562 ⦖);
                            564 :≡ (Const 268435449,[],NONE);
                            565 :≡
                            (Add,[564; 563],SOME ⦕ 533; 548; 560; 563; 564 ⦖);
                            566 :≡
                            (Less,[560; 565],SOME ⦕ 533; 548; 560; 565 ⦖);
                            if_var 566 (move 573 560)
                              do
                                567 :≡ (Const 15,[],NONE);
                                568 :≡ (Const (-... ),[],NONE);
                                569 :≡
                                (Mult,[... ; ... ],
                                 ... ⦕ 533; 548; 560; 567; 568 ⦖);
                                570 :≡ (Const (-... ),[],NONE);
                                571 :≡
                                (Add,[... ; ... ],
                                 ... ⦕ 533; 548; 560; 569; 570 ⦖);
                                572 :≡
                                (Add,[... ; ... ],... ⦕ 533; 548; 560; 571 ⦖);
                                move 573 572
                              od;
                            574 :≡ (EqualInt 0,[548],NONE);
                            if_var 574
                              do 575 :≡ (... ... ,... ,... ); raise 575 od
                              do
                                576 :≡ (Div,[... ; ... ],... ⦕ 533; 548; 573 ⦖);
                                move 577 576
                              od;
                            makespace 9 ⦕ 533; 577 ⦖;
                            578 :≡ (WordFromInt,[577],NONE);
                            579 :≡ (WordShift W64 Lsl 32,[578],NONE);
                            580 :≡ (WordOp W64 Add,[579; 533],NONE);
                            return 580
                          od
                      od
                      do
                        582 :≡ (Const 255,[],NONE);
                        583 :≡ (Const 268435457,[],NONE);
                        584 :≡ (Mult,[583; 582],SOME ⦕ 582; 583 ⦖);
                        585 :≡ (Const 268434929,[],NONE);
                        586 :≡ (Add,[585; 584],SOME ⦕ 584; 585 ⦖);
                        587 :≡ (Const 268435457,[],NONE);
                        588 :≡ (Mult,[587; 586],SOME ⦕ 586; 587 ⦖);
                        589 :≡ (Const 272,[],NONE);
                        590 :≡ (Add,[589; 588],SOME ⦕ 588; 589 ⦖);
                        makespace 3 ⦕ 590 ⦖;
                        591 :≡ (WordFromInt,[590],NONE);
                        return 591
                      od
                  od
              od
          od
      od
  od

divu_clos [0; 1; 2] =
  tailcall_divu [0; 1]

divu [0; 1] =
  do
    3 :≡ (Const 127,[],NONE);
    4 :≡ (Const 268435457,[],NONE);
    5 :≡ (Mult,[4; 3],SOME ⦕ 0; 1; 3; 4 ⦖);
    6 :≡ (Const 268435217,[],NONE);
    7 :≡ (Add,[6; 5],SOME ⦕ 0; 1; 5; 6 ⦖);
    8 :≡ (Const 268435457,[],NONE);
    9 :≡ (Mult,[8; 7],SOME ⦕ 0; 1; 7; 8 ⦖);
    10 :≡ (Const 112,[],NONE);
    11 :≡ (Add,[10; 9],SOME ⦕ 0; 1; 9; 10 ⦖);
    makespace 3 ⦕ 0; 1; 11 ⦖;
    12 :≡ (WordFromInt,[11],NONE);
    call_word_lt (13,⦕ 0; 1 ⦖) [1; 12] NONE;
    if_var 13
      do
        14 :≡ (Const 127,[],NONE);
        15 :≡ (Const 268435457,[],NONE);
        16 :≡ (Mult,[15; 14],SOME ⦕ 0; 1; 14; 15 ⦖);
        17 :≡ (Const 268435185,[],NONE);
        18 :≡ (Add,[17; 16],SOME ⦕ 0; 1; 16; 17 ⦖);
        19 :≡ (Const 268435457,[],NONE);
        20 :≡ (Mult,[19; 18],SOME ⦕ 0; 1; 18; 19 ⦖);
        21 :≡ (Const 144,[],NONE);
        22 :≡ (Add,[21; 20],SOME ⦕ 0; 1; 20; 21 ⦖);
        makespace 3 ⦕ 0; 1; 22 ⦖;
        23 :≡ (WordFromInt,[22],NONE);
        call_word_lt (25,⦕ 0; 1 ⦖) [23; 1] NONE;
        if_var 25
          do
            27 :≡ (Const 127,[],NONE);
            28 :≡ (Const 268435457,[],NONE);
            29 :≡ (Mult,[28; 27],SOME ⦕ 0; 1; 27; 28 ⦖);
            30 :≡ (Const 268435217,[],NONE);
            31 :≡ (Add,[30; 29],SOME ⦕ 0; 1; 29; 30 ⦖);
            32 :≡ (Const 268435457,[],NONE);
            33 :≡ (Mult,[32; 31],SOME ⦕ 0; 1; 31; 32 ⦖);
            34 :≡ (Const 112,[],NONE);
            35 :≡ (Add,[34; 33],SOME ⦕ 0; 1; 33; 34 ⦖);
            makespace 3 ⦕ 0; 1; 35 ⦖;
            36 :≡ (WordFromInt,[35],NONE);
            call_word_lt (37,⦕ 0; 1 ⦖) [0; 36] NONE;
            if_var 37
              do
                38 :≡ (Const 127,[],NONE);
                39 :≡ (Const 268435457,[],NONE);
                40 :≡ (Mult,[39; 38],SOME ⦕ 0; 1; 38; 39 ⦖);
                41 :≡ (Const 268435185,[],NONE);
                42 :≡ (Add,[41; 40],SOME ⦕ 0; 1; 40; 41 ⦖);
                43 :≡ (Const 268435457,[],NONE);
                44 :≡ (Mult,[43; 42],SOME ⦕ 0; 1; 42; 43 ⦖);
                45 :≡ (Const 144,[],NONE);
                46 :≡ (Add,[45; 44],SOME ⦕ 0; 1; 44; 45 ⦖);
                makespace 3 ⦕ 0; 1; 46 ⦖;
                47 :≡ (WordFromInt,[46],NONE);
                call_word_lt (49,⦕ 0; 1 ⦖) [47; 0] NONE;
                move 51 49
              od do 50 :≡ (Cons 0,[],NONE); move 51 50 od;
            move 53 51
          od do 52 :≡ (Cons 0,[],NONE); move 53 52 od;
        move 55 53
      od do 54 :≡ (Cons 0,[],NONE); move 55 54 od;
    if_var 55
      do
        makespace 6 ⦕ 0; 1 ⦖;
        56 :≡ (WordShift W64 Lsr 32,[0],NONE);
        57 :≡ (WordToInt,[56],NONE);
        58 :≡ (Const 7,[],NONE);
        59 :≡ (Const 268435457,[],NONE);
        60 :≡ (Mult,[59; 58],SOME ⦕ 1; 57; 58; 59 ⦖);
        61 :≡ (Const 268435449,[],NONE);
        62 :≡ (Add,[61; 60],SOME ⦕ 1; 57; 60; 61 ⦖);
        63 :≡ (Less,[57; 62],SOME ⦕ 1; 57; 62 ⦖);
        if_var 63 (move 70 57)
          do
            64 :≡ (Const 15,[],NONE);
            65 :≡ (Const (-268435457),[],NONE);
            66 :≡ (Mult,[65; 64],SOME ⦕ 1; 57; 64; 65 ⦖);
            67 :≡ (Const (-268435441),[],NONE);
            68 :≡ (Add,[67; 66],SOME ⦕ 1; 57; 66; 67 ⦖);
            69 :≡ (Add,[68; 57],SOME ⦕ 1; 57; 68 ⦖);
            move 70 69
          od;
        makespace 6 ⦕ 1; 70 ⦖;
        71 :≡ (WordShift W64 Lsr 32,[1],NONE);
        72 :≡ (WordToInt,[71],NONE);
        73 :≡ (Const 7,[],NONE);
        74 :≡ (Const 268435457,[],NONE);
        75 :≡ (Mult,[74; 73],SOME ⦕ 70; 72; 73; 74 ⦖);
        76 :≡ (Const 268435449,[],NONE);
        77 :≡ (Add,[76; 75],SOME ⦕ 70; 72; 75; 76 ⦖);
        78 :≡ (Less,[72; 77],SOME ⦕ 70; 72; 77 ⦖);
        if_var 78 (move 85 72)
          do
            79 :≡ (Const 15,[],NONE);
            80 :≡ (Const (-268435457),[],NONE);
            81 :≡ (Mult,[80; 79],SOME ⦕ 70; 72; 79; 80 ⦖);
            82 :≡ (Const (-268435441),[],NONE);
            83 :≡ (Add,[82; 81],SOME ⦕ 70; 72; 81; 82 ⦖);
            84 :≡ (Add,[83; 72],SOME ⦕ 70; 72; 83 ⦖);
            move 85 84
          od;
        86 :≡ (EqualInt 0,[70],NONE);
        if_var 86 do 87 :≡ (Cons 2,[],NONE); raise 87 od
          do 88 :≡ (Div,[85; 70],SOME ⦕ 70; 85 ⦖); move 89 88 od;
        makespace 6 ⦕ 89 ⦖;
        90 :≡ (WordFromInt,[89],NONE);
        91 :≡ (WordShift W64 Lsl 32,[90],NONE);
        return 91
      od
      do
        makespace 3 ⦕ 0; 1 ⦖;
        92 :≡ (Const 0,[],NONE);
        93 :≡ (WordFromInt,[92],NONE);
        call_wleq (94,⦕ 0; 1 ⦖) [1; 93] NONE;
        if_var 94
          do
            95 :≡ (Const 127,[],NONE);
            96 :≡ (Const 268435457,[],NONE);
            97 :≡ (Mult,[96; 95],SOME ⦕ 0; 1; 95; 96 ⦖);
            98 :≡ (Const 268435217,[],NONE);
            99 :≡ (Add,[98; 97],SOME ⦕ 0; 1; 97; 98 ⦖);
            100 :≡ (Const 268435457,[],NONE);
            101 :≡ (Mult,[100; 99],SOME ⦕ 0; 1; 99; 100 ⦖);
            102 :≡ (Const 112,[],NONE);
            103 :≡ (Add,[102; 101],SOME ⦕ 0; 1; 101; 102 ⦖);
            makespace 3 ⦕ 0; 1; 103 ⦖;
            104 :≡ (WordFromInt,[103],NONE);
            105 :≡ (Equal,[0; 104],SOME ⦕ 0; 1; 104 ⦖);
            move 107 105
          od do 106 :≡ (Cons 0,[],NONE); move 107 106 od;
        if_var 107 do 108 :≡ (Cons 1,[],NONE); move 125 108 od
          do
            makespace 3 ⦕ 0; 1 ⦖;
            109 :≡ (Const 0,[],NONE);
            110 :≡ (WordFromInt,[109],NONE);
            call_wleq (111,⦕ 0; 1 ⦖) [110; 1] NONE;
            if_var 111
              do
                112 :≡ (Const 127,[],NONE);
                113 :≡ (Const 268435457,[],NONE);
                114 :≡ (Mult,[113; 112],SOME ⦕ 0; 1; 112; 113 ⦖);
                115 :≡ (Const 268435185,[],NONE);
                116 :≡ (Add,[115; 114],SOME ⦕ 0; 1; 114; 115 ⦖);
                117 :≡ (Const 268435457,[],NONE);
                118 :≡ (Mult,[117; 116],SOME ⦕ 0; 1; 116; 117 ⦖);
                119 :≡ (Const 144,[],NONE);
                120 :≡ (Add,[119; 118],SOME ⦕ 0; 1; 118; 119 ⦖);
                makespace 3 ⦕ 0; 1; 120 ⦖;
                121 :≡ (WordFromInt,[120],NONE);
                122 :≡ (Equal,[0; 121],SOME ⦕ 0; 1; 121 ⦖);
                move 124 122
              od do 123 :≡ (Cons 0,[],NONE); move 124 123 od;
            move 125 124
          od;
        if_var 125
          do
            makespace 3 LN;
            126 :≡ (Const 0,[],NONE);
            127 :≡ (WordFromInt,[126],NONE);
            return 127
          od
          do
            128 :≡ (Const 127,[],NONE);
            129 :≡ (Const 268435457,[],NONE);
            130 :≡ (Mult,[129; 128],SOME ⦕ 0; 1; 128; 129 ⦖);
            131 :≡ (Const 268435217,[],NONE);
            132 :≡ (Add,[131; 130],SOME ⦕ 0; 1; 130; 131 ⦖);
            133 :≡ (Const 268435457,[],NONE);
            134 :≡ (Mult,[133; 132],SOME ⦕ 0; 1; 132; 133 ⦖);
            135 :≡ (Const 112,[],NONE);
            136 :≡ (Add,[135; 134],SOME ⦕ 0; 1; 134; 135 ⦖);
            makespace 3 ⦕ 0; 1; 136 ⦖;
            137 :≡ (WordFromInt,[136],NONE);
            138 :≡ (Equal,[1; 137],SOME ⦕ 0; 1; 137 ⦖);
            if_var 138
              do
                makespace 3 ⦕ 0 ⦖;
                139 :≡ (Const 0,[],NONE);
                140 :≡ (WordFromInt,[139],NONE);
                call_word_lt (142,⦕ 0 ⦖) [140; 0] NONE;
                if_var 142
                  do
                    143 :≡ (Const 127,[],NONE);
                    144 :≡ (Const 268435457,[],NONE);
                    145 :≡ (Mult,[144; 143],SOME ⦕ 143; 144 ⦖);
                    146 :≡ (Const 268435185,[],NONE);
                    147 :≡ (Add,[146; 145],SOME ⦕ 145; 146 ⦖);
                    148 :≡ (Const 268435457,[],NONE);
                    149 :≡ (Mult,[148; 147],SOME ⦕ 147; 148 ⦖);
                    150 :≡ (Const 144,[],NONE);
                    151 :≡ (Add,[150; 149],SOME ⦕ 149; 150 ⦖);
                    makespace 3 ⦕ 151 ⦖;
                    152 :≡ (WordFromInt,[151],NONE);
                    return 152
                  od
                  do
                    makespace 6 ⦕ 0 ⦖;
                    153 :≡ (WordShift W64 Lsr 32,[0],NONE);
                    154 :≡ (WordToInt,[153],NONE);
                    155 :≡ (Const 7,[],NONE);
                    156 :≡ (Const 268435457,[],NONE);
                    157 :≡ (Mult,[156; 155],SOME ⦕ 154; 155; 156 ⦖);
                    158 :≡ (Const 268435449,[],NONE);
                    159 :≡ (Add,[158; 157],SOME ⦕ 154; 157; 158 ⦖);
                    160 :≡ (Less,[154; 159],SOME ⦕ 154; 159 ⦖);
                    if_var 160 (move 167 154)
                      do
                        161 :≡ (Const 15,[],NONE);
                        162 :≡ (Const (-268435457),[],NONE);
                        163 :≡ (Mult,[162; 161],SOME ⦕ 154; 161; 162 ⦖);
                        164 :≡ (Const (-268435441),[],NONE);
                        165 :≡ (Add,[164; 163],SOME ⦕ 154; 163; 164 ⦖);
                        166 :≡ (Add,[165; 154],SOME ⦕ 154; 165 ⦖);
                        move 167 166
                      od;
                    168 :≡ (Const 127,[],NONE);
                    169 :≡ (Const 268435457,[],NONE);
                    170 :≡ (Mult,[169; 168],SOME ⦕ 167; 168; 169 ⦖);
                    171 :≡ (Const 268435217,[],NONE);
                    172 :≡ (Add,[171; 170],SOME ⦕ 167; 170; 171 ⦖);
                    173 :≡ (Const 268435457,[],NONE);
                    174 :≡ (Mult,[173; 172],SOME ⦕ 167; 172; 173 ⦖);
                    175 :≡ (Const 112,[],NONE);
                    176 :≡ (Add,[175; 174],SOME ⦕ 167; 174; 175 ⦖);
                    makespace 9 ⦕ 167; 176 ⦖;
                    177 :≡ (WordFromInt,[176],NONE);
                    178 :≡ (WordShift W64 Lsr 32,[177],NONE);
                    179 :≡ (WordToInt,[178],NONE);
                    180 :≡ (Const 7,[],NONE);
                    181 :≡ (Const 268435457,[],NONE);
                    182 :≡ (Mult,[181; 180],SOME ⦕ 167; 179; 180; 181 ⦖);
                    183 :≡ (Const 268435449,[],NONE);
                    184 :≡ (Add,[183; 182],SOME ⦕ 167; 179; 182; 183 ⦖);
                    185 :≡ (Less,[179; 184],SOME ⦕ 167; 179; 184 ⦖);
                    if_var 185 (move 192 179)
                      do
                        186 :≡ (Const 15,[],NONE);
                        187 :≡ (Const (-268435457),[],NONE);
                        188 :≡ (Mult,[187; 186],SOME ⦕ 167; 179; 186; 187 ⦖);
                        189 :≡ (Const (-268435441),[],NONE);
                        190 :≡ (Add,[189; 188],SOME ⦕ 167; 179; 188; 189 ⦖);
                        191 :≡ (Add,[190; 179],SOME ⦕ 167; 179; 190 ⦖);
                        move 192 191
                      od;
                    193 :≡ (EqualInt 0,[167],NONE);
                    if_var 193 do 194 :≡ (Cons 2,[],NONE); raise 194 od
                      do
                        195 :≡ (Div,[192; 167],SOME ⦕ 167; 192 ⦖);
                        move 196 195
                      od;
                    makespace 6 ⦕ 196 ⦖;
                    197 :≡ (WordFromInt,[196],NONE);
                    198 :≡ (WordShift W64 Lsl 32,[197],NONE);
                    return 198
                  od
              od
              do
                200 :≡ (Const 127,[],NONE);
                201 :≡ (Const 268435457,[],NONE);
                202 :≡ (Mult,[201; 200],SOME ⦕ 0; 1; 200; 201 ⦖);
                203 :≡ (Const 268435185,[],NONE);
                204 :≡ (Add,[203; 202],SOME ⦕ 0; 1; 202; 203 ⦖);
                205 :≡ (Const 268435457,[],NONE);
                206 :≡ (Mult,[205; 204],SOME ⦕ 0; 1; 204; 205 ⦖);
                207 :≡ (Const 144,[],NONE);
                208 :≡ (Add,[207; 206],SOME ⦕ 0; 1; 206; 207 ⦖);
                makespace 3 ⦕ 0; 1; 208 ⦖;
                209 :≡ (WordFromInt,[208],NONE);
                210 :≡ (Equal,[1; 209],SOME ⦕ 0; 1; 209 ⦖);
                if_var 210
                  do
                    211 :≡ (Const 127,[],NONE);
                    212 :≡ (Const 268435457,[],NONE);
                    213 :≡ (Mult,[212; 211],SOME ⦕ 0; 211; 212 ⦖);
                    214 :≡ (Const 268435185,[],NONE);
                    215 :≡ (Add,[214; 213],SOME ⦕ 0; 213; 214 ⦖);
                    216 :≡ (Const 268435457,[],NONE);
                    217 :≡ (Mult,[216; 215],SOME ⦕ 0; 215; 216 ⦖);
                    218 :≡ (Const 144,[],NONE);
                    219 :≡ (Add,[218; 217],SOME ⦕ 0; 217; 218 ⦖);
                    makespace 3 ⦕ 0; 219 ⦖;
                    220 :≡ (WordFromInt,[219],NONE);
                    call_word_lt (222,⦕ 0 ⦖) [220; 0] NONE;
                    move 224 222
                  od do 223 :≡ (Cons 0,[],NONE); move 224 223 od;
                if_var 224
                  do
                    makespace 6 ⦕ 0 ⦖;
                    225 :≡ (WordShift W64 Lsr 32,[0],NONE);
                    226 :≡ (WordToInt,[225],NONE);
                    227 :≡ (Const 7,[],NONE);
                    228 :≡ (Const 268435457,[],NONE);
                    229 :≡ (Mult,[228; 227],SOME ⦕ 226; 227; 228 ⦖);
                    230 :≡ (Const 268435449,[],NONE);
                    231 :≡ (Add,[230; 229],SOME ⦕ 226; 229; 230 ⦖);
                    232 :≡ (Less,[226; 231],SOME ⦕ 226; 231 ⦖);
                    if_var 232 (move 239 226)
                      do
                        233 :≡ (Const 15,[],NONE);
                        234 :≡ (Const (-268435457),[],NONE);
                        235 :≡ (Mult,[234; 233],SOME ⦕ 226; 233; 234 ⦖);
                        236 :≡ (Const (-268435441),[],NONE);
                        237 :≡ (Add,[236; 235],SOME ⦕ 226; 235; 236 ⦖);
                        238 :≡ (Add,[237; 226],SOME ⦕ 226; 237 ⦖);
                        move 239 238
                      od;
                    240 :≡ (Const 127,[],NONE);
                    241 :≡ (Const 268435457,[],NONE);
                    242 :≡ (Mult,[241; 240],SOME ⦕ 239; 240; 241 ⦖);
                    243 :≡ (Const 268435185,[],NONE);
                    244 :≡ (Add,[243; 242],SOME ⦕ 239; 242; 243 ⦖);
                    245 :≡ (Const 268435457,[],NONE);
                    246 :≡ (Mult,[245; 244],SOME ⦕ 239; 244; 245 ⦖);
                    247 :≡ (Const 144,[],NONE);
                    248 :≡ (Add,[247; 246],SOME ⦕ 239; 246; 247 ⦖);
                    makespace 9 ⦕ 239; 248 ⦖;
                    249 :≡ (WordFromInt,[248],NONE);
                    250 :≡ (WordShift W64 Lsr 32,[249],NONE);
                    251 :≡ (WordToInt,[250],NONE);
                    252 :≡ (Const 7,[],NONE);
                    253 :≡ (Const 268435457,[],NONE);
                    254 :≡ (Mult,[253; 252],SOME ⦕ 239; 251; 252; 253 ⦖);
                    255 :≡ (Const 268435449,[],NONE);
                    256 :≡ (Add,[255; 254],SOME ⦕ 239; 251; 254; 255 ⦖);
                    257 :≡ (Less,[251; 256],SOME ⦕ 239; 251; 256 ⦖);
                    if_var 257 (move 264 251)
                      do
                        258 :≡ (Const 15,[],NONE);
                        259 :≡ (Const (-268435457),[],NONE);
                        260 :≡ (Mult,[259; 258],SOME ⦕ 239; 251; 258; 259 ⦖);
                        261 :≡ (Const (-268435441),[],NONE);
                        262 :≡ (Add,[261; 260],SOME ⦕ 239; 251; 260; 261 ⦖);
                        263 :≡ (Add,[262; 251],SOME ⦕ 239; 251; 262 ⦖);
                        move 264 263
                      od;
                    265 :≡ (EqualInt 0,[239],NONE);
                    if_var 265 do 266 :≡ (Cons 2,[],NONE); raise 266 od
                      do
                        267 :≡ (Div,[264; 239],SOME ⦕ 239; 264 ⦖);
                        move 268 267
                      od;
                    makespace 6 ⦕ 268 ⦖;
                    269 :≡ (WordFromInt,[268],NONE);
                    270 :≡ (WordShift W64 Lsl 32,[269],NONE);
                    return 270
                  od
                  do
                    271 :≡ (Const 15,[],NONE);
                    272 :≡ (Const 268435457,[],NONE);
                    273 :≡ (Mult,[272; 271],SOME ⦕ 271; 272 ⦖);
                    274 :≡ (Const 268435441,[],NONE);
                    275 :≡ (Add,[274; 273],SOME ⦕ 273; 274 ⦖);
                    makespace 3 ⦕ 275 ⦖;
                    276 :≡ (WordFromInt,[275],NONE);
                    return 276
                  od
              od
          od
      od
  od

divpair_clos [0; 1; 2; 3; 4] =
  tailcall_divpair [0; 1; 2; 3]

divpair [0; 1; 2; 3] =
  do
    call_wleq (4,⦕ 0; 1; 2; 3 ⦖) [0; 1] NONE;
    if_var 4
      do
        makespace 3 ⦕ 0; 1; 2; 3 ⦖;
        5 :≡ (Const 0,[],NONE);
        6 :≡ (WordFromInt,[5],NONE);
        call_wleq (7,⦕ 0; 1; 2; 3 ⦖) [6; 1] NONE;
        if_var 7
          do
            makespace 3 ⦕ 0; 1; 2; 3 ⦖;
            8 :≡ (Const 0,[],NONE);
            9 :≡ (WordFromInt,[8],NONE);
            call_wleq (10,⦕ 0; 1; 2; 3 ⦖) [0; 9] NONE;
            move 12 10
          od do 11 :≡ (Cons 0,[],NONE); move 12 11 od;
        if_var 12
          do
            13 :≡ (Const 127,[],NONE);
            14 :≡ (Const 268435457,[],NONE);
            15 :≡ (Mult,[14; 13],SOME ⦕ 13; 14 ⦖);
            16 :≡ (Const 268435185,[],NONE);
            17 :≡ (Add,[16; 15],SOME ⦕ 15; 16 ⦖);
            18 :≡ (Const 268435457,[],NONE);
            19 :≡ (Mult,[18; 17],SOME ⦕ 17; 18 ⦖);
            20 :≡ (Const 144,[],NONE);
            21 :≡ (Add,[20; 19],SOME ⦕ 19; 20 ⦖);
            makespace 3 ⦕ 21 ⦖;
            22 :≡ (WordFromInt,[21],NONE);
            23 :≡ (Const 127,[],NONE);
            24 :≡ (Const 268435457,[],NONE);
            25 :≡ (Mult,[24; 23],SOME ⦕ 22; 23; 24 ⦖);
            26 :≡ (Const 268435217,[],NONE);
            27 :≡ (Add,[26; 25],SOME ⦕ 22; 25; 26 ⦖);
            28 :≡ (Const 268435457,[],NONE);
            29 :≡ (Mult,[28; 27],SOME ⦕ 22; 27; 28 ⦖);
            30 :≡ (Const 112,[],NONE);
            31 :≡ (Add,[30; 29],SOME ⦕ 22; 29; 30 ⦖);
            makespace 6 ⦕ 22; 31 ⦖;
            32 :≡ (WordFromInt,[31],NONE);
            33 :≡ (Cons 0,[32; 22],NONE);
            return 33
          od
          do
            makespace 3 ⦕ 0; 1; 2; 3 ⦖;
            35 :≡ (Const 0,[],NONE);
            36 :≡ (WordFromInt,[35],NONE);
            call_word_lt (37,⦕ 0; 1; 2; 3 ⦖) [1; 36] NONE;
            if_var 37
              do
                makespace 3 ⦕ 0; 1; 2; 3 ⦖;
                38 :≡ (Const 0,[],NONE);
                39 :≡ (WordFromInt,[38],NONE);
                call_wleq (40,⦕ 0; 1; 2; 3 ⦖) [39; 3] NONE;
                if_var 40
                  do
                    makespace 3 ⦕ 0; 1; 2; 3 ⦖;
                    41 :≡ (Const 0,[],NONE);
                    42 :≡ (WordFromInt,[41],NONE);
                    call_wleq (43,⦕ 0; 1; 2; 3 ⦖) [2; 42] NONE;
                    move 45 43
                  od do 44 :≡ (Cons 0,[],NONE); move 45 44 od;
                if_var 45
                  do
                    makespace 3 ⦕ 1; 2; 3 ⦖;
                    46 :≡ (Const 0,[],NONE);
                    47 :≡ (WordFromInt,[46],NONE);
                    call_divu (48,⦕ 1; 3; 47 ⦖) [1; 2] NONE;
                    call_word_lt (49,⦕ 1; 3; 47; 48 ⦖) [47; 48] NONE;
                    if_var 49 (move 50 47) (move 50 48);
                    makespace 3 ⦕ 1; 3; 50 ⦖;
                    51 :≡ (Const 0,[],NONE);
                    52 :≡ (WordFromInt,[51],NONE);
                    call_divl (53,⦕ 50; 52 ⦖) [1; 3] NONE;
                    call_word_lt (54,⦕ 50; 52; 53 ⦖) [52; 53] NONE;
                    if_var 54 (move 55 53) (move 55 52);
                    makespace 3 ⦕ 50; 55 ⦖;
                    56 :≡ (Cons 0,[55; 50],NONE);
                    return 56
                  od
                  do
                    makespace 3 ⦕ 0; 1; 2; 3 ⦖;
                    57 :≡ (Const 0,[],NONE);
                    58 :≡ (WordFromInt,[57],NONE);
                    call_word_lt (60,⦕ 0; 1; 2; 3 ⦖) [58; 2] NONE;
                    if_var 60
                      do
                        call_divu (61,⦕ 1; 3 ⦖) [0; 2] NONE;
                        call_divl (62,⦕ 61 ⦖) [1; 3] NONE;
                        makespace 3 ⦕ 61; 62 ⦖;
                        63 :≡ (Cons 0,[62; 61],NONE);
                        return 63
                      od
                      do
                        call_divu (64,⦕ 0; 3 ⦖) [1; 2] NONE;
                        call_divl (65,⦕ 64 ⦖) [0; 3] NONE;
                        makespace 3 ⦕ 64; 65 ⦖;
                        66 :≡ (Cons 0,[65; 64],NONE);
                        return 66
                      od
                  od
              od
              do
                makespace 3 ⦕ 0; 1; 2; 3 ⦖;
                69 :≡ (Const 0,[],NONE);
                70 :≡ (WordFromInt,[69],NONE);
                call_wleq (71,⦕ 0; 1; 2; 3 ⦖) [70; 3] NONE;
                if_var 71
                  do
                    makespace 3 ⦕ 0; 1; 2; 3 ⦖;
                    72 :≡ (Const 0,[],NONE);
                    73 :≡ (WordFromInt,[72],NONE);
                    call_wleq (74,⦕ 0; 1; 2; 3 ⦖) [2; 73] NONE;
                    move 76 74
                  od do 75 :≡ (Cons 0,[],NONE); move 76 75 od;
                if_var 76
                  do
                    makespace 3 ⦕ 0; 2; 3 ⦖;
                    77 :≡ (Const 0,[],NONE);
                    78 :≡ (WordFromInt,[77],NONE);
                    call_divu (79,⦕ 0; 2; 78 ⦖) [0; 3] NONE;
                    call_word_lt (80,⦕ 0; 2; 78; 79 ⦖) [78; 79] NONE;
                    if_var 80 (move 81 78) (move 81 79);
                    makespace 3 ⦕ 0; 2; 81 ⦖;
                    82 :≡ (Const 0,[],NONE);
                    83 :≡ (WordFromInt,[82],NONE);
                    call_divl (84,⦕ 81; 83 ⦖) [0; 2] NONE;
                    call_word_lt (85,⦕ 81; 83; 84 ⦖) [83; 84] NONE;
                    if_var 85 (move 86 84) (move 86 83);
                    makespace 3 ⦕ 81; 86 ⦖;
                    87 :≡ (Cons 0,[86; 81],NONE);
                    return 87
                  od
                  do
                    makespace 3 ⦕ 0; 1; 2; 3 ⦖;
                    88 :≡ (Const 0,[],NONE);
                    89 :≡ (WordFromInt,[88],NONE);
                    call_word_lt (91,⦕ 0; 1; 2; 3 ⦖) [89; 2] NONE;
                    if_var 91
                      do
                        call_divu (92,⦕ 1; 2 ⦖) [0; 3] NONE;
                        call_divl (93,⦕ 92 ⦖) [1; 2] NONE;
                        makespace 3 ⦕ 92; 93 ⦖;
                        94 :≡ (Cons 0,[93; 92],NONE);
                        return 94
                      od
                      do
                        call_divu (95,⦕ 0; 2 ⦖) [1; 3] NONE;
                        call_divl (96,⦕ 95 ⦖) [0; 2] NONE;
                        makespace 3 ⦕ 95; 96 ⦖;
                        97 :≡ (Cons 0,[96; 95],NONE);
                        return 97
                      od
                  od
              od
          od
      od
      do
        102 :≡ (Const 127,[],NONE);
        103 :≡ (Const 268435457,[],NONE);
        104 :≡ (Mult,[103; 102],SOME ⦕ 102; 103 ⦖);
        105 :≡ (Const 268435185,[],NONE);
        106 :≡ (Add,[105; 104],SOME ⦕ 104; 105 ⦖);
        107 :≡ (Const 268435457,[],NONE);
        108 :≡ (Mult,[107; 106],SOME ⦕ 106; 107 ⦖);
        109 :≡ (Const 144,[],NONE);
        110 :≡ (Add,[109; 108],SOME ⦕ 108; 109 ⦖);
        makespace 3 ⦕ 110 ⦖;
        111 :≡ (WordFromInt,[110],NONE);
        112 :≡ (Const 127,[],NONE);
        113 :≡ (Const 268435457,[],NONE);
        114 :≡ (Mult,[113; 112],SOME ⦕ 111; 112; 113 ⦖);
        115 :≡ (Const 268435217,[],NONE);
        116 :≡ (Add,[115; 114],SOME ⦕ 111; 114; 115 ⦖);
        117 :≡ (Const 268435457,[],NONE);
        118 :≡ (Mult,[117; 116],SOME ⦕ 111; 116; 117 ⦖);
        119 :≡ (Const 112,[],NONE);
        120 :≡ (Add,[119; 118],SOME ⦕ 111; 118; 119 ⦖);
        makespace 6 ⦕ 111; 120 ⦖;
        121 :≡ (WordFromInt,[120],NONE);
        122 :≡ (Cons 0,[121; 111],NONE);
        return 122
      od
  od

cwtsem_clos [0; 1; 2] =
  tailcall_cwtsem [0; 1]

cwtsem [0; 1] =
  do
    3 :≡ (TagLenEq 3 1,[1],NONE);
    if_var 3
      do
        makespace 3 ⦕ 1 ⦖;
        4 :≡ (Const 0,[],NONE);
        5 :≡ (El,[1; 4],NONE);
        7 :≡ (Cons 0,[5; 5],NONE);
        return 7
      od
      do
        8 :≡ (TagLenEq 2 1,[1],NONE);
        if_var 8
          do
            9 :≡ (Const 0,[],NONE);
            10 :≡ (El,[1; 9],NONE);
            call_lookup (14,LN) [10; 0] NONE;
            15 :≡ (TagLenEq 0 0,[14],NONE);
            if_var 15
              do
                16 :≡ (Const 127,[],NONE);
                17 :≡ (Const 268435457,[],NONE);
                18 :≡ (Mult,[17; 16],SOME ⦕ 16; 17 ⦖);
                19 :≡ (Const 268435185,[],NONE);
                20 :≡ (Add,[19; 18],SOME ⦕ 18; 19 ⦖);
                21 :≡ (Const 268435457,[],NONE);
                22 :≡ (Mult,[21; 20],SOME ⦕ 20; 21 ⦖);
                23 :≡ (Const 144,[],NONE);
                24 :≡ (Add,[23; 22],SOME ⦕ 22; 23 ⦖);
                makespace 3 ⦕ 24 ⦖;
                25 :≡ (WordFromInt,[24],NONE);
                26 :≡ (Const 127,[],NONE);
                27 :≡ (Const 268435457,[],NONE);
                28 :≡ (Mult,[27; 26],SOME ⦕ 25; 26; 27 ⦖);
                29 :≡ (Const 268435217,[],NONE);
                30 :≡ (Add,[29; 28],SOME ⦕ 25; 28; 29 ⦖);
                31 :≡ (Const 268435457,[],NONE);
                32 :≡ (Mult,[31; 30],SOME ⦕ 25; 30; 31 ⦖);
                33 :≡ (Const 112,[],NONE);
                34 :≡ (Add,[33; 32],SOME ⦕ 25; 32; 33 ⦖);
                makespace 6 ⦕ 25; 34 ⦖;
                35 :≡ (WordFromInt,[34],NONE);
                36 :≡ (Cons 0,[35; 25],NONE);
                return 36
              od
              do
                37 :≡ (Const 0,[],NONE);
                38 :≡ (El,[14; 37],NONE);
                return 38
              od
          od
          do
            42 :≡ (TagLenEq 4 2,[1],NONE);
            if_var 42
              do
                43 :≡ (Const 0,[],NONE);
                44 :≡ (El,[1; 43],NONE);
                45 :≡ (Const 1,[],NONE);
                46 :≡ (El,[1; 45],NONE);
                call_cwtsem (49,⦕ 0; 46 ⦖) [0; 44] NONE;
                51 :≡ (Const 0,[],NONE);
                52 :≡ (El,[49; 51],NONE);
                53 :≡ (Const 1,[],NONE);
                54 :≡ (El,[49; 53],NONE);
                call_cwtsem (57,⦕ 52; 54 ⦖) [0; 46] NONE;
                59 :≡ (Const 0,[],NONE);
                60 :≡ (El,[57; 59],NONE);
                61 :≡ (Const 1,[],NONE);
                62 :≡ (El,[57; 61],NONE);
                call_pu (65,⦕ 52; 60 ⦖) [62; 54] NONE;
                call_pl (66,⦕ 65 ⦖) [60; 52] NONE;
                makespace 3 ⦕ 65; 66 ⦖;
                67 :≡ (Cons 0,[66; 65],NONE);
                return 67
              od
              do
                68 :≡ (TagLenEq 3 2,[1],NONE);
                if_var 68
                  do
                    69 :≡ (Const 0,[],NONE);
                    70 :≡ (El,[1; 69],NONE);
                    71 :≡ (Const 1,[],NONE);
                    72 :≡ (El,[1; 71],NONE);
                    call_cwtsem (75,⦕ 0; 72 ⦖) [0; 70] NONE;
                    77 :≡ (Const 0,[],NONE);
                    78 :≡ (El,[75; 77],NONE);
                    79 :≡ (Const 1,[],NONE);
                    80 :≡ (El,[75; 79],NONE);
                    call_cwtsem (83,⦕ 78; 80 ⦖) [0; 72] NONE;
                    85 :≡ (Const 0,[],NONE);
                    86 :≡ (El,[83; 85],NONE);
                    87 :≡ (Const 1,[],NONE);
                    88 :≡ (El,[83; 87],NONE);
                    call_wtimes (95,⦕ 78; 80; 86; 88 ⦖) [88; 80] NONE;
                    call_wtimes (96,⦕ 78; 80; 86; 88; 95 ⦖) [88; 78] NONE;
                    call_word_lt (97,⦕ 78; 80; 86; 88; 95; 96 ⦖) [95; 96] NONE;
                    if_var 97 (move 98 95) (move 98 96);
                    call_wtimes (99,⦕ 78; 80; 86; 88; 98 ⦖) [86; 80] NONE;
                    call_wtimes (100,⦕ 78; 80; 86; 88; 98; 99 ⦖) [86; 78] NONE;
                    call_word_lt (101,⦕ 78; 80; 86; 88; 98; 99; 100 ⦖)
                      [99; 100] NONE;
                    if_var 101 (move 102 99) (move 102 100);
                    call_word_lt (103,⦕ 78; 80; 86; 88; 98; 102 ⦖) [98; 102]
                      NONE;
                    if_var 103 (move 104 98) (move 104 102);
                    call_wtimes (109,⦕ 78; 80; 86; 88; 104 ⦖) [88; 80] NONE;
                    call_wtimes (110,⦕ 78; 80; 86; 104; 109 ⦖) [88; 78] NONE;
                    call_word_lt (111,⦕ 78; 80; 86; 104; 109; 110 ⦖) [109; 110]
                      NONE;
                    if_var 111 (move 112 110) (move 112 109);
                    call_wtimes (113,⦕ 78; 86; 104; 112 ⦖) [86; 80] NONE;
                    call_wtimes (114,⦕ 104; 112; 113 ⦖) [86; 78] NONE;
                    call_word_lt (115,⦕ 104; 112; 113; 114 ⦖) [113; 114] NONE;
                    if_var 115 (move 116 114) (move 116 113);
                    call_word_lt (117,⦕ 104; 112; 116 ⦖) [112; 116] NONE;
                    if_var 117 (move 118 116) (move 118 112);
                    makespace 3 ⦕ 104; 118 ⦖;
                    119 :≡ (Cons 0,[118; 104],NONE);
                    return 119
                  od
                  do
                    120 :≡ (TagLenEq 2 2,[1],NONE);
                    if_var 120
                      do
                        121 :≡ (Const 0,[],NONE);
                        122 :≡ (El,[1; 121],NONE);
                        123 :≡ (Const 1,[],NONE);
                        124 :≡ (El,[1; 123],NONE);
                        call_cwtsem (127,⦕ 0; 124 ⦖) [0; 122] NONE;
                        129 :≡ (Const 0,[],NONE);
                        130 :≡ (El,[127; 129],NONE);
                        131 :≡ (Const 1,[],NONE);
                        132 :≡ (El,[127; 131],NONE);
                        call_cwtsem (135,⦕ 130; 132 ⦖) [0; 124] NONE;
                        137 :≡ (Const 0,[],NONE);
                        138 :≡ (El,[135; 137],NONE);
                        139 :≡ (Const 1,[],NONE);
                        140 :≡ (El,[135; 139],NONE);
                        tailcall_divpair [140; 138; 132; 130]
                      od
                      do
                        144 :≡ (TagLenEq 1 2,[1],NONE);
                        if_var 144
                          do
                            145 :≡ (Const 0,[],NONE);
                            146 :≡ (El,[1; 145],NONE);
                            147 :≡ (Const 1,[],NONE);
                            148 :≡ (El,[1; 147],NONE);
                            call_cwtsem (151,⦕ 0; 148 ⦖) [0; 146] NONE;
                            153 :≡ (Const 0,[],NONE);
                            154 :≡ (El,[151; 153],NONE);
                            155 :≡ (Const 1,[],NONE);
                            156 :≡ (El,[151; 155],NONE);
                            call_cwtsem (159,⦕ 154; 156 ⦖) [0; 148] NONE;
                            161 :≡ (Const 0,[],NONE);
                            162 :≡ (El,[159; 161],NONE);
                            163 :≡ (Const 1,[],NONE);
                            164 :≡ (El,[159; 163],NONE);
                            call_word_lt (169,⦕ 154; 156; 162; 164 ⦖)
                              [164; 156] NONE;
                            if_var 169 (move 170 164) (move 170 156);
                            call_word_lt (173,⦕ 154; 162; 170 ⦖) [162; 154]
                              NONE;
                            if_var 173 (move 174 162) (move 174 154);
                            makespace 3 ⦕ 170; 174 ⦖;
                            175 :≡ (Cons 0,[174; 170],NONE);
                            return 175
                          od
                          do
                            176 :≡ (TagLenEq 0 2,[1],NONE);
                            if_var 176
                              do
                                177 :≡ (Const 0,[],NONE);
                                178 :≡ (El,[... ; ... ],NONE);
                                179 :≡ (Const 1,[],NONE);
                                180 :≡ (El,[... ; ... ],NONE);
                                call_cwtsem (... ,⦕ 0; 180 ⦖) [0; ... ] NONE;
                                185 :≡ (Const 0,[],NONE);
                                186 :≡ (El,[... ; ... ],NONE);
                                187 :≡ (Const 1,[],NONE);
                                188 :≡ (El,[... ; ... ],NONE);
                                call_cwtsem (... ,⦕ 186; 188 ⦖) [0; ... ] NONE;
                                193 :≡ (Const 0,[],NONE);
                                194 :≡ (El,[... ; ... ],NONE);
                                195 :≡ (Const 1,[],NONE);
                                196 :≡ (El,[... ; ... ],NONE);
                                call_word_lt (... ,⦕ 186; 188; 194; 196 ⦖)
                                  [196; ... ] NONE;
                                if_var 201 (... ... 188) (move 202 196);
                                call_word_lt (... ,⦕ 186; 194; 202 ⦖)
                                  [194; ... ] NONE;
                                if_var 205 (... ... 186) (move 206 194);
                                makespace 3 ⦕ 202; 206 ⦖;
                                207 :≡ (Cons 0,[... ; ... ],NONE);
                                return 207
                              od
                              do
                                208 :≡ (TagLenEq 1 1,[1],NONE);
                                if_var 208
                                  do
                                    209 :≡ (... ,... );
                                    210 :≡ (... ,... );
                                    ... ... NONE;
                                    214 :≡ (... ,... );
                                    215 :≡ (... ,... );
                                    216 :≡ (... ,... );
                                    217 :≡ (... ,... );
                                    ... ... NONE;
                                    ... ... NONE;
                                    ... ... ⦕ 220; 221 ⦖;
                                    222 :≡ (... ,... );
                                    return 222
                                  od
                                  do
                                    223 :≡ (... ... ,... ,... );
                                    224 :≡ (El,... ,... );
                                    ... ... [... ; ... ] NONE;
                                    228 :≡ (... ... ,... ,... );
                                    229 :≡ (El,... ,... );
                                    230 :≡ (... ... ,... ,... );
                                    231 :≡ (El,... ,... );
                                    ... ... [... ] NONE;
                                    ... ... [... ; ... ] NONE;
                                    ... ... (... ... ) (... ... 231);
                                    ... ... [... ] NONE;
                                    ... ... [... ; ... ] NONE;
                                    ... ... (... ... ) (... ... 229);
                                    makespace 3 ⦕ 237; 241 ⦖;
                                    242 :≡ (... ... ,... ,... );
                                    return 242
                                  od
                              od
                          od
                      od
                  od
              od
          od
      od
  od

cwfsem_clos [0; 1; 2] =
  tailcall_cwfsem [0; 1]

cwfsem [0; 1] =
  do
    3 :≡ (TagLenEq 4 2,[1],NONE);
    if_var 3
      do
        4 :≡ (Const 0,[],NONE);
        5 :≡ (El,[1; 4],NONE);
        6 :≡ (Const 1,[],NONE);
        7 :≡ (El,[1; 6],NONE);
        call_cwtsem (10,⦕ 0; 7 ⦖) [0; 5] NONE;
        12 :≡ (Const 0,[],NONE);
        13 :≡ (El,[10; 12],NONE);
        14 :≡ (Const 1,[],NONE);
        15 :≡ (El,[10; 14],NONE);
        call_cwtsem (18,⦕ 13; 15 ⦖) [0; 7] NONE;
        20 :≡ (Const 0,[],NONE);
        21 :≡ (El,[18; 20],NONE);
        22 :≡ (Const 1,[],NONE);
        23 :≡ (El,[18; 22],NONE);
        call_word_lt (28,⦕ 13; 23 ⦖) [21; 15] NONE;
        if_var 28
          do
            makespace 2 LN;
            29 :≡ (Cons 1,[],NONE);
            30 :≡ (Cons 0,[29],NONE);
            return 30
          od
          do
            call_wleq (31,LN) [13; 23] NONE;
            if_var 31
              do
                makespace 2 LN;
                32 :≡ (Cons 0,[],NONE);
                33 :≡ (Cons 0,[32],NONE);
                return 33
              od do 34 :≡ (Cons 0,[],NONE); return 34 od
          od
      od
      do
        37 :≡ (TagLenEq 3 2,[1],NONE);
        if_var 37
          do
            38 :≡ (Const 0,[],NONE);
            39 :≡ (El,[1; 38],NONE);
            40 :≡ (Const 1,[],NONE);
            41 :≡ (El,[1; 40],NONE);
            call_cwtsem (44,⦕ 0; 41 ⦖) [0; 39] NONE;
            46 :≡ (Const 0,[],NONE);
            47 :≡ (El,[44; 46],NONE);
            48 :≡ (Const 1,[],NONE);
            49 :≡ (El,[44; 48],NONE);
            call_cwtsem (52,⦕ 47; 49 ⦖) [0; 41] NONE;
            54 :≡ (Const 0,[],NONE);
            55 :≡ (El,[52; 54],NONE);
            56 :≡ (Const 1,[],NONE);
            57 :≡ (El,[52; 56],NONE);
            call_wleq (60,⦕ 47; 57 ⦖) [55; 49] NONE;
            if_var 60
              do
                makespace 2 LN;
                61 :≡ (Cons 1,[],NONE);
                62 :≡ (Cons 0,[61],NONE);
                return 62
              od
              do
                call_word_lt (65,LN) [47; 57] NONE;
                if_var 65
                  do
                    makespace 2 LN;
                    66 :≡ (Cons 0,[],NONE);
                    67 :≡ (Cons 0,[66],NONE);
                    return 67
                  od do 68 :≡ (Cons 0,[],NONE); return 68 od
              od
          od
          do
            71 :≡ (TagLenEq 2 2,[1],NONE);
            if_var 71
              do
                72 :≡ (Const 0,[],NONE);
                73 :≡ (El,[1; 72],NONE);
                74 :≡ (Const 1,[],NONE);
                75 :≡ (El,[1; 74],NONE);
                call_cwtsem (78,⦕ 0; 75 ⦖) [0; 73] NONE;
                80 :≡ (Const 0,[],NONE);
                81 :≡ (El,[78; 80],NONE);
                82 :≡ (Const 1,[],NONE);
                83 :≡ (El,[78; 82],NONE);
                call_cwtsem (86,⦕ 81; 83 ⦖) [0; 75] NONE;
                88 :≡ (Const 0,[],NONE);
                89 :≡ (El,[86; 88],NONE);
                90 :≡ (Const 1,[],NONE);
                91 :≡ (El,[86; 90],NONE);
                94 :≡ (Equal,[89; 91],SOME ⦕ 81; 83; 89; 91 ⦖);
                if_var 94
                  do
                    95 :≡ (Equal,[91; 83],SOME ⦕ 81; 83; 89; 91 ⦖);
                    move 97 95
                  od do 96 :≡ (Cons 0,[],NONE); move 97 96 od;
                if_var 97
                  do
                    98 :≡ (Equal,[83; 81],SOME ⦕ 81; 83; 89; 91 ⦖);
                    move 100 98
                  od do 99 :≡ (Cons 0,[],NONE); move 100 99 od;
                if_var 100
                  do
                    101 :≡ (Cons 0,[],NONE);
                    102 :≡ (Const 127,[],NONE);
                    103 :≡ (Const 268435457,[],NONE);
                    104 :≡
                    (Mult,[103; 102],SOME ⦕ 81; 83; 89; 91; 101; 102; 103 ⦖);
                    105 :≡ (Const 268435217,[],NONE);
                    106 :≡
                    (Add,[105; 104],SOME ⦕ 81; 83; 89; 91; 101; 104; 105 ⦖);
                    107 :≡ (Const 268435457,[],NONE);
                    108 :≡
                    (Mult,[107; 106],SOME ⦕ 81; 83; 89; 91; 101; 106; 107 ⦖);
                    109 :≡ (Const 112,[],NONE);
                    110 :≡
                    (Add,[109; 108],SOME ⦕ 81; 83; 89; 91; 101; 108; 109 ⦖);
                    makespace 3 ⦕ 81; 83; 89; 91; 101; 110 ⦖;
                    111 :≡ (WordFromInt,[110],NONE);
                    112 :≡ (Equal,[89; 111],SOME ⦕ 81; 83; 89; 91; 101; 111 ⦖);
                    113 :≡ (Equal,[112; 101],SOME ⦕ 81; 83; 89; 91; 101; 112 ⦖);
                    move 115 113
                  od do 114 :≡ (Cons 0,[],NONE); move 115 114 od;
                if_var 115
                  do
                    116 :≡ (Cons 0,[],NONE);
                    117 :≡ (Const 127,[],NONE);
                    118 :≡ (Const 268435457,[],NONE);
                    119 :≡
                    (Mult,[118; 117],SOME ⦕ 81; 83; 89; 91; 116; 117; 118 ⦖);
                    120 :≡ (Const 268435185,[],NONE);
                    121 :≡
                    (Add,[120; 119],SOME ⦕ 81; 83; 89; 91; 116; 119; 120 ⦖);
                    122 :≡ (Const 268435457,[],NONE);
                    123 :≡
                    (Mult,[122; 121],SOME ⦕ 81; 83; 89; 91; 116; 121; 122 ⦖);
                    124 :≡ (Const 144,[],NONE);
                    125 :≡
                    (Add,[124; 123],SOME ⦕ 81; 83; 89; 91; 116; 123; 124 ⦖);
                    makespace 3 ⦕ 81; 83; 89; 91; 116; 125 ⦖;
                    126 :≡ (WordFromInt,[125],NONE);
                    127 :≡ (Equal,[89; 126],SOME ⦕ 81; 83; 89; 91; 116; 126 ⦖);
                    128 :≡ (Equal,[127; 116],SOME ⦕ 81; 83; 89; 91; 116; 127 ⦖);
                    move 130 128
                  od do 129 :≡ (Cons 0,[],NONE); move 130 129 od;
                if_var 130
                  do
                    makespace 2 LN;
                    131 :≡ (Cons 1,[],NONE);
                    132 :≡ (Cons 0,[131],NONE);
                    return 132
                  od
                  do
                    call_word_lt (135,⦕ 81; 91 ⦖) [89; 83] NONE;
                    if_var 135
                      do
                        makespace 2 LN;
                        136 :≡ (Cons 0,[],NONE);
                        137 :≡ (Cons 0,[136],NONE);
                        return 137
                      od
                      do
                        call_word_lt (140,LN) [81; 91] NONE;
                        if_var 140
                          do
                            makespace 2 LN;
                            141 :≡ (Cons 0,[],NONE);
                            142 :≡ (Cons 0,[141],NONE);
                            return 142
                          od do 143 :≡ (Cons 0,[],NONE); return 143 od
                      od
                  od
              od
              do
                147 :≡ (TagLenEq 1 2,[1],NONE);
                if_var 147
                  do
                    148 :≡ (Const 0,[],NONE);
                    149 :≡ (El,[1; 148],NONE);
                    150 :≡ (Const 1,[],NONE);
                    151 :≡ (El,[1; 150],NONE);
                    call_cwfsem (154,⦕ 0; 151 ⦖) [0; 149] NONE;
                    155 :≡ (TagLenEq 0 0,[154],NONE);
                    if_var 155
                      do
                        call_cwfsem (156,LN) [0; 151] NONE;
                        157 :≡ (TagLenEq 0 0,[156],NONE);
                        if_var 157 do 158 :≡ (Cons 0,[],NONE); return 158 od
                          do
                            159 :≡ (Const 0,[],NONE);
                            160 :≡ (El,[156; ... ],NONE);
                            if_var 160 do 162 :≡ (... ,... ); return 162 od
                              do
                                makespace 2 LN;
                                163 :≡ (... ... ,... ,... );
                                164 :≡ (... ... ,... ,... );
                                return 164
                              od
                          od
                      od
                      do
                        167 :≡ (Const 0,[],NONE);
                        168 :≡ (El,[154; 167],NONE);
                        if_var 168
                          do
                            call_cwfsem (170,LN) [0; 151] NONE;
                            171 :≡ (TagLenEq 0 0,[170],NONE);
                            if_var 171 do 172 :≡ (... ,... ); return 172 od
                              do
                                173 :≡ (... ... ,... ,... );
                                174 :≡ (El,... ,... );
                                ... ... do ... ; ... ; ... ; ... od
                                  do
                                    ... ... ;
                                    ... :≡ ... ;
                                    ... :≡ ... ;
                                    ... ...
                                  od
                              od
                          od
                          do
                            makespace 2 LN;
                            182 :≡ (Cons 0,[],NONE);
                            183 :≡ (Cons 0,[182],NONE);
                            return 183
                          od
                      od
                  od
                  do
                    186 :≡ (TagLenEq 0 2,[1],NONE);
                    if_var 186
                      do
                        187 :≡ (Const 0,[],NONE);
                        188 :≡ (El,[1; 187],NONE);
                        189 :≡ (Const 1,[],NONE);
                        190 :≡ (El,[1; 189],NONE);
                        call_cwfsem (193,⦕ 0; 190 ⦖) [0; 188] NONE;
                        194 :≡ (TagLenEq 0 0,[193],NONE);
                        if_var 194
                          do
                            call_cwfsem (195,LN) [0; 190] NONE;
                            196 :≡ (TagLenEq 0 0,[195],NONE);
                            if_var 196 do 197 :≡ (... ,... ); return 197 od
                              do
                                198 :≡ (... ... ,... ,... );
                                199 :≡ (El,... ,... );
                                ... ... do ... ; ... ; ... ; ... od
                                  do ... :≡ ... ; ... ... od
                              od
                          od
                          do
                            206 :≡ (Const 0,[],NONE);
                            207 :≡ (El,[193; 206],NONE);
                            if_var 207
                              do
                                makespace 2 LN;
                                209 :≡ (... ... ,... ,... );
                                210 :≡ (... ... ,... ,... );
                                return 210
                              od
                              do
                                call_cwfsem (... ,... ) [0; ... ] NONE;
                                212 :≡ (... ... 0,[... ],NONE);
                                if_var 212 do ... :≡ ... ; ... ... od
                                  do
                                    214 :≡ (... ,... );
                                    215 :≡ (... ,... );
                                    ...
                                      do
                                        makespace 2 LN;
                                        217 :≡ (Cons 1,[],NONE);
                                        218 :≡ (Cons 0,[217],NONE);
                                        return 218
                                      od do ... ; ... ; ... ; ... od
                                  od
                              od
                          od
                      od
                      do
                        225 :≡ (Const 0,[],NONE);
                        226 :≡ (El,[1; 225],NONE);
                        call_cwfsem (228,LN) [0; 226] NONE;
                        229 :≡ (TagLenEq 0 0,[228],NONE);
                        if_var 229 do 230 :≡ (Cons 0,[],NONE); return 230 od
                          do
                            231 :≡ (Const 0,[],NONE);
                            232 :≡ (El,[228; 231],NONE);
                            if_var 232
                              do
                                makespace 2 LN;
                                234 :≡ (Cons 0,[],NONE);
                                235 :≡ (Cons 0,[... ],NONE);
                                return 235
                              od
                              do
                                makespace 2 LN;
                                236 :≡ (Cons 1,[],NONE);
                                237 :≡ (Cons 0,[236],NONE);
                                return 237
                              od
                          od
                      od
                  od
              od
          od
      od
  od

cwfsem_bi_val_clos [0; 1; 2] =
  tailcall_cwfsem_bi_val [0; 1]

cwfsem_bi_val [0; 1] =
  do
    call_cwfsem (2,LN) [0; 1] NONE;
    3 :≡ (TagLenEq 0 0,[2],NONE);
    if_var 3 do 4 :≡ (Cons 0,[],NONE); return 4 od
      do 5 :≡ (Const 0,[],NONE); 6 :≡ (El,[2; 5],NONE); return 6 od
  od

le_bytes_to_w32_clos [0; 1; 2; 3; 4] =
  tailcall_le_bytes_to_w32 [0; 1; 2; 3]

le_bytes_to_w32 [0; 1; 2; 3] =
  do
    makespace 54 ⦕ 0; 1; 2; 3 ⦖;
    4 :≡ (WordFromInt,[3],NONE);
    5 :≡ (WordShift W64 Lsr 0,[4],NONE);
    6 :≡ (WordShift W64 Lsl 32,[5],NONE);
    7 :≡ (WordFromInt,[2],NONE);
    8 :≡ (WordShift W64 Lsr 0,[7],NONE);
    9 :≡ (WordShift W64 Lsl 32,[8],NONE);
    10 :≡ (WordShift W64 Lsl 8,[9],NONE);
    11 :≡ (WordFromInt,[1],NONE);
    12 :≡ (WordShift W64 Lsr 0,[11],NONE);
    13 :≡ (WordShift W64 Lsl 32,[12],NONE);
    14 :≡ (WordShift W64 Lsl 16,[13],NONE);
    15 :≡ (WordFromInt,[0],NONE);
    16 :≡ (WordShift W64 Lsr 0,[15],NONE);
    17 :≡ (WordShift W64 Lsl 32,[16],NONE);
    18 :≡ (WordShift W64 Lsl 24,[17],NONE);
    19 :≡ (WordOp W64 Add,[18; 14],NONE);
    20 :≡ (WordOp W64 Add,[19; 10],NONE);
    21 :≡ (WordOp W64 Add,[20; 6],NONE);
    return 21
  od

w32_to_le_bytes_clos [0; 1] =
  tailcall_w32_to_le_bytes [0]

w32_to_le_bytes [0] =
  do
    1 :≡ (Const 256,[],NONE);
    2 :≡ (Const 4079,[],NONE);
    3 :≡ (Const 268435457,[],NONE);
    4 :≡ (Mult,[3; 2],SOME ⦕ 0; 1; 2; 3 ⦖);
    5 :≡ (Const 268431377,[],NONE);
    6 :≡ (Add,[5; 4],SOME ⦕ 0; 1; 4; 5 ⦖);
    makespace 18 ⦕ 0; 1; 6 ⦖;
    7 :≡ (WordFromInt,[6],NONE);
    8 :≡ (WordShift W64 Lsr 56,[0],NONE);
    9 :≡ (WordShift W64 Lsl 32,[8],NONE);
    10 :≡ (WordOp W64 Andw,[9; 7],NONE);
    11 :≡ (WordShift W64 Lsr 32,[10],NONE);
    12 :≡ (WordToInt,[11],NONE);
    13 :≡ (Mod,[12; 1],SOME ⦕ 0; 1; 12 ⦖);
    14 :≡ (WordShift W8 Lsl 0,[13],NONE);
    15 :≡ (Const 256,[],NONE);
    16 :≡ (Const 4079,[],NONE);
    17 :≡ (Const 268435457,[],NONE);
    18 :≡ (Mult,[17; 16],SOME ⦕ 0; 14; 15; 16; 17 ⦖);
    19 :≡ (Const 268431377,[],NONE);
    20 :≡ (Add,[19; 18],SOME ⦕ 0; 14; 15; 18; 19 ⦖);
    makespace 18 ⦕ 0; 14; 15; 20 ⦖;
    21 :≡ (WordFromInt,[20],NONE);
    22 :≡ (WordShift W64 Lsr 48,[0],NONE);
    23 :≡ (WordShift W64 Lsl 32,[22],NONE);
    24 :≡ (WordOp W64 Andw,[23; 21],NONE);
    25 :≡ (WordShift W64 Lsr 32,[24],NONE);
    26 :≡ (WordToInt,[25],NONE);
    27 :≡ (Mod,[26; 15],SOME ⦕ 0; 14; 15; 26 ⦖);
    makespace 3 ⦕ 0; 14; 27 ⦖;
    28 :≡ (WordShift W8 Lsl 0,[27],NONE);
    29 :≡ (Cons 0,[28; 14],NONE);
    30 :≡ (Const 256,[],NONE);
    31 :≡ (Const 4079,[],NONE);
    32 :≡ (Const 268435457,[],NONE);
    33 :≡ (Mult,[32; 31],SOME ⦕ 0; 29; 30; 31; 32 ⦖);
    34 :≡ (Const 268431377,[],NONE);
    35 :≡ (Add,[34; 33],SOME ⦕ 0; 29; 30; 33; 34 ⦖);
    makespace 18 ⦕ 0; 29; 30; 35 ⦖;
    36 :≡ (WordFromInt,[35],NONE);
    37 :≡ (WordShift W64 Lsr 40,[0],NONE);
    38 :≡ (WordShift W64 Lsl 32,[37],NONE);
    39 :≡ (WordOp W64 Andw,[38; 36],NONE);
    40 :≡ (WordShift W64 Lsr 32,[39],NONE);
    41 :≡ (WordToInt,[40],NONE);
    42 :≡ (Mod,[41; 30],SOME ⦕ 0; 29; 30; 41 ⦖);
    makespace 3 ⦕ 0; 29; 42 ⦖;
    43 :≡ (WordShift W8 Lsl 0,[42],NONE);
    44 :≡ (Cons 0,[43; 29],NONE);
    45 :≡ (Const 256,[],NONE);
    46 :≡ (Const 4079,[],NONE);
    47 :≡ (Const 268435457,[],NONE);
    48 :≡ (Mult,[47; 46],SOME ⦕ 0; 44; 45; 46; 47 ⦖);
    49 :≡ (Const 268431377,[],NONE);
    50 :≡ (Add,[49; 48],SOME ⦕ 0; 44; 45; 48; 49 ⦖);
    makespace 18 ⦕ 0; 44; 45; 50 ⦖;
    51 :≡ (WordFromInt,[50],NONE);
    52 :≡ (WordShift W64 Lsr 32,[0],NONE);
    53 :≡ (WordShift W64 Lsl 32,[52],NONE);
    54 :≡ (WordOp W64 Andw,[53; 51],NONE);
    55 :≡ (WordShift W64 Lsr 32,[54],NONE);
    56 :≡ (WordToInt,[55],NONE);
    57 :≡ (Mod,[56; 45],SOME ⦕ 44; 45; 56 ⦖);
    makespace 3 ⦕ 44; 57 ⦖;
    58 :≡ (WordShift W8 Lsl 0,[57],NONE);
    59 :≡ (Cons 0,[58; 44],NONE);
    return 59
  od

pack_w32_list_f_clos [0; 1; 2; 3] =
  tailcall_pack_w32_list_f [0; 1; 2]

pack_w32_list_f [0; 1; 2] =
  do
    4 :≡ (TagLenEq 0 0,[1],NONE);
    if_var 4 (return 2)
      do
        6 :≡ (Const 0,[],NONE);
        7 :≡ (El,[1; 6],NONE);
        8 :≡ (Const 1,[],NONE);
        9 :≡ (El,[1; 8],NONE);
        call_w32_to_le_bytes (12,⦕ 0; 2; 9 ⦖) [7] NONE;
        14 :≡ (Const 0,[],NONE);
        15 :≡ (El,[12; 14],NONE);
        16 :≡ (Const 1,[],NONE);
        17 :≡ (El,[12; 16],NONE);
        21 :≡ (Const 0,[],NONE);
        22 :≡ (El,[17; 21],NONE);
        23 :≡ (Const 1,[],NONE);
        24 :≡ (El,[17; 23],NONE);
        28 :≡ (Const 0,[],NONE);
        29 :≡ (El,[24; 28],NONE);
        30 :≡ (Const 1,[],NONE);
        31 :≡ (El,[24; 30],NONE);
        40 :≡ (BoundsCheckByte F,[2; 0],NONE);
        if_var 40 do 41 :≡ (UpdateByte,[2; 0; 15],NONE); move 43 41 od
          do 42 :≡ (Cons 3,[],NONE); raise 42 od;
        44 :≡ (Const 1,[],NONE);
        45 :≡ (Add,[44; 0],SOME ⦕ 0; 2; 9; 22; 29; 31; 44 ⦖);
        52 :≡ (BoundsCheckByte F,[2; 45],NONE);
        if_var 52 do 53 :≡ (UpdateByte,[2; 45; 22],NONE); move 55 53 od
          do 54 :≡ (Cons 3,[],NONE); raise 54 od;
        56 :≡ (Const 2,[],NONE);
        57 :≡ (Add,[56; 0],SOME ⦕ 0; 2; 9; 29; 31; 56 ⦖);
        64 :≡ (BoundsCheckByte F,[2; 57],NONE);
        if_var 64 do 65 :≡ (UpdateByte,[2; 57; 29],NONE); move 67 65 od
          do 66 :≡ (Cons 3,[],NONE); raise 66 od;
        68 :≡ (Const 3,[],NONE);
        69 :≡ (Add,[68; 0],SOME ⦕ 0; 2; 9; 31; 68 ⦖);
        76 :≡ (BoundsCheckByte F,[2; 69],NONE);
        if_var 76 do 77 :≡ (UpdateByte,[2; 69; 31],NONE); move 79 77 od
          do 78 :≡ (Cons 3,[],NONE); raise 78 od;
        80 :≡ (Const 4,[],NONE);
        81 :≡ (Add,[80; 0],SOME ⦕ 0; 2; 9; 80 ⦖);
        tailcall_pack_w32_list_f [81; 9; 2]
      od
  od

pack_w32_list_clos [0; 1] =
  tailcall_pack_w32_list [0]

pack_w32_list [0] =
  do
    makespace 3 ⦕ 0 ⦖;
    1 :≡ (Const 2,[],NONE);
    2 :≡ (Label_pack_w32_list_f_clos,[],NONE);
    3 :≡ (Cons 30,[2; 1],NONE);
    5 :≡ (Const 0,[],NONE);
    7 :≡ (Const 0,[],NONE);
    call_length_aux (8,⦕ 0; 5 ⦖) [7; 0] NONE;
    9 :≡ (Const 4,[],NONE);
    10 :≡ (Mult,[9; 8],SOME ⦕ 0; 5; 8; 9 ⦖);
    15 :≡ (Const 0,[],NONE);
    16 :≡ (Less,[10; 15],SOME ⦕ 0; 5; 10; 15 ⦖);
    if_var 16 do 17 :≡ (Cons 3,[],NONE); raise 17 od
      do 18 :≡ (RefByte F,[10; 5],SOME ⦕ 0; 5; 10 ⦖); move 19 18 od;
    20 :≡ (Const 0,[],NONE);
    tailcall_pack_w32_list_f [20; 0; 19]
  od

unpack_w32_list_f_clos [0; 1; 2; 3] =
  tailcall_unpack_w32_list_f [0; 1; 2]

unpack_w32_list_f [0; 1; 2] =
  do
    3 :≡ (Const 4,[],NONE);
    4 :≡ (Add,[3; 1],SOME ⦕ 0; 1; 2; 3 ⦖);
    5 :≡ (LessEq,[4; 0],SOME ⦕ 0; 1; 2; 4 ⦖);
    if_var 5
      do
        6 :≡ (Const 4,[],NONE);
        7 :≡ (Add,[6; 1],SOME ⦕ 0; 1; 2; 6 ⦖);
        call_unpack_w32_list_f (8,⦕ 1; 2 ⦖) [0; 7; 2] NONE;
        9 :≡ (Const 3,[],NONE);
        10 :≡ (Add,[9; 1],SOME ⦕ 1; 2; 8; 9 ⦖);
        15 :≡ (BoundsCheckByte F,[2; 10],NONE);
        if_var 15 do 16 :≡ (DerefByte,[2; 10],NONE); move 18 16 od
          do 17 :≡ (Cons 3,[],NONE); raise 17 od;
        19 :≡ (Const 2,[],NONE);
        20 :≡ (Add,[19; 1],SOME ⦕ 1; 2; 8; 18; 19 ⦖);
        25 :≡ (BoundsCheckByte F,[2; 20],NONE);
        if_var 25 do 26 :≡ (DerefByte,[2; 20],NONE); move 28 26 od
          do 27 :≡ (Cons 3,[],NONE); raise 27 od;
        29 :≡ (Const 1,[],NONE);
        30 :≡ (Add,[29; 1],SOME ⦕ 1; 2; 8; 18; 28; 29 ⦖);
        35 :≡ (BoundsCheckByte F,[2; 30],NONE);
        if_var 35 do 36 :≡ (DerefByte,[2; 30],NONE); move 38 36 od
          do 37 :≡ (Cons 3,[],NONE); raise 37 od;
        43 :≡ (BoundsCheckByte F,[2; 1],NONE);
        if_var 43 do 44 :≡ (DerefByte,[2; 1],NONE); move 46 44 od
          do 45 :≡ (Cons 3,[],NONE); raise 45 od;
        makespace 57 ⦕ 8; 18; 28; 38; 46 ⦖;
        51 :≡ (WordFromInt,[46],NONE);
        52 :≡ (WordShift W64 Lsr 0,[51],NONE);
        53 :≡ (WordShift W64 Lsl 32,[52],NONE);
        54 :≡ (WordFromInt,[38],NONE);
        55 :≡ (WordShift W64 Lsr 0,[54],NONE);
        56 :≡ (WordShift W64 Lsl 32,[55],NONE);
        57 :≡ (WordShift W64 Lsl 8,[56],NONE);
        58 :≡ (WordFromInt,[28],NONE);
        59 :≡ (WordShift W64 Lsr 0,[58],NONE);
        60 :≡ (WordShift W64 Lsl 32,[59],NONE);
        61 :≡ (WordShift W64 Lsl 16,[60],NONE);
        62 :≡ (WordFromInt,[18],NONE);
        63 :≡ (WordShift W64 Lsr 0,[62],NONE);
        64 :≡ (WordShift W64 Lsl 32,[63],NONE);
        65 :≡ (WordShift W64 Lsl 24,[64],NONE);
        66 :≡ (WordOp W64 Add,[65; 61],NONE);
        67 :≡ (WordOp W64 Add,[66; 57],NONE);
        68 :≡ (WordOp W64 Add,[67; 53],NONE);
        69 :≡ (Cons 0,[68; 8],NONE);
        return 69
      od do 70 :≡ (Cons 0,[],NONE); return 70 od
  od

unpack_w32_list_clos [0; 1] =
  tailcall_unpack_w32_list [0]

unpack_w32_list [0] =
  do
    makespace 3 ⦕ 0 ⦖;
    1 :≡ (Const 2,[],NONE);
    2 :≡ (Label_unpack_w32_list_f_clos,[],NONE);
    3 :≡ (Cons 30,[2; 1],NONE);
    4 :≡ (LengthByte,[0],NONE);
    5 :≡ (Const 0,[],NONE);
    tailcall_unpack_w32_list_f [4; 5; 0]
  od

to_string_clos [0; 1] =
  tailcall_to_string [0]

to_string [0] =
  do
    1 :≡ (LengthByte,[0],NONE);
    8 :≡ (Const 0,[],NONE);
    9 :≡ (Less,[1; 8],SOME ⦕ 0; 1; 8 ⦖);
    if_var 9 do 10 :≡ (Cons 3,[],NONE); raise 10 od
      do
        11 :≡ (BoundsCheckByte T,[0; 1],NONE);
        if_var 11
          do
            13 :≡ (Const 0,[],NONE);
            15 :≡ (Const 0,[],NONE);
            16 :≡ (RefByte T,[1; 15],SOME ⦕ 0; 1; 13; 15 ⦖);
            17 :≡ (Const 0,[],NONE);
            18 :≡ (CopyByte F,[0; 13; 1; 16; 17],SOME ⦕ 0; 1; 13; 16; 17 ⦖);
            return 16
          od do 20 :≡ (Cons 3,[],NONE); raise 20 od
      od
  od

const_clos [0; 1] =
  tailcall_const [0]

const [0] =
  do
    2 :≡ (Const 0,[],NONE);
    4 :≡ (Const 0,[],NONE);
    call_length_aux (5,⦕ 2 ⦖) [4; 0] NONE;
    6 :≡ (Const 4,[],NONE);
    7 :≡ (Mult,[6; 5],SOME ⦕ 2; 5; 6 ⦖);
    12 :≡ (Const 0,[],NONE);
    13 :≡ (Less,[7; 12],SOME ⦕ 2; 7; 12 ⦖);
    if_var 13 do 14 :≡ (Cons 3,[],NONE); raise 14 od
      do 15 :≡ (RefByte F,[7; 2],SOME ⦕ 2; 7 ⦖); move 16 15 od;
    17 :≡ (Const 0,[],NONE);
    18 :≡ (Const 0,[],NONE);
    19 :≡ (RefByte T,[18; 17],SOME ⦕ 16; 17; 18 ⦖);
    20 :≡ (FFI "const",[19; 16],SOME ⦕ 16; 19 ⦖);
    makespace 3 ⦕ 16 ⦖;
    22 :≡ (Const 2,[],NONE);
    23 :≡ (Label_unpack_w32_list_f_clos,[],NONE);
    24 :≡ (Cons 30,[23; 22],NONE);
    25 :≡ (LengthByte,[16],NONE);
    26 :≡ (Const 0,[],NONE);
    tailcall_unpack_w32_list_f [25; 26; 16]
  od

ctrl_clos [0; 1] =
  tailcall_ctrl [0]

ctrl [0] =
  do
    2 :≡ (Const 0,[],NONE);
    4 :≡ (Const 0,[],NONE);
    call_length_aux (5,⦕ 2 ⦖) [4; 0] NONE;
    6 :≡ (Const 4,[],NONE);
    7 :≡ (Mult,[6; 5],SOME ⦕ 2; 5; 6 ⦖);
    12 :≡ (Const 0,[],NONE);
    13 :≡ (Less,[7; 12],SOME ⦕ 2; 7; 12 ⦖);
    if_var 13 do 14 :≡ (Cons 3,[],NONE); raise 14 od
      do 15 :≡ (RefByte F,[7; 2],SOME ⦕ 2; 7 ⦖); move 16 15 od;
    17 :≡ (Const 0,[],NONE);
    18 :≡ (Const 0,[],NONE);
    19 :≡ (RefByte T,[18; 17],SOME ⦕ 16; 17; 18 ⦖);
    20 :≡ (FFI "ctrl",[19; 16],SOME ⦕ 16; 19 ⦖);
    makespace 3 ⦕ 16 ⦖;
    22 :≡ (Const 2,[],NONE);
    23 :≡ (Label_unpack_w32_list_f_clos,[],NONE);
    24 :≡ (Cons 30,[23; 22],NONE);
    25 :≡ (LengthByte,[16],NONE);
    26 :≡ (Const 0,[],NONE);
    tailcall_unpack_w32_list_f [25; 26; 16]
  od

sense_clos [0; 1] =
  tailcall_sense [0]

sense [0] =
  do
    2 :≡ (Const 0,[],NONE);
    4 :≡ (Const 0,[],NONE);
    call_length_aux (5,⦕ 2 ⦖) [4; 0] NONE;
    6 :≡ (Const 4,[],NONE);
    7 :≡ (Mult,[6; 5],SOME ⦕ 2; 5; 6 ⦖);
    12 :≡ (Const 0,[],NONE);
    13 :≡ (Less,[7; 12],SOME ⦕ 2; 7; 12 ⦖);
    if_var 13 do 14 :≡ (Cons 3,[],NONE); raise 14 od
      do 15 :≡ (RefByte F,[7; 2],SOME ⦕ 2; 7 ⦖); move 16 15 od;
    17 :≡ (Const 0,[],NONE);
    18 :≡ (Const 0,[],NONE);
    19 :≡ (RefByte T,[18; 17],SOME ⦕ 16; 17; 18 ⦖);
    20 :≡ (FFI "sense",[19; 16],SOME ⦕ 16; 19 ⦖);
    makespace 3 ⦕ 16 ⦖;
    22 :≡ (Const 2,[],NONE);
    23 :≡ (Label_unpack_w32_list_f_clos,[],NONE);
    24 :≡ (Cons 30,[23; 22],NONE);
    25 :≡ (LengthByte,[16],NONE);
    26 :≡ (Const 0,[],NONE);
    tailcall_unpack_w32_list_f [25; 26; 16]
  od

extCtrl_clos [0; 1; 2; 3] =
  tailcall_extCtrl [0; 1; 2]

extCtrl [0; 1; 2] =
  do
    3 :≡ (ListAppend,[1; 0],SOME ⦕ 0; 1; 2 ⦖);
    call_pack_w32_list (4,⦕ 2 ⦖) [3] NONE;
    call_to_string (5,⦕ 2 ⦖) [4] NONE;
    7 :≡ (Const 0,[],NONE);
    9 :≡ (Const 0,[],NONE);
    call_length_aux (10,⦕ 5; 7 ⦖) [9; 2] NONE;
    11 :≡ (Const 4,[],NONE);
    12 :≡ (Mult,[11; 10],SOME ⦕ 5; 7; 10; 11 ⦖);
    17 :≡ (Const 0,[],NONE);
    18 :≡ (Less,[12; 17],SOME ⦕ 5; 7; 12; 17 ⦖);
    if_var 18 do 19 :≡ (Cons 3,[],NONE); raise 19 od
      do 20 :≡ (RefByte F,[12; 7],SOME ⦕ 5; 7; 12 ⦖); move 21 20 od;
    22 :≡ (FFI "extCtrl",[5; 21],SOME ⦕ 5; 21 ⦖);
    makespace 3 ⦕ 21 ⦖;
    24 :≡ (Const 2,[],NONE);
    25 :≡ (Label_unpack_w32_list_f_clos,[],NONE);
    26 :≡ (Cons 30,[25; 24],NONE);
    27 :≡ (LengthByte,[21],NONE);
    28 :≡ (Const 0,[],NONE);
    tailcall_unpack_w32_list_f [27; 28; 21]
  od

lookup_fixed_clos_0 [0; 1] =
  do
    3 :≡ (Const 2,[],NONE);
    4 :≡ (El,[1; 3],NONE);
    call_lookup (5,LN) [0; 4] NONE;
    6 :≡ (TagLenEq 0 0,[5],NONE);
    if_var 6
      do
        makespace 3 LN;
        7 :≡ (Const 0,[],NONE);
        8 :≡ (WordFromInt,[7],NONE);
        return 8
      od do 9 :≡ (Const 0,[],NONE); 10 :≡ (El,[5; 9],NONE); return 10 od
  od

lookup_fixed_clos_1 [0; 1; 2] =
  tailcall_lookup_fixed [0; 1]

lookup_fixed [0; 1] =
  do
    makespace 4 ⦕ 0; 1 ⦖;
    2 :≡ (Const 0,[],NONE);
    3 :≡ (Label_lookup_fixed_clos_0,[],NONE);
    4 :≡ (Cons 30,[3; 2; 1],NONE);
    tailcall_map [0; 4]
  od

is_point_clos [0; 1] =
  tailcall_is_point [0]

is_point [0] =
  do
    4 :≡ (Const 1,[],NONE);
    5 :≡ (El,[0; 4],NONE);
    10 :≡ (Const 0,[],NONE);
    11 :≡ (El,[0; 10],NONE);
    15 :≡ (Equal,[11; 5],SOME ⦕ 5; 11 ⦖);
    return 15
  od

evaluate_default_v1_clos [0; 1] =
  do
    makespace 3 ⦕ 0; 1 ⦖;
    3 :≡ (Const 2,[],NONE);
    4 :≡ (El,[1; 3],NONE);
    5 :≡ (Const 3,[],NONE);
    6 :≡ (El,[1; 5],NONE);
    7 :≡ (Cons 0,[4; 4],NONE);
    call_zip (8,⦕ 0; 6 ⦖) [7] NONE;
    makespace 3 ⦕ 0; 6; 8 ⦖;
    9 :≡ (Cons 0,[6; 8],NONE);
    call_zip (10,⦕ 0 ⦖) [9] NONE;
    tailcall_cwtsem [10; 0]
  od

evaluate_default_clos [0; 1; 2; 3] =
  tailcall_evaluate_default [0; 1; 2]

evaluate_default [0; 1; 2] =
  do
    makespace 5 ⦕ 0; 1; 2 ⦖;
    3 :≡ (Const 0,[],NONE);
    4 :≡ (Label_evaluate_default_v1_clos,[],NONE);
    5 :≡ (Cons 30,[4; 3; 1; 2],NONE);
    call_map (6,LN) [0; 5] NONE;
    7 :≡ (Const 298,[],NONE);
    8 :≡ (GlobalsPtr,[],NONE);
    9 :≡ (El,[8; 7],NONE);
    call_all (10,⦕ 6 ⦖) [6; 9] NONE;
    if_var 10
      do
        11 :≡ (Const 2,[],NONE);
        12 :≡ (GlobalsPtr,[],NONE);
        13 :≡ (El,[12; 11],NONE);
        call_map (14,LN) [6; 13] NONE;
        makespace 2 ⦕ 14 ⦖;
        15 :≡ (Cons 0,[14],NONE);
        return 15
      od do 16 :≡ (Cons 0,[],NONE); return 16 od
  od

ctrl_monitor_clos_0 [0; 1; 2] =
  do
    5 :≡ (Const 2,[],NONE);
    6 :≡ (El,[2; 5],NONE);
    7 :≡ (Const 3,[],NONE);
    8 :≡ (El,[2; 7],NONE);
    9 :≡ (Const 4,[],NONE);
    10 :≡ (El,[2; 9],NONE);
    11 :≡ (Const 5,[],NONE);
    12 :≡ (El,[2; 11],NONE);
    13 :≡ (Const 6,[],NONE);
    14 :≡ (El,[2; 13],NONE);
    15 :≡ (Const 7,[],NONE);
    16 :≡ (El,[2; 15],NONE);
    17 :≡ (Const 8,[],NONE);
    18 :≡ (El,[2; 17],NONE);
    19 :≡ (Const 9,[],NONE);
    20 :≡ (El,[2; 19],NONE);
    21 :≡ (Const 10,[],NONE);
    22 :≡ (El,[2; 21],NONE);
    23 :≡ (Const 11,[],NONE);
    24 :≡ (El,[2; 23],NONE);
    25 :≡
    (ListAppend,[24; 6],SOME ⦕ 0; 1; 6; 8; 10; 12; 14; 16; 18; 20; 22; 24 ⦖);
    26 :≡
    (ListAppend,[25; 18],
     SOME ⦕ 0; 1; 6; 8; 10; 12; 14; 16; 18; 20; 22; 24; 25 ⦖);
    27 :≡
    (ListAppend,[22; 8],SOME ⦕ 0; 1; 6; 8; 10; 12; 14; 16; 18; 20; 22; 24; 26 ⦖);
    28 :≡
    (ListAppend,[27; 20],
     SOME ⦕ 0; 1; 6; 8; 10; 12; 14; 16; 18; 20; 22; 24; 26; 27 ⦖);
    makespace 3 ⦕ 0; 1; 6; 8; 10; 12; 14; 16; 18; 20; 22; 24; 26; 28 ⦖;
    29 :≡ (Cons 0,[26; 28],NONE);
    call_zip (30,⦕ 0; 1; 6; 8; 10; 12; 14; 16; 18; 20; 22; 24; 26; 28 ⦖) [29]
      NONE;
    makespace 4 ⦕ 0; 1; 6; 8; 10; 12; 14; 16; 18; 20; 22; 24; 26; 28; 30 ⦖;
    33 :≡ (Const 0,[],NONE);
    34 :≡ (Label_lookup_fixed_clos_0,[],NONE);
    35 :≡ (Cons 30,[34; 33; 30],NONE);
    call_map (36,⦕ 0; 6; 8; 10; 12; 14; 16; 18; 20; 22; 24; 26; 28 ⦖) [1; 35]
      NONE;
    makespace 15 ⦕ 0; 6; 8; 10; 12; 14; 16; 18; 20; 22; 24; 26; 28; 36 ⦖;
    37 :≡ (Cons 0,[],NONE);
    38 :≡ (Cons 0,[20; 37],NONE);
    39 :≡ (Cons 0,[8; 38],NONE);
    40 :≡ (Cons 0,[22; 39],NONE);
    41 :≡ (Cons 0,[10; 40],NONE);
    42 :≡ (Cons 0,[36; 41],NONE);
    call_concat (43,⦕ 0; 6; 10; 12; 14; 16; 18; 24; 26; 28 ⦖) [42] NONE;
    makespace 15 ⦕ 0; 6; 10; 12; 14; 16; 18; 24; 26; 28; 43 ⦖;
    44 :≡ (Cons 0,[],NONE);
    45 :≡ (Cons 0,[18; 44],NONE);
    46 :≡ (Cons 0,[6; 45],NONE);
    47 :≡ (Cons 0,[24; 46],NONE);
    48 :≡ (Cons 0,[14; 47],NONE);
    49 :≡ (Cons 0,[16; 48],NONE);
    call_concat (50,⦕ 0; 10; 12; 26; 28; 43 ⦖) [49] NONE;
    makespace 3 ⦕ 0; 10; 12; 26; 28; 43; 50 ⦖;
    51 :≡ (Cons 0,[43; 43],NONE);
    call_zip (52,⦕ 0; 10; 12; 26; 28; 50 ⦖) [51] NONE;
    makespace 3 ⦕ 0; 10; 12; 26; 28; 50; 52 ⦖;
    53 :≡ (Cons 0,[50; 52],NONE);
    call_zip (54,⦕ 0; 10; 12; 26; 28 ⦖) [53] NONE;
    call_cwfsem (56,⦕ 0; 10; 26; 28 ⦖) [54; 12] NONE;
    57 :≡ (TagLenEq 0 0,[56],NONE);
    if_var 57 do 58 :≡ (Cons 0,[],NONE); move 62 58 od
      do 59 :≡ (Const 0,[],NONE); 60 :≡ (El,[56; 59],NONE); move 62 60 od;
    if_var 62
      do
        63 :≡ (Const 0,[],NONE);
        64 :≡ (Const 2,[],NONE);
        65 :≡ (RefByte T,[64; 63],SOME ⦕ 10; 63; 64 ⦖);
        makespace 5 ⦕ 10; 65 ⦖;
        66 :≡ (Const 79,[],NONE);
        67 :≡ (Const 0,[],NONE);
        68 :≡ (UpdateByte,[65; 67; 66],NONE);
        69 :≡ (Const 75,[],NONE);
        70 :≡ (Const 1,[],NONE);
        71 :≡ (UpdateByte,[65; 70; 69],NONE);
        72 :≡ (Cons 0,[65; 10],NONE);
        73 :≡ (Cons 0,[72],NONE);
        return 73
      od
      do
        call_evaluate_default (74,LN) [0; 28; 26] NONE;
        76 :≡ (TagLenEq 0 0,[74],NONE);
        if_var 76 do 77 :≡ (Cons 0,[],NONE); return 77 od
          do
            78 :≡ (Const 0,[],NONE);
            79 :≡ (El,[74; 78],NONE);
            81 :≡ (Const 0,[],NONE);
            82 :≡ (Const 17,[],NONE);
            83 :≡ (RefByte T,[82; 81],SOME ⦕ 79; 81; 82 ⦖);
            makespace 5 ⦕ 79; 83 ⦖;
            84 :≡ (Const 67,[],NONE);
            85 :≡ (Const 0,[],NONE);
            86 :≡ (UpdateByte,[83; 85; 84],NONE);
            87 :≡ (Const 111,[],NONE);
            88 :≡ (Const 1,[],NONE);
            89 :≡ (UpdateByte,[83; 88; 87],NONE);
            90 :≡ (Const 110,[],NONE);
            91 :≡ (Const 2,[],NONE);
            92 :≡ (UpdateByte,[83; 91; 90],NONE);
            93 :≡ (Const 116,[],NONE);
            94 :≡ (Const 3,[],NONE);
            95 :≡ (UpdateByte,[83; 94; 93],NONE);
            96 :≡ (Const 114,[],NONE);
            97 :≡ (Const 4,[],NONE);
            98 :≡ (UpdateByte,[83; 97; 96],NONE);
            99 :≡ (Const 111,[],NONE);
            100 :≡ (Const 5,[],NONE);
            101 :≡ (UpdateByte,[83; 100; 99],NONE);
            102 :≡ (Const 108,[],NONE);
            103 :≡ (Const 6,[],NONE);
            104 :≡ (UpdateByte,[83; 103; 102],NONE);
            105 :≡ (Const 32,[],NONE);
            106 :≡ (Const 7,[],NONE);
            107 :≡ (UpdateByte,[83; 106; 105],NONE);
            108 :≡ (Const 86,[],NONE);
            109 :≡ (Const 8,[],NONE);
            110 :≡ (UpdateByte,[83; 109; 108],NONE);
            111 :≡ (Const 105,[],NONE);
            112 :≡ (Const 9,[],NONE);
            113 :≡ (UpdateByte,[83; 112; 111],NONE);
            114 :≡ (Const 111,[],NONE);
            115 :≡ (Const 10,[],NONE);
            116 :≡ (UpdateByte,[83; 115; 114],NONE);
            117 :≡ (Const 108,[],NONE);
            118 :≡ (Const 11,[],NONE);
            119 :≡ (UpdateByte,[83; 118; 117],NONE);
            120 :≡ (Const 97,[],NONE);
            121 :≡ (Const 12,[],NONE);
            122 :≡ (UpdateByte,[83; 121; 120],NONE);
            123 :≡ (Const 116,[],NONE);
            124 :≡ (Const 13,[],NONE);
            125 :≡ (UpdateByte,[83; 124; 123],NONE);
            126 :≡ (Const 105,[],NONE);
            127 :≡ (Const 14,[],NONE);
            128 :≡ (UpdateByte,[83; 127; 126],NONE);
            129 :≡ (Const 111,[],NONE);
            130 :≡ (Const 15,[],NONE);
            131 :≡ (UpdateByte,[83; 130; 129],NONE);
            132 :≡ (Const 110,[],NONE);
            133 :≡ (Const 16,[],NONE);
            134 :≡ (UpdateByte,[83; 133; 132],NONE);
            135 :≡ (Cons 0,[83; 79],NONE);
            136 :≡ (Cons 0,[135],NONE);
            return 136
          od
      od
  od

ctrl_monitor_clos_1 [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10] =
  tailcall_ctrl_monitor [0; 1; 2; 3; 4; 5; 6; 7; 8; 9]

ctrl_monitor [0; 1; 2; 3; 4; 5; 6; 7; 8; 9] =
  do
    makespace 13 ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 8; 9 ⦖;
    10 :≡ (Const 1,[],NONE);
    11 :≡ (Label_ctrl_monitor_clos_0,[],NONE);
    12 :≡ (Cons 30,[11; 10; 7; 3; 1; 9; 5; 0; 8; 4; 2; 6],NONE);
    return 12
  od

actuate_clos [0; 1; 2] =
  tailcall_actuate [0; 1]

actuate [0; 1] =
  do
    call_pack_w32_list (2,⦕ 1 ⦖) [0] NONE;
    3 :≡ (FFI "actuate",[1; 2],SOME ⦕ 1; 2 ⦖);
    4 :≡ (Cons 0,[],NONE);
    return 4
  od

stop_clos [0; 1] =
  tailcall_stop [0]

stop [0] =
  do
    3 :≡ (Const 0,[],NONE);
    8 :≡ (Const 1,[],NONE);
    9 :≡ (RefByte F,[8; 3],SOME ⦕ 3; 8 ⦖);
    10 :≡ (Const 0,[],NONE);
    11 :≡ (Const 0,[],NONE);
    12 :≡ (RefByte T,[11; 10],SOME ⦕ 9; 10; 11 ⦖);
    13 :≡ (FFI "stop",[12; 9],SOME ⦕ 9; 12 ⦖);
    15 :≡ (Const 0,[],NONE);
    20 :≡ (Const 0,[],NONE);
    21 :≡ (BoundsCheckByte F,[9; 20],NONE);
    if_var 21
      do 22 :≡ (Const 0,[],NONE); 23 :≡ (DerefByte,[9; 22],NONE); move 25 23 od
      do 24 :≡ (Cons 3,[],NONE); raise 24 od;
    28 :≡ (Cons 0,[],NONE);
    29 :≡ (Equal,[25; 15],SOME ⦕ 15; 25; 28 ⦖);
    30 :≡ (Equal,[29; 28],SOME ⦕ 28; 29 ⦖);
    return 30
  od

violation_clos [0; 1] =
  tailcall_violation [0]

violation [0] =
  do
    2 :≡ (Const 0,[],NONE);
    7 :≡ (Const 0,[],NONE);
    8 :≡ (RefByte F,[7; 2],SOME ⦕ 0; 2; 7 ⦖);
    9 :≡ (FFI "violation",[0; 8],SOME ⦕ 0; 8 ⦖);
    10 :≡ (Cons 0,[],NONE);
    return 10
  od

plant_monitor_clos [0; 1; 2; 3; 4; 5; 6; 7; 8; 9] =
  tailcall_plant_monitor [0; 1; 2; 3; 4; 5; 6; 7; 8]

plant_monitor [0; 1; 2; 3; 4; 5; 6; 7; 8] =
  do
    makespace 12 ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 8 ⦖;
    9 :≡ (Cons 0,[],NONE);
    10 :≡ (Cons 0,[7; 9],NONE);
    11 :≡ (Cons 0,[6; 10],NONE);
    12 :≡ (Cons 0,[5; 11],NONE);
    13 :≡ (Cons 0,[4; 12],NONE);
    call_concat (14,⦕ 0; 1; 2; 3; 8 ⦖) [13] NONE;
    makespace 12 ⦕ 0; 1; 2; 3; 8; 14 ⦖;
    15 :≡ (Cons 0,[],NONE);
    16 :≡ (Cons 0,[3; 15],NONE);
    17 :≡ (Cons 0,[2; 16],NONE);
    18 :≡ (Cons 0,[1; 17],NONE);
    19 :≡ (Cons 0,[0; 18],NONE);
    call_concat (20,⦕ 8; 14 ⦖) [19] NONE;
    makespace 3 ⦕ 8; 14; 20 ⦖;
    21 :≡ (Cons 0,[20; 20],NONE);
    call_zip (22,⦕ 8; 14 ⦖) [21] NONE;
    makespace 3 ⦕ 8; 14; 22 ⦖;
    23 :≡ (Cons 0,[14; 22],NONE);
    call_zip (24,⦕ 8 ⦖) [23] NONE;
    call_cwfsem (26,LN) [24; 8] NONE;
    27 :≡ (TagLenEq 0 0,[26],NONE);
    if_var 27 do 28 :≡ (Cons 0,[],NONE); return 28 od
      do 29 :≡ (Const 0,[],NONE); 30 :≡ (El,[26; 29],NONE); return 30 od
  od

init_monitor_clos [0; 1; 2; 3; 4; 5; 6; 7] =
  tailcall_init_monitor [0; 1; 2; 3; 4; 5; 6]

init_monitor [0; 1; 2; 3; 4; 5; 6] =
  do
    makespace 9 ⦕ 0; 1; 2; 3; 4; 5; 6 ⦖;
    7 :≡ (Cons 0,[],NONE);
    8 :≡ (Cons 0,[5; 7],NONE);
    9 :≡ (Cons 0,[4; 8],NONE);
    10 :≡ (Cons 0,[3; 9],NONE);
    call_concat (11,⦕ 0; 1; 2; 6 ⦖) [10] NONE;
    makespace 9 ⦕ 0; 1; 2; 6; 11 ⦖;
    12 :≡ (Cons 0,[],NONE);
    13 :≡ (Cons 0,[2; 12],NONE);
    14 :≡ (Cons 0,[1; 13],NONE);
    15 :≡ (Cons 0,[0; 14],NONE);
    call_concat (16,⦕ 6; 11 ⦖) [15] NONE;
    makespace 3 ⦕ 6; 11; 16 ⦖;
    17 :≡ (Cons 0,[16; 16],NONE);
    call_zip (18,⦕ 6; 11 ⦖) [17] NONE;
    makespace 3 ⦕ 6; 11; 18 ⦖;
    19 :≡ (Cons 0,[11; 18],NONE);
    call_zip (20,⦕ 6 ⦖) [19] NONE;
    call_cwfsem (22,LN) [20; 6] NONE;
    23 :≡ (TagLenEq 0 0,[22],NONE);
    if_var 23 do 24 :≡ (Cons 0,[],NONE); return 24 od
      do 25 :≡ (Const 0,[],NONE); 26 :≡ (El,[22; 25],NONE); return 26 od
  od

monitor_loop_body_clos_0 [0; 1; 2; 3] =
  do
    7 :≡ (Const 2,[],NONE);
    8 :≡ (El,[3; 7],NONE);
    9 :≡ (Const 3,[],NONE);
    10 :≡ (El,[3; 9],NONE);
    11 :≡ (Const 4,[],NONE);
    12 :≡ (El,[3; 11],NONE);
    13 :≡ (Const 5,[],NONE);
    14 :≡ (El,[3; 13],NONE);
    15 :≡ (Const 6,[],NONE);
    16 :≡ (El,[3; 15],NONE);
    17 :≡ (Const 7,[],NONE);
    18 :≡ (El,[3; 17],NONE);
    19 :≡ (Const 8,[],NONE);
    20 :≡ (El,[3; 19],NONE);
    21 :≡ (Const 9,[],NONE);
    22 :≡ (El,[3; 21],NONE);
    23 :≡ (Const 10,[],NONE);
    24 :≡ (El,[3; 23],NONE);
    25 :≡ (Const 11,[],NONE);
    26 :≡ (El,[3; 25],NONE);
    27 :≡ (Const 12,[],NONE);
    28 :≡ (El,[3; 27],NONE);
    29 :≡ (Cons 0,[],NONE);
    30 :≡ (Cons 0,[],NONE);
    call_stop (31,⦕ 0; 1; 2; 8; 10; 12; 14; 16; 18; 20; 22; 24; 26; 28 ⦖) [30]
      NONE;
    if_var 31 do 32 :≡ (Cons 0,[],NONE); return 32 od
      do
        call_extCtrl
          (33,⦕ 0; 1; 2; 8; 10; 12; 14; 16; 18; 20; 22; 24; 26; 28 ⦖)
          [0; 2; 16] NONE;
        46 :≡ (Const 300,[],NONE);
        47 :≡ (GlobalsPtr,[],NONE);
        48 :≡ (El,[47; 46],NONE);
        49 :≡ (Const 1,[],NONE);
        50 :≡ (El,[48; 49],NONE);
        51 :≡ (EqualInt 1,[50],NONE);
        if_var 51
          do
            52 :≡ (Const 0,[],NONE);
            53 :≡ (El,[48; 52],NONE);
            call
              (54,⦕ 0; 1; 2; 8; 10; 12; 14; 16; 18; 20; 22; 24; 26; 28; 33 ⦖)
              NONE [8; 20; 48; 53] NONE;
            move 56 54
          od
          do
            call_bvl_stub_1
              (55,⦕ 0; 1; 2; 8; 10; 12; 14; 16; 18; 20; 22; 24; 26; 28; 33 ⦖)
              [8; 20; 48] NONE;
            move 56 55
          od;
        57 :≡ (Const 1,[],NONE);
        58 :≡ (El,[56; 57],NONE);
        59 :≡ (EqualInt 9,[58],NONE);
        if_var 59
          do
            60 :≡ (Const 0,[],NONE);
            61 :≡ (El,[56; 60],NONE);
            call (62,⦕ 0; 2; 8; 10; 12; 14; 16; 18; 20; 22; 24; 26; 28 ⦖) NONE
              [18; 12; 24; 33; 0; 1; 2; 16; 28; 22; 56; ... ] NONE;
            move 64 62
          od
          do
            call_bvl_stub_9
              (63,⦕ 0; 2; 8; 10; 12; 14; 16; 18; 20; 22; 24; 26; 28 ⦖)
              [18; 12; 24; 33; 0; 1; 2; 16; 28; 22; 56] NONE;
            move 64 63
          od;
        66 :≡ (TagLenEq 0 0,[64],NONE);
        if_var 66
          do
            67 :≡ (Const 0,[],NONE);
            68 :≡ (Const 18,[],NONE);
            69 :≡ (RefByte T,[68; 67],SOME ⦕ 67; 68 ⦖);
            70 :≡ (Const 79,[],NONE);
            71 :≡ (Const 0,[],NONE);
            72 :≡ (UpdateByte,[69; 71; 70],NONE);
            73 :≡ (Const 118,[],NONE);
            74 :≡ (Const 1,[],NONE);
            75 :≡ (UpdateByte,[69; 74; 73],NONE);
            76 :≡ (Const 101,[],NONE);
            77 :≡ (Const 2,[],NONE);
            78 :≡ (UpdateByte,[69; 77; 76],NONE);
            79 :≡ (Const 114,[],NONE);
            80 :≡ (Const 3,[],NONE);
            81 :≡ (UpdateByte,[69; 80; 79],NONE);
            82 :≡ (Const 102,[],NONE);
            83 :≡ (Const 4,[],NONE);
            84 :≡ (UpdateByte,[69; 83; 82],NONE);
            85 :≡ (Const 108,[],NONE);
            86 :≡ (Const 5,[],NONE);
            87 :≡ (UpdateByte,[69; 86; 85],NONE);
            88 :≡ (Const 111,[],NONE);
            89 :≡ (Const 6,[],NONE);
            90 :≡ (UpdateByte,[69; 89; 88],NONE);
            91 :≡ (Const 119,[],NONE);
            92 :≡ (Const 7,[],NONE);
            93 :≡ (UpdateByte,[69; 92; 91],NONE);
            94 :≡ (Const 32,[],NONE);
            95 :≡ (Const 8,[],NONE);
            96 :≡ (UpdateByte,[69; 95; 94],NONE);
            97 :≡ (Const 86,[],NONE);
            98 :≡ (Const 9,[],NONE);
            99 :≡ (UpdateByte,[69; 98; 97],NONE);
            100 :≡ (Const 105,[],NONE);
            101 :≡ (Const 10,[],NONE);
            102 :≡ (UpdateByte,[69; 101; 100],NONE);
            103 :≡ (Const 111,[],NONE);
            104 :≡ (Const 11,[],NONE);
            105 :≡ (UpdateByte,[69; 104; 103],NONE);
            106 :≡ (Const 108,[],NONE);
            107 :≡ (Const 12,[],NONE);
            108 :≡ (UpdateByte,[69; 107; 106],NONE);
            109 :≡ (Const 97,[],NONE);
            110 :≡ (Const 13,[],NONE);
            111 :≡ (UpdateByte,[69; 110; 109],NONE);
            112 :≡ (Const 116,[],NONE);
            113 :≡ (Const 14,[],NONE);
            114 :≡ (UpdateByte,[69; 113; 112],NONE);
            115 :≡ (Const 105,[],NONE);
            116 :≡ (Const 15,[],NONE);
            117 :≡ (UpdateByte,[69; 116; 115],NONE);
            118 :≡ (Const 111,[],NONE);
            119 :≡ (Const 16,[],NONE);
            120 :≡ (UpdateByte,[69; 119; 118],NONE);
            121 :≡ (Const 110,[],NONE);
            122 :≡ (Const 17,[],NONE);
            123 :≡ (UpdateByte,[69; 122; 121],NONE);
            tailcall_violation [69]
          od
          do
            125 :≡ (Const 0,[],NONE);
            126 :≡ (El,[64; 125],NONE);
            127 :≡ (Const 0,[],NONE);
            128 :≡ (El,[126; 127],NONE);
            129 :≡ (Const 1,[],NONE);
            130 :≡ (El,[126; 129],NONE);
            call_pack_w32_list
              (135,
               ⦕ 0; 2; 8; 10; 12; 14; 16; 18; 20; 22; 24; 26; 28; 128; 130 ⦖)
              [130] NONE;
            136 :≡
            (FFI "actuate",[128; 135],
             SOME
               ⦕
                 0; 2; 8; 10; 12; 14; 16; 18; 20; 22; 24; 26; 28; 128; 130; 135
               ⦖);
            137 :≡ (Cons 0,[],NONE);
            call_sense
              (138,⦕ 0; 2; 8; 10; 12; 14; 16; 18; 20; 22; 24; 26; 28; 130 ⦖)
              [28] NONE;
            makespace 12
              ⦕ 0; 2; 8; 10; 12; 14; 16; 18; 20; 22; 24; 26; 28; 130; 138 ⦖;
            148 :≡ (Cons 0,[],NONE);
            149 :≡ (Cons 0,[8; 148],NONE);
            150 :≡ (Cons 0,[28; 149],NONE);
            151 :≡ (Cons 0,[22; 150],NONE);
            152 :≡ (Cons 0,[10; 151],NONE);
            call_concat
              (153,
               ⦕ 0; 2; 8; 10; 12; 14; 16; 18; 20; 22; 24; 26; 28; 130; 138 ⦖)
              [152] NONE;
            makespace 12
              ⦕
                0; 2; 8; 10; 12; 14; 16; 18; 20; 22; 24; 26; 28; 130; 138; 153
              ⦖;
            154 :≡ (Cons 0,[],NONE);
            155 :≡ (Cons 0,[2; 154],NONE);
            156 :≡ (Cons 0,[0; 155],NONE);
            157 :≡ (Cons 0,[130; 156],NONE);
            158 :≡ (Cons 0,[138; 157],NONE);
            call_concat
              (159,
               ⦕ 2; 8; 10; 12; 14; 16; 18; 20; 22; 24; 26; 28; 130; 138; 153 ⦖)
              [158] NONE;
            makespace 3
              ⦕
                2; 8; 10; 12; 14; 16; 18; 20; 22; 24; 26; 28; 130; 138; 153;
                159
              ⦖;
            160 :≡ (Cons 0,[159; 159],NONE);
            call_zip
              (161,
               ⦕ 2; 8; 10; 12; 14; 16; 18; 20; 22; 24; 26; 28; 130; 138; 153 ⦖)
              [160] NONE;
            makespace 3
              ⦕
                2; 8; 10; 12; 14; 16; 18; 20; 22; 24; 26; 28; 130; 138; 153;
                161
              ⦖;
            162 :≡ (Cons 0,[153; 161],NONE);
            call_zip
              (163,⦕ 2; 8; 10; 12; 14; 16; 18; 20; 22; 24; 26; 28; 130; 138 ⦖)
              [162] NONE;
            call_cwfsem_bi_val
              (164,⦕ 2; 8; 10; 12; 14; 16; 18; 20; 22; 24; 26; 28; 130; 138 ⦖)
              [163; 14] NONE;
            if_var 164
              do
                181 :≡ (Const 1,[],NONE);
                182 :≡ (El,[26; 181],NONE);
                183 :≡ (EqualInt 2,[182],NONE);
                if_var 183
                  do
                    184 :≡ (Const 0,[],NONE);
                    185 :≡ (El,[26; 184],NONE);
                    call (186,⦕ 2; 10; 12; 16; 18; 22; 24; 28; 130; 138 ⦖) NONE
                      [8; 20; 14; 26; 185] NONE;
                    move 188 186
                  od
                  do
                    call_bvl_stub_2
                      (187,⦕ 2; 10; 12; 16; 18; 22; 24; 28; 130; 138 ⦖)
                      [8; 20; 14; 26] NONE;
                    move 188 187
                  od;
                189 :≡ (Const 1,[],NONE);
                190 :≡ (El,[188; 189],NONE);
                191 :≡ (EqualInt 9,[190],NONE);
                if_var 191
                  do
                    192 :≡ (Const 0,[],NONE);
                    193 :≡ (El,[188; 192],NONE);
                    tailcall NONE [138; 130; 2; 18; 12; 24; 10; ... ; ... ]
                  od
                  (tailcall_bvl_stub_9
                     [138; 130; 2; 18; 12; 24; 10; 22; 16; ... ; ... ])
              od
              do
                197 :≡ (Const 0,[],NONE);
                198 :≡ (Const 15,[],NONE);
                199 :≡ (RefByte T,[198; 197],SOME ⦕ 197; 198 ⦖);
                200 :≡ (Const 80,[],NONE);
                201 :≡ (Const 0,[],NONE);
                202 :≡ (UpdateByte,[199; 201; 200],NONE);
                203 :≡ (Const 108,[],NONE);
                204 :≡ (Const 1,[],NONE);
                205 :≡ (UpdateByte,[199; 204; 203],NONE);
                206 :≡ (Const 97,[],NONE);
                207 :≡ (Const 2,[],NONE);
                208 :≡ (UpdateByte,[199; 207; 206],NONE);
                209 :≡ (Const 110,[],NONE);
                210 :≡ (Const 3,[],NONE);
                211 :≡ (UpdateByte,[199; 210; 209],NONE);
                212 :≡ (Const 116,[],NONE);
                213 :≡ (Const 4,[],NONE);
                214 :≡ (UpdateByte,[199; 213; 212],NONE);
                215 :≡ (Const 32,[],NONE);
                216 :≡ (Const 5,[],NONE);
                217 :≡ (UpdateByte,[199; 216; 215],NONE);
                218 :≡ (Const 86,[],NONE);
                219 :≡ (Const 6,[],NONE);
                220 :≡ (UpdateByte,[199; 219; 218],NONE);
                221 :≡ (Const 105,[],NONE);
                222 :≡ (Const 7,[],NONE);
                223 :≡ (UpdateByte,[199; 222; 221],NONE);
                224 :≡ (Const 111,[],NONE);
                225 :≡ (Const 8,[],NONE);
                226 :≡ (UpdateByte,[199; 225; 224],NONE);
                227 :≡ (Const 108,[],NONE);
                228 :≡ (Const 9,[],NONE);
                229 :≡ (UpdateByte,[199; 228; 227],NONE);
                230 :≡ (Const 97,[],NONE);
                231 :≡ (Const 10,[],NONE);
                232 :≡ (UpdateByte,[199; 231; 230],NONE);
                233 :≡ (Const 116,[],NONE);
                234 :≡ (Const 11,[],NONE);
                235 :≡ (UpdateByte,[199; 234; 233],NONE);
                236 :≡ (Const 105,[],NONE);
                237 :≡ (Const 12,[],NONE);
                238 :≡ (UpdateByte,[199; 237; 236],NONE);
                239 :≡ (Const 111,[],NONE);
                240 :≡ (Const 13,[],NONE);
                241 :≡ (UpdateByte,[199; 240; 239],NONE);
                242 :≡ (Const 110,[],NONE);
                243 :≡ (Const 14,[],NONE);
                244 :≡ (UpdateByte,[199; 243; 242],NONE);
                tailcall_violation [199]
              od
          od
      od
  od

monitor_loop_body_clos_1 [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10] =
  do
    makespace 14 ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10 ⦖;
    22 :≡ (Const 2,[],NONE);
    23 :≡ (Label_monitor_loop_body_clos_0,[],NONE);
    24 :≡ (Cons 30,[23; 22; 7; 3; 1; 9; 5; 0; 8; 4; 2; 10; 6],NONE);
    return 24
  od

monitor_loop_clos_0 [0; 1] =
  do
    3 :≡ (Const 2,[],NONE);
    4 :≡ (El,[1; 3],NONE);
    5 :≡ (Const 3,[],NONE);
    6 :≡ (El,[1; 5],NONE);
    7 :≡ (Const 4,[],NONE);
    8 :≡ (El,[1; 7],NONE);
    9 :≡ (Const 5,[],NONE);
    10 :≡ (El,[1; 9],NONE);
    11 :≡ (Const 6,[],NONE);
    12 :≡ (El,[1; 11],NONE);
    13 :≡ (Const 7,[],NONE);
    14 :≡ (El,[1; 13],NONE);
    15 :≡ (Const 8,[],NONE);
    16 :≡ (El,[1; 15],NONE);
    17 :≡ (Const 9,[],NONE);
    18 :≡ (El,[1; 17],NONE);
    19 :≡ (Const 10,[],NONE);
    20 :≡ (El,[1; 19],NONE);
    21 :≡ (Const 11,[],NONE);
    22 :≡ (El,[1; 21],NONE);
    call_const (23,⦕ 0; 4; 6; 8; 10; 12; 14; 16; 18; 20; 22 ⦖) [22] NONE;
    call_ctrl (24,⦕ 0; 4; 6; 8; 10; 12; 14; 16; 18; 20; 22; 23 ⦖) [6] NONE;
    call_sense (25,⦕ 0; 4; 6; 8; 10; 12; 14; 16; 18; 20; 22; 23; 24 ⦖) [12]
      NONE;
    makespace 9 ⦕ 0; 4; 6; 8; 10; 12; 14; 16; 18; 20; 22; 23; 24; 25 ⦖;
    33 :≡ (Cons 0,[],NONE);
    34 :≡ (Cons 0,[22; 33],NONE);
    35 :≡ (Cons 0,[6; 34],NONE);
    36 :≡ (Cons 0,[12; 35],NONE);
    call_concat (37,⦕ 0; 4; 6; 8; 10; 12; 14; 16; 18; 20; 22; 23; 24; 25 ⦖)
      [36] NONE;
    makespace 9 ⦕ 0; 4; 6; 8; 10; 12; 14; 16; 18; 20; 22; 23; 24; 25; 37 ⦖;
    38 :≡ (Cons 0,[],NONE);
    39 :≡ (Cons 0,[23; 38],NONE);
    40 :≡ (Cons 0,[24; 39],NONE);
    41 :≡ (Cons 0,[25; 40],NONE);
    call_concat (42,⦕ 0; 4; 6; 8; 10; 12; 14; 16; 18; 20; 22; 23; 24; 25; 37 ⦖)
      [41] NONE;
    makespace 3 ⦕ 0; 4; 6; 8; 10; 12; 14; 16; 18; 20; 22; 23; 24; 25; 37; 42 ⦖;
    43 :≡ (Cons 0,[42; 42],NONE);
    call_zip (44,⦕ 0; 4; 6; 8; 10; 12; 14; 16; 18; 20; 22; 23; 24; 25; 37 ⦖)
      [43] NONE;
    makespace 3 ⦕ 0; 4; 6; 8; 10; 12; 14; 16; 18; 20; 22; 23; 24; 25; 37; 44 ⦖;
    45 :≡ (Cons 0,[37; 44],NONE);
    call_zip (46,⦕ 0; 4; 6; 8; 10; 12; 14; 16; 18; 20; 22; 23; 24; 25 ⦖) [45]
      NONE;
    call_cwfsem_bi_val (47,⦕ 0; 4; 6; 8; 12; 14; 16; 18; 20; 22; 23; 24; 25 ⦖)
      [46; 10] NONE;
    if_var 47
      do
        61 :≡ (Const 306,[],NONE);
        62 :≡ (GlobalsPtr,[],NONE);
        63 :≡ (El,[62; 61],NONE);
        64 :≡ (Const 1,[],NONE);
        65 :≡ (El,[63; 64],NONE);
        66 :≡ (EqualInt 2,[65],NONE);
        if_var 66
          do
            67 :≡ (Const 0,[],NONE);
            68 :≡ (El,[63; 67],NONE);
            call (69,⦕ 0; 6; 8; 12; 14; 18; 20; 23; 24; 25 ⦖) NONE
              [22; 4; 16; 63; 68] NONE;
            move 71 69
          od
          do
            call_bvl_stub_2 (70,⦕ 0; 6; 8; 12; 14; 18; 20; 23; 24; 25 ⦖)
              [22; 4; 16; 63] NONE;
            move 71 70
          od;
        72 :≡ (Const 1,[],NONE);
        73 :≡ (El,[71; 72],NONE);
        74 :≡ (EqualInt 9,[73],NONE);
        if_var 74
          do
            75 :≡ (Const 0,[],NONE);
            76 :≡ (El,[71; 75],NONE);
            tailcall NONE [25; 24; 23; 0; 14; 8; 20; 6; 18; 12; 71; ... ]
          od (tailcall_bvl_stub_9 [25; 24; 23; 0; 14; 8; 20; 6; 18; 12; 71])
      od
      do
        80 :≡ (Const 0,[],NONE);
        81 :≡ (Const 14,[],NONE);
        82 :≡ (RefByte T,[81; 80],SOME ⦕ 80; 81 ⦖);
        83 :≡ (Const 73,[],NONE);
        84 :≡ (Const 0,[],NONE);
        85 :≡ (UpdateByte,[82; 84; 83],NONE);
        86 :≡ (Const 110,[],NONE);
        87 :≡ (Const 1,[],NONE);
        88 :≡ (UpdateByte,[82; 87; 86],NONE);
        89 :≡ (Const 105,[],NONE);
        90 :≡ (Const 2,[],NONE);
        91 :≡ (UpdateByte,[82; 90; 89],NONE);
        92 :≡ (Const 116,[],NONE);
        93 :≡ (Const 3,[],NONE);
        94 :≡ (UpdateByte,[82; 93; 92],NONE);
        95 :≡ (Const 32,[],NONE);
        96 :≡ (Const 4,[],NONE);
        97 :≡ (UpdateByte,[82; 96; 95],NONE);
        98 :≡ (Const 86,[],NONE);
        99 :≡ (Const 5,[],NONE);
        100 :≡ (UpdateByte,[82; 99; 98],NONE);
        101 :≡ (Const 105,[],NONE);
        102 :≡ (Const 6,[],NONE);
        103 :≡ (UpdateByte,[82; 102; 101],NONE);
        104 :≡ (Const 111,[],NONE);
        105 :≡ (Const 7,[],NONE);
        106 :≡ (UpdateByte,[82; 105; 104],NONE);
        107 :≡ (Const 108,[],NONE);
        108 :≡ (Const 8,[],NONE);
        109 :≡ (UpdateByte,[82; 108; 107],NONE);
        110 :≡ (Const 97,[],NONE);
        111 :≡ (Const 9,[],NONE);
        112 :≡ (UpdateByte,[82; 111; 110],NONE);
        113 :≡ (Const 116,[],NONE);
        114 :≡ (Const 10,[],NONE);
        115 :≡ (UpdateByte,[82; 114; 113],NONE);
        116 :≡ (Const 105,[],NONE);
        117 :≡ (Const 11,[],NONE);
        118 :≡ (UpdateByte,[82; 117; 116],NONE);
        119 :≡ (Const 111,[],NONE);
        120 :≡ (Const 12,[],NONE);
        121 :≡ (UpdateByte,[82; 120; 119],NONE);
        122 :≡ (Const 110,[],NONE);
        123 :≡ (Const 13,[],NONE);
        124 :≡ (UpdateByte,[82; 123; 122],NONE);
        tailcall_violation [82]
      od
  od

monitor_loop_clos_1 [0; 1; 2; 3; 4; 5; 6; 7; 8; 9; 10] =
  tailcall_monitor_loop [0; 1; 2; 3; 4; 5; 6; 7; 8; 9]

monitor_loop [0; 1; 2; 3; 4; 5; 6; 7; 8; 9] =
  do
    makespace 13 ⦕ 0; 1; 2; 3; 4; 5; 6; 7; 8; 9 ⦖;
    10 :≡ (Const 0,[],NONE);
    11 :≡ (Label_monitor_loop_clos_0,[],NONE);
    12 :≡ (Cons 30,[11; 10; 7; 3; 1; 9; 5; 0; 8; 4; 2; 6],NONE);
    return 12
  od

bot_main_clos [0; 1] =
  tailcall_bot_main [0]

bot_main [0] =
  do
    1 :≡ (Const 318,[],NONE);
    2 :≡ (GlobalsPtr,[],NONE);
    3 :≡ (El,[2; 1],NONE);
    4 :≡ (Const 314,[],NONE);
    5 :≡ (GlobalsPtr,[],NONE);
    6 :≡ (El,[5; 4],NONE);
    7 :≡ (Const 313,[],NONE);
    8 :≡ (GlobalsPtr,[],NONE);
    9 :≡ (El,[8; 7],NONE);
    10 :≡ (Const 310,[],NONE);
    11 :≡ (GlobalsPtr,[],NONE);
    12 :≡ (El,[11; 10],NONE);
    13 :≡ (Const 311,[],NONE);
    14 :≡ (GlobalsPtr,[],NONE);
    15 :≡ (El,[14; 13],NONE);
    16 :≡ (Const 312,[],NONE);
    17 :≡ (GlobalsPtr,[],NONE);
    18 :≡ (El,[17; 16],NONE);
    19 :≡ (Const 309,[],NONE);
    20 :≡ (GlobalsPtr,[],NONE);
    21 :≡ (El,[20; 19],NONE);
    22 :≡ (Const 308,[],NONE);
    23 :≡ (GlobalsPtr,[],NONE);
    24 :≡ (El,[23; 22],NONE);
    25 :≡ (Const 316,[],NONE);
    26 :≡ (GlobalsPtr,[],NONE);
    27 :≡ (El,[26; 25],NONE);
    28 :≡ (Const 317,[],NONE);
    29 :≡ (GlobalsPtr,[],NONE);
    30 :≡ (El,[29; 28],NONE);
    31 :≡ (Const 315,[],NONE);
    32 :≡ (GlobalsPtr,[],NONE);
    33 :≡ (El,[32; 31],NONE);
    34 :≡ (Const 307,[],NONE);
    35 :≡ (GlobalsPtr,[],NONE);
    36 :≡ (El,[35; 34],NONE);
    37 :≡ (Const 1,[],NONE);
    38 :≡ (El,[36; 37],NONE);
    39 :≡ (EqualInt 0,[38],NONE);
    if_var 39
      do
        40 :≡ (Const 0,[],NONE);
        41 :≡ (El,[36; 40],NONE);
        call (42,⦕ 3; 6; 9; 12; 15; 18; 21; 24; 27; 30 ⦖) NONE [33; 36; 41]
          NONE;
        move 44 42
      od
      do
        call_bvl_stub_0 (43,⦕ 3; 6; 9; 12; 15; 18; 21; 24; 27; 30 ⦖) [33; 36]
          NONE;
        move 44 43
      od;
    45 :≡ (Const 1,[],NONE);
    46 :≡ (El,[44; 45],NONE);
    47 :≡ (EqualInt 9,[46],NONE);
    if_var 47
      do
        48 :≡ (Const 0,[],NONE);
        49 :≡ (El,[44; 48],NONE);
        tailcall NONE [3; 6; 9; 12; 15; 18; 21; 24; 27; 30; 44; 49]
      od (tailcall_bvl_stub_9 [3; 6; 9; 12; 15; 18; 21; 24; 27; 30; 44])
  od
