
@article{xia_executable_nodate,
	title = {Executable Denotational Semantics With Interaction Trees},
	abstract = {Interaction trees are a representation of effectful and reactive systemsdesigned to be implemented in a proof assistant such as Coq. They are equipped with a rich algebra of combinators to construct recursive and effectful computations and to reason about them equationally. Interaction trees are also an executable structure, notably via extraction, which enables testing and directly developing executable programs in Coq. To demonstrate the usefulness of interaction trees, two applications are presented. First, I develop a novel approach to verify a compiler from a simple imperative language to assembly, by proving a semantic preservation theorem which is termination-sensitive, using an equational proof. Second, I present a framework of concurrent objects, inheriting the modularity, compositionality, and executability of interaction trees. Leveraging that framework, I formally prove the correctness of a transactionally predicated map, using a novel approach to reason about objects combining the notions of linearizability and strict serializability, two well-known correctness conditions for concurrent objects.},
	pages = {107},
	author = {Xia, Li-Yao},
	langid = {english},
	file = {Xia - Executable Denotational Semantics With Interaction.pdf:/home/ben/Zotero/storage/ZPBLFC4N/Xia - Executable Denotational Semantics With Interaction.pdf:application/pdf},
}
