(*
  Auto-generated by Daisy (https://gitlab.mpi-sws.org/AVA/daisy
  *)
(* INCLUDES, do not change those *)
open exampleLib;

val _ = new_theory "test04_dqmom9ProgComp";

val _ = translation_extends "cfSupport";

Definition theAST_pre_def:
  theAST_pre = \ (x:(string, string) id).
  if x = Short "a1" then (((1)/(100000), (1)/(1)):real#real)
  else if x = Short "a2" then (((1)/(100000), (1)/(1)):real#real)
  else if x = Short "m0" then (((-1)/(1), (1)/(1)):real#real)
  else if x = Short "m1" then (((-1)/(1), (1)/(1)):real#real)
  else if x = Short "m2" then (((-1)/(1), (1)/(1)):real#real)
  else if x = Short "w0" then (((1)/(100000), (1)/(1)):real#real)
  else if x = Short "w1" then (((1)/(100000), (1)/(1)):real#real)
  else if x = Short "w2" then (((1)/(100000), (1)/(1)):real#real)
  else if x = Short "a0" then (((1)/(100000), (1)/(1)):real#real)
  else (0,0)
End

Definition theAST_def:
  theAST =
  [ Dlet unknown_loc (Pvar "test04_dqmom9")
    (Fun "m0"(Fun "m1"(Fun "m2"(Fun "w0"(Fun "w1"(Fun "w2"(Fun "a0"(Fun "a1"(Fun "a2"
      (FpOptimise Opt
        (Let (SOME "v2")
        (App (FP_bop FP_Mul)
          [
            (App (FP_bop FP_Mul)
            [
              Var (Short  "w2");
              (App (FP_bop FP_Sub)
              [
                (App FpFromWord [Lit (Word64 (0w:word64))]);
                Var (Short  "m2")
              ])
            ]);
            (App (FP_bop FP_Mul)
            [
              (App FpFromWord [Lit (Word64 (13837309855095848960w:word64))]);
              (App (FP_bop FP_Mul)
              [
                (App (FP_bop FP_Mul)
                [
                  (App FpFromWord [Lit (Word64 (4607182418800017408w:word64))]);
                  (App (FP_bop FP_Div)
                  [
                    Var (Short  "a2");
                    Var (Short  "w2")
                  ])
                ]);
                (App (FP_bop FP_Div)
                [
                  Var (Short  "a2");
                  Var (Short  "w2")
                ])
              ])
            ])
          ])
        (          (Let (SOME "v1")
          (App (FP_bop FP_Mul)
            [
              (App (FP_bop FP_Mul)
              [
                Var (Short  "w1");
                (App (FP_bop FP_Sub)
                [
                  (App FpFromWord [Lit (Word64 (0w:word64))]);
                  Var (Short  "m1")
                ])
              ]);
              (App (FP_bop FP_Mul)
              [
                (App FpFromWord [Lit (Word64 (13837309855095848960w:word64))]);
                (App (FP_bop FP_Mul)
                [
                  (App (FP_bop FP_Mul)
                  [
                    (App FpFromWord [Lit (Word64 (4607182418800017408w:word64))]);
                    (App (FP_bop FP_Div)
                    [
                      Var (Short  "a1");
                      Var (Short  "w1")
                    ])
                  ]);
                  (App (FP_bop FP_Div)
                  [
                    Var (Short  "a1");
                    Var (Short  "w1")
                  ])
                ])
              ])
            ])
          (            (Let (SOME "v0")
            (App (FP_bop FP_Mul)
              [
                (App (FP_bop FP_Mul)
                [
                  Var (Short  "w0");
                  (App (FP_bop FP_Sub)
                  [
                    (App FpFromWord [Lit (Word64 (0w:word64))]);
                    Var (Short  "m0")
                  ])
                ]);
                (App (FP_bop FP_Mul)
                [
                  (App FpFromWord [Lit (Word64 (13837309855095848960w:word64))]);
                  (App (FP_bop FP_Mul)
                  [
                    (App (FP_bop FP_Mul)
                    [
                      (App FpFromWord [Lit (Word64 (4607182418800017408w:word64))]);
                      (App (FP_bop FP_Div)
                      [
                        Var (Short  "a0");
                        Var (Short  "w0")
                      ])
                    ]);
                    (App (FP_bop FP_Div)
                    [
                      Var (Short  "a0");
                      Var (Short  "w0")
                    ])
                  ])
                ])
              ])
            ((App (FP_bop FP_Add)
              [
                (App FpFromWord [Lit (Word64 (0w:word64))]);
                (App (FP_bop FP_Add)
                [
                  (App (FP_bop FP_Mul)
                  [
                    Var (Short  "v0");
                    (App FpFromWord [Lit (Word64 (4607182418800017408w:word64))])
                  ]);
                  (App (FP_bop FP_Add)
                  [
                    (App (FP_bop FP_Mul)
                    [
                      Var (Short  "v1");
                      (App FpFromWord [Lit (Word64 (4607182418800017408w:word64))])
                    ]);
                    (App (FP_bop FP_Add)
                    [
                      (App (FP_bop FP_Mul)
                      [
                        Var (Short  "v2");
                        (App FpFromWord [Lit (Word64 (4607182418800017408w:word64))])
                      ]);
                      (App FpFromWord [Lit (Word64 (0w:word64))])
                    ])
                  ])
                ])
              ])))))))))))))))))]
End

Definition theErrBound_def:
  theErrBound = inv (2 pow (5))
End

val x = define_benchmark theAST_def theAST_pre_def true;

val _ = export_theory()