OPTIONS = QUIT_ON_FAILURE
INCLUDES = .. ../.. ../../proofs ../../../misc ../../ffi ../../../misc/lem_lib_stub

THYFILES = $(patsubst %Script.sml,%Theory.uo,$(wildcard *.sml))
TARGETS0 = $(patsubst %Theory.sml,,$(THYFILES))
TARGETS = $(patsubst %.sml,%.uo,$(TARGETS0))

all: $(TARGETS)
.PHONY: all

SEMI = ../tokens ../ast ../semanticPrimitives bigStep
SRC = bigSmallInvariants
LEMI = $(patsubst %,../%.lem,$(SEMI))
LEMS = $(patsubst %,%.lem,$(SRC))
GENS = $(patsubst %,%Script.sml,$(SRC))
LEM_OPT = -wl_unused_vars ign

$(GENS) : ../../../misc/lem_lib_stub/lib.lem $(LEMI) $(LEMS) ../../ffi/ffi.lem
	if type lem;\
	then lem $(LEM_OPT) -suppress_renaming -auxiliary_level none -i ../../ffi/ffi.lem -i ../../../misc/lem_lib_stub/lib.lem $(patsubst %,-i %,$(LEMI)) $(patsubst %,-hol %,$(LEMS));\
	else touch $(GENS); fi

README_SOURCES = $(wildcard *Script.sml) $(wildcard *Lib.sml) $(wildcard *Syntax.sml)
DIRS = $(wildcard */)
README.md: $(CAKEMLDIR)/developers/readme_gen readmePrefix $(patsubst %,%readmePrefix,$(DIRS)) $(README_SOURCES)
	$(CAKEMLDIR)/developers/readme_gen $(README_SOURCES)
all: README.md

ifdef POLY
HOLHEAP = heap
PARENTHEAP = ../heap
EXTRA_CLEANS = $(HOLHEAP) $(HOLHEAP).o

all: $(HOLHEAP)

BARE_THYS = ../bigStepTheory ../smallStepTheory ../../proofs/semanticPrimitivesPropsTheory
DEPS = $(patsubst %,%.uo,$(BARE_THYS)) $(PARENTHEAP)

$(HOLHEAP): $(DEPS)
	$(protect $(HOLDIR)/bin/buildheap) -b $(PARENTHEAP) -o $(HOLHEAP) $(BARE_THYS)
endif
